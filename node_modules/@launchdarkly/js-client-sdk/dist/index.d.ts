import { B as BrowserOptions, L as LDClient } from './common-Duna6UXR.js';
export { b as LDIdentifyOptions, a as LDPlugin, c as basicLogger } from './common-Duna6UXR.js';
export { AutoEnvAttributes, BasicLogger, BasicLoggerOptions, EvaluationSeriesContext, EvaluationSeriesData, Hook, HookMetadata, IdentifySeriesContext, IdentifySeriesData, IdentifySeriesResult, IdentifySeriesStatus, LDContext, LDContextCommon, LDContextMeta, LDEvaluationDetail, LDEvaluationDetailTyped, LDEvaluationReason, LDFlagSet, LDFlagValue, LDInspection, LDLogLevel, LDLogger, LDMultiKindContext, LDPluginApplicationMetadata, LDPluginBase, LDPluginEnvironmentMetadata, LDPluginMetadata, LDPluginSdkMetadata, LDSingleKindContext, LDTimeoutError, TrackSeriesContext } from '@launchdarkly/js-client-sdk-common';

/**
 * Creates an instance of the LaunchDarkly client.
 *
 * Usage:
 * ```
 * import { initialize } from 'launchdarkly-js-client-sdk';
 * const client = initialize(clientSideId, context, options);
 * ```
 *
 * @param clientSideId
 *   The client-side ID, also known as the environment ID.
 * @param options
 *   Optional configuration settings.
 * @return
 *   The new client instance.
 */
declare function initialize(clientSideId: string, options?: BrowserOptions): LDClient;

export { LDClient, BrowserOptions as LDOptions, initialize };
