import { LDApplication, LDContext, LDDevice, LDSingleKindContext, Platform } from '@launchdarkly/js-sdk-common';
import { Configuration } from '../configuration';
export declare const toMulti: (c: LDSingleKindContext) => {
    [x: string]: string | {
        [attribute: string]: any;
        key: string;
        name?: string | undefined;
        _meta?: import("@launchdarkly/js-sdk-common").LDContextMeta | undefined;
        anonymous?: boolean | undefined;
    };
    kind: string;
};
/**
 * Clones the LDApplication object and populates the key, envAttributesVersion, id and version fields.
 *
 * @param crypto
 * @param info
 * @param applicationInfo
 * @param config
 * @return An LDApplication object with populated key, envAttributesVersion, id and version.
 */
export declare const addApplicationInfo: ({ crypto, info }: Platform, { applicationInfo }: Configuration) => Promise<LDApplication | undefined>;
/**
 * Clones the LDDevice object and populates the key and envAttributesVersion field.
 *
 * @param platform
 * @return An LDDevice object with populated key and envAttributesVersion.
 */
export declare const addDeviceInfo: (platform: Platform) => Promise<LDDevice | undefined>;
export declare const addAutoEnv: (context: LDContext, platform: Platform, config: Configuration) => Promise<LDContext>;
//# sourceMappingURL=addAutoEnv.d.ts.map