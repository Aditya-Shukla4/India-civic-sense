import { Encoding, HttpErrorResponse, LDHeaders, Requests, ServiceEndpoints } from '@launchdarkly/js-sdk-common';
import { DataSourcePaths } from './DataSourceConfig';
export declare class LDRequestError extends Error implements HttpErrorResponse {
    status?: number;
    constructor(message: string, status?: number);
}
/**
 * Note: The requestor is implemented independently from polling such that it can be used to
 * make a one-off request.
 */
export default class Requestor {
    private _requests;
    private readonly _uri;
    private readonly _headers;
    private readonly _method;
    private readonly _body?;
    constructor(_requests: Requests, _uri: string, _headers: {
        [key: string]: string;
    }, _method: string, _body?: string | undefined);
    requestPayload(): Promise<string>;
}
export declare function makeRequestor(plainContextString: string, serviceEndpoints: ServiceEndpoints, paths: DataSourcePaths, requests: Requests, encoding: Encoding, baseHeaders?: LDHeaders, baseQueryParams?: {
    key: string;
    value: string;
}[], withReasons?: boolean, useReport?: boolean, secureModeHash?: string): Requestor;
//# sourceMappingURL=Requestor.d.ts.map