import { Context, LDLogger, LDPollingError, LDStreamingError } from '@launchdarkly/js-sdk-common';
import { FlagManager } from '../flag-manager/FlagManager';
import { DeleteFlag, Flags, PatchFlag } from '../types';
import DataSourceStatusManager from './DataSourceStatusManager';
export default class DataSourceEventHandler {
    private readonly _flagManager;
    private readonly _statusManager;
    private readonly _logger;
    constructor(_flagManager: FlagManager, _statusManager: DataSourceStatusManager, _logger: LDLogger);
    handlePut(context: Context, flags: Flags): Promise<void>;
    handlePatch(context: Context, patchFlag: PatchFlag): Promise<void>;
    handleDelete(context: Context, deleteFlag: DeleteFlag): Promise<void>;
    handleStreamingError(error: LDStreamingError): void;
    handlePollingError(error: LDPollingError): void;
}
//# sourceMappingURL=DataSourceEventHandler.d.ts.map