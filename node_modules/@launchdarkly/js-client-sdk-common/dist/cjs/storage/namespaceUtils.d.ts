import { Context, Crypto } from '@launchdarkly/js-sdk-common';
export type Namespace = 'LaunchDarkly' | 'AnonymousKeys' | 'ContextKeys' | 'ContextIndex';
export declare function concatNamespacesAndValues(parts: {
    value: Namespace | string;
    transform: (value: string) => Promise<string>;
}[]): Promise<string>;
export declare function namespaceForEnvironment(crypto: Crypto, sdkKey: string): Promise<string>;
/**
 * @deprecated prefer {@link namespaceForGeneratedContextKey}. At one time we only generated keys for
 * anonymous contexts and they were namespaced in LaunchDarkly_AnonymousKeys.  Eventually we started
 * generating context keys for non-anonymous contexts such as for the Auto Environment Attributes
 * feature and those were namespaced in LaunchDarkly_ContextKeys.  This function can be removed
 * when the data under the LaunchDarkly_AnonymousKeys namespace is merged with data under the
 * LaunchDarkly_ContextKeys namespace.
 */
export declare function namespaceForAnonymousGeneratedContextKey(kind: string): Promise<string>;
export declare function namespaceForGeneratedContextKey(kind: string): Promise<string>;
export declare function namespaceForContextIndex(environmentNamespace: string): Promise<string>;
export declare function namespaceForContextData(crypto: Crypto, environmentNamespace: string, context: Context): Promise<string>;
//# sourceMappingURL=namespaceUtils.d.ts.map