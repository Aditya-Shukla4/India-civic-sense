var ms = Object.defineProperty, Ts = Object.defineProperties;
var Ss = Object.getOwnPropertyDescriptors;
var ge = Object.getOwnPropertySymbols;
var qn = Object.prototype.hasOwnProperty, Wn = Object.prototype.propertyIsEnumerable;
var ir = (e, t, r) => t in e ? ms(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, O = (e, t) => {
  for (var r in t || (t = {}))
    qn.call(t, r) && ir(e, r, t[r]);
  if (ge)
    for (var r of ge(t))
      Wn.call(t, r) && ir(e, r, t[r]);
  return e;
}, P = (e, t) => Ts(e, Ss(t));
var Yn = (e, t) => {
  var r = {};
  for (var n in e)
    qn.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
  if (e != null && ge)
    for (var n of ge(e))
      t.indexOf(n) < 0 && Wn.call(e, n) && (r[n] = e[n]);
  return r;
};
var R = (e, t, r) => ir(e, typeof t != "symbol" ? t + "" : t, r);
var F = (e, t, r) => new Promise((n, i) => {
  var o = (c) => {
    try {
      u(r.next(c));
    } catch (s) {
      i(s);
    }
  }, a = (c) => {
    try {
      u(r.throw(c));
    } catch (s) {
      i(s);
    }
  }, u = (c) => c.done ? n(c.value) : Promise.resolve(c.value).then(o, a);
  u((r = r.apply(e, t)).next());
});
import { X as Lo, Y as Os, Z as Kr, _ as As, A as Po, s as Ut, $ as ot, a0 as No, a1 as Io, a2 as Co, y as bs, a3 as ws, a4 as Rs, a5 as Ls, a6 as Ps, a7 as Ns, a8 as Is, a9 as Cs, u as Ms, aa as or, ab as ar, ac as xs, c as Ds, q as Us, t as Bs, L as ks, M as z, h as Nt, i as Gs, v as Hs, J as $s, ad as js, N as Kn, K as sr, ae as Vs, af as Fs, O as Xs, Q as zs, R as qs, T as Ws, U as Ys, W as Ks, ag as Js, ah as Zs, ai as Jn, aj as Qs, ak as tu, al as eu } from "./common-B4ZaE0sS.js";
import { a as ru, i as Mo } from "./buffer-DIFxvF2Q.js";
import { LDObserve as nu } from "./LDObserve.js";
var xo = { exports: {} }, ur = { exports: {} }, Zn;
function iu() {
  return Zn || (Zn = 1, function(e, t) {
    (function(r, n) {
      e.exports = n();
    })(Lo, function() {
      function r(p) {
        return !isNaN(parseFloat(p)) && isFinite(p);
      }
      function n(p) {
        return p.charAt(0).toUpperCase() + p.substring(1);
      }
      function i(p) {
        return function() {
          return this[p];
        };
      }
      var o = ["isConstructor", "isEval", "isNative", "isToplevel"], a = ["columnNumber", "lineNumber"], u = ["fileName", "functionName", "source"], c = ["args"], s = ["evalOrigin"], f = o.concat(a, u, c, s);
      function l(p) {
        if (p)
          for (var E = 0; E < f.length; E++)
            p[f[E]] !== void 0 && this["set" + n(f[E])](p[f[E]]);
      }
      l.prototype = {
        getArgs: function() {
          return this.args;
        },
        setArgs: function(p) {
          if (Object.prototype.toString.call(p) !== "[object Array]")
            throw new TypeError("Args must be an Array");
          this.args = p;
        },
        getEvalOrigin: function() {
          return this.evalOrigin;
        },
        setEvalOrigin: function(p) {
          if (p instanceof l)
            this.evalOrigin = p;
          else if (p instanceof Object)
            this.evalOrigin = new l(p);
          else
            throw new TypeError("Eval Origin must be an Object or StackFrame");
        },
        toString: function() {
          var p = this.getFileName() || "", E = this.getLineNumber() || "", g = this.getColumnNumber() || "", y = this.getFunctionName() || "";
          return this.getIsEval() ? p ? "[eval] (" + p + ":" + E + ":" + g + ")" : "[eval]:" + E + ":" + g : y ? y + " (" + p + ":" + E + ":" + g + ")" : p + ":" + E + ":" + g;
        }
      }, l.fromString = function(E) {
        var g = E.indexOf("("), y = E.lastIndexOf(")"), b = E.substring(0, g), L = E.substring(g + 1, y).split(","), G = E.substring(y + 1);
        if (G.indexOf("@") === 0)
          var U = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(G, ""), Lt = U[1], Vt = U[2], Pt = U[3];
        return new l({
          functionName: b,
          args: L || void 0,
          fileName: Lt,
          lineNumber: Vt || void 0,
          columnNumber: Pt || void 0
        });
      };
      for (var d = 0; d < o.length; d++)
        l.prototype["get" + n(o[d])] = i(o[d]), l.prototype["set" + n(o[d])] = /* @__PURE__ */ function(p) {
          return function(E) {
            this[p] = !!E;
          };
        }(o[d]);
      for (var h = 0; h < a.length; h++)
        l.prototype["get" + n(a[h])] = i(a[h]), l.prototype["set" + n(a[h])] = /* @__PURE__ */ function(p) {
          return function(E) {
            if (!r(E))
              throw new TypeError(p + " must be a Number");
            this[p] = Number(E);
          };
        }(a[h]);
      for (var _ = 0; _ < u.length; _++)
        l.prototype["get" + n(u[_])] = i(u[_]), l.prototype["set" + n(u[_])] = /* @__PURE__ */ function(p) {
          return function(E) {
            this[p] = String(E);
          };
        }(u[_]);
      return l;
    });
  }(ur)), ur.exports;
}
(function(e, t) {
  (function(r, n) {
    e.exports = n(iu());
  })(Lo, function(n) {
    var i = /(^|@)\S+:\d+/, o = /^\s*at .*(\S+:\d+|\(native\))/m, a = /^(eval@)?(\[native code])?$/;
    return {
      /**
       * Given an Error object, extract the most information from it.
       *
       * @param {Error} error object
       * @return {Array} of StackFrames
       */
      parse: function(c) {
        if (typeof c.stacktrace != "undefined" || typeof c["opera#sourceloc"] != "undefined")
          return this.parseOpera(c);
        if (c.stack && c.stack.match(o))
          return this.parseV8OrIE(c);
        if (c.stack)
          return this.parseFFOrSafari(c);
        throw new Error("Cannot parse given Error object");
      },
      // Separate line and column numbers from a string of the form: (URI:Line:Column)
      extractLocation: function(c) {
        if (c.indexOf(":") === -1)
          return [c];
        var s = /(.+?)(?::(\d+))?(?::(\d+))?$/, f = s.exec(c.replace(/[()]/g, ""));
        return [f[1], f[2] || void 0, f[3] || void 0];
      },
      parseV8OrIE: function(c) {
        var s = c.stack.split(`
`).filter(function(f) {
          return !!f.match(o);
        }, this);
        return s.map(function(f) {
          f.indexOf("(eval ") > -1 && (f = f.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, ""));
          var l = f.replace(/^\s+/, "").replace(/\(eval code/g, "("), d = l.match(/ (\((.+):(\d+):(\d+)\)$)/);
          l = d ? l.replace(d[0], "") : l;
          var h = l.split(/\s+/).slice(1), _ = this.extractLocation(d ? d[1] : h.pop()), p = h.join(" ") || void 0, E = ["eval", "<anonymous>"].indexOf(_[0]) > -1 ? void 0 : _[0];
          return new n({
            functionName: p,
            fileName: E,
            lineNumber: _[1],
            columnNumber: _[2],
            source: f
          });
        }, this);
      },
      parseFFOrSafari: function(c) {
        var s = c.stack.split(`
`).filter(function(f) {
          return !f.match(a);
        }, this);
        return s.map(function(f) {
          if (f.indexOf(" > eval") > -1 && (f = f.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1")), f.indexOf("@") === -1 && f.indexOf(":") === -1)
            return new n({
              functionName: f
            });
          var l = /((.*".+"[^@]*)?[^@]*)(?:@)/, d = f.match(l), h = d && d[1] ? d[1] : void 0, _ = this.extractLocation(f.replace(l, ""));
          return new n({
            functionName: h,
            fileName: _[0],
            lineNumber: _[1],
            columnNumber: _[2],
            source: f
          });
        }, this);
      },
      parseOpera: function(c) {
        return !c.stacktrace || c.message.indexOf(`
`) > -1 && c.message.split(`
`).length > c.stacktrace.split(`
`).length ? this.parseOpera9(c) : c.stack ? this.parseOpera11(c) : this.parseOpera10(c);
      },
      parseOpera9: function(c) {
        for (var s = /Line (\d+).*script (?:in )?(\S+)/i, f = c.message.split(`
`), l = [], d = 2, h = f.length; d < h; d += 2) {
          var _ = s.exec(f[d]);
          _ && l.push(new n({
            fileName: _[2],
            lineNumber: _[1],
            source: f[d]
          }));
        }
        return l;
      },
      parseOpera10: function(c) {
        for (var s = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, f = c.stacktrace.split(`
`), l = [], d = 0, h = f.length; d < h; d += 2) {
          var _ = s.exec(f[d]);
          _ && l.push(
            new n({
              functionName: _[3] || void 0,
              fileName: _[2],
              lineNumber: _[1],
              source: f[d]
            })
          );
        }
        return l;
      },
      // Opera 10.65+ Error.stack very similar to FF/Safari
      parseOpera11: function(c) {
        var s = c.stack.split(`
`).filter(function(f) {
          return !!f.match(i) && !f.match(/^Error created at/);
        }, this);
        return s.map(function(f) {
          var l = f.split("@"), d = this.extractLocation(l.pop()), h = l.shift() || "", _ = h.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0, p;
          h.match(/\(([^)]*)\)/) && (p = h.replace(/^[^(]+\(([^)]*)\)$/, "$1"));
          var E = p === void 0 || p === "[arguments not available]" ? void 0 : p.split(",");
          return new n({
            functionName: _,
            args: E,
            fileName: d[0],
            lineNumber: d[1],
            columnNumber: d[2],
            source: f
          });
        }, this);
      }
    };
  });
})(xo);
var ou = xo.exports;
const Qn = /* @__PURE__ */ Os(ou);
function We(e) {
  try {
    return Qn.parse(e);
  } catch (t) {
    try {
      return Qn.parse(new Error());
    } catch (r) {
      return console.warn("Highlight Warning: failed to parse error", {
        originalError: t,
        secondaryError: r
      }), [];
    }
  }
}
const yy = {
  level: [...Po],
  logger: "console",
  stringifyOptions: {
    depthOfLimit: 10,
    numOfKeysLimit: 100,
    stringLengthLimit: 1e3
  }
};
function au(e, t) {
  const r = t.logger;
  if (!r)
    return () => {
    };
  let n;
  typeof r == "string" ? n = window[r] : n = r;
  const i = [];
  if (t.level.includes("error") && window) {
    const a = (u) => {
      const { message: c, error: s } = u;
      let f = [];
      s && (f = We(s));
      const l = [
        Kr(c, t.stringifyOptions)
      ];
      e({
        type: "Error",
        trace: f,
        time: Date.now(),
        value: l
      });
    };
    window.addEventListener("error", a), i.push(() => {
      window && window.removeEventListener("error", a);
    });
  }
  for (const a of t.level)
    i.push(o(n, a));
  return () => {
    i.forEach((a) => a());
  };
  function o(a, u) {
    return a[u] ? As(a, u, (c) => (...s) => {
      c.apply(this, s);
      try {
        e(su(u, t, ...s));
      } catch (f) {
        c("highlight logger error:", f, ...s);
      }
    }) : () => {
    };
  }
}
function su(e, t, ...r) {
  const n = We(new Error()), i = t.serializeConsoleAttributes ? r.map(
    (o) => typeof o == "object" ? Kr(o, t.stringifyOptions) : o
  ) : r.filter((o) => typeof o != "object").map((o) => `${o}`);
  return {
    type: e,
    trace: n,
    value: i,
    attributes: Kr(
      r.filter((o) => typeof o == "object").reduce((o, a) => O(O({}, o), a), {}),
      t.stringifyOptions
    ),
    time: Date.now()
  };
}
const uu = {
  start: 0,
  end: 3
}, cu = {
  start: 4,
  end: 5
}, cr = {
  start: 6,
  end: 7
}, fr = {
  start: 8,
  end: 8
}, fu = {
  start: 9,
  end: 9
}, lu = {
  start: 10,
  end: 15
};
function du() {
  if (crypto && crypto.getRandomValues) {
    const t = new Uint8Array(16);
    return crypto.getRandomValues(t), [...t.values()];
  }
  const e = [];
  for (let t = 0; t < 16; t += 1)
    e.push(Math.floor(Math.random() * 256));
  return e;
}
function It(e, t) {
  let r = "";
  for (let n = t.start; n <= t.end; n += 1)
    r += e[n].toString(16).padStart(2, "0");
  return r;
}
function pu(e) {
  return e[fr.start] = (e[fr.start] | 128) & 191, e[cr.start] = e[cr.start] & 15 | 64, `${It(e, uu)}-${It(e, cu)}-${It(e, cr)}-${It(e, fr)}${It(e, fu)}-${It(e, lu)}`;
}
function hu() {
  const e = du();
  return pu(e);
}
function Do() {
  return typeof crypto != "undefined" && typeof crypto.randomUUID == "function" ? crypto.randomUUID() : hu();
}
function lr(e, t, r, n) {
  var c, s, f, l;
  let i = n != null ? n : t, o = We(i), a = {};
  t instanceof Error && (t = t.message, t.cause && (a = { "exception.cause": t.cause }));
  const u = vu(o);
  e({
    error: i,
    event: Ut(t),
    type: "window.onerror",
    url: window.location.href,
    source: r != null ? r : "",
    lineNumber: (c = u[0]) != null && c.lineNumber ? (s = u[0]) == null ? void 0 : s.lineNumber : 0,
    columnNumber: (f = u[0]) != null && f.columnNumber ? (l = u[0]) == null ? void 0 : l.columnNumber : 0,
    stackTrace: u,
    timestamp: (/* @__PURE__ */ new Date()).toISOString(),
    payload: a ? Ut(a) : void 0,
    id: Do()
  });
}
const _u = (e, { enablePromisePatch: t }) => {
  if (typeof window == "undefined") return () => {
  };
  const r = window.onerror = (a, u, c, s, f) => {
    lr(e, a, u, f);
  }, n = window.onunhandledrejection = (a) => {
    if (a.reason) {
      const u = a.promise;
      u.getStack ? lr(
        e,
        a.reason,
        a.type,
        u.getStack()
      ) : lr(e, a.reason, a.type);
    }
  }, i = window.Promise, o = class extends i {
    constructor(c) {
      super(c);
      R(this, "promiseCreationError");
      this.promiseCreationError = new Error();
    }
    getStack() {
      return this.promiseCreationError;
    }
    static shouldPatch() {
      const c = typeof window.Zone == "undefined";
      return t && c;
    }
  };
  return o.shouldPatch() && (window.Promise = o), () => {
    window.Promise = i, window.onunhandledrejection = n, window.onerror = r;
  };
}, vu = (e) => {
  var r, n;
  if (e.length === 0)
    return e;
  const t = e[0];
  return (r = t.fileName) != null && r.includes("highlight.run") || (n = t.fileName) != null && n.includes("highlight.io") || t.functionName === "new highlightPromise" ? e.slice(1) : e;
}, Eu = [
  '["\\"Script error.\\""]',
  '"Script error."',
  '["\\"Load failed.\\""]',
  '"Load failed."',
  '["\\"Network request failed.\\""]',
  '"Network request failed."',
  '["\\"Document is not focused.\\""]',
  '"Document is not focused."',
  '["\\"Failed to fetch\\""]',
  '"Failed to fetch"',
  '[{"isTrusted":true}]',
  '{"isTrusted":true}',
  '["{}"]',
  '"{}"',
  '[""]',
  '""',
  '["\\"\\""]',
  '""'
], gu = [
  "websocket error",
  '\\"ResizeObserver loop'
];
var yu = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, gt = "1.9.0", ti = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
function mu(e) {
  var t = /* @__PURE__ */ new Set([e]), r = /* @__PURE__ */ new Set(), n = e.match(ti);
  if (!n)
    return function() {
      return !1;
    };
  var i = {
    major: +n[1],
    minor: +n[2],
    patch: +n[3],
    prerelease: n[4]
  };
  if (i.prerelease != null)
    return function(c) {
      return c === e;
    };
  function o(u) {
    return r.add(u), !1;
  }
  function a(u) {
    return t.add(u), !0;
  }
  return function(c) {
    if (t.has(c))
      return !0;
    if (r.has(c))
      return !1;
    var s = c.match(ti);
    if (!s)
      return o(c);
    var f = {
      major: +s[1],
      minor: +s[2],
      patch: +s[3],
      prerelease: s[4]
    };
    return f.prerelease != null || i.major !== f.major ? o(c) : i.major === 0 ? i.minor === f.minor && i.patch <= f.patch ? a(c) : o(c) : i.minor <= f.minor ? a(c) : o(c);
  };
}
var Tu = mu(gt), Su = gt.split(".")[0], re = Symbol.for("opentelemetry.js.api." + Su), ne = yu;
function fe(e, t, r, n) {
  var i;
  n === void 0 && (n = !1);
  var o = ne[re] = (i = ne[re]) !== null && i !== void 0 ? i : {
    version: gt
  };
  if (!n && o[e]) {
    var a = new Error("@opentelemetry/api: Attempted duplicate registration of API: " + e);
    return r.error(a.stack || a.message), !1;
  }
  if (o.version !== gt) {
    var a = new Error("@opentelemetry/api: Registration of version v" + o.version + " for " + e + " does not match previously registered API v" + gt);
    return r.error(a.stack || a.message), !1;
  }
  return o[e] = t, r.debug("@opentelemetry/api: Registered a global for " + e + " v" + gt + "."), !0;
}
function mt(e) {
  var t, r, n = (t = ne[re]) === null || t === void 0 ? void 0 : t.version;
  if (!(!n || !Tu(n)))
    return (r = ne[re]) === null || r === void 0 ? void 0 : r[e];
}
function le(e, t) {
  t.debug("@opentelemetry/api: Unregistering a global for " + e + " v" + gt + ".");
  var r = ne[re];
  r && delete r[e];
}
var Ou = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Au = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, bu = (
  /** @class */
  function() {
    function e(t) {
      this._namespace = t.namespace || "DiagComponentLogger";
    }
    return e.prototype.debug = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Xt("debug", this._namespace, t);
    }, e.prototype.error = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Xt("error", this._namespace, t);
    }, e.prototype.info = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Xt("info", this._namespace, t);
    }, e.prototype.warn = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Xt("warn", this._namespace, t);
    }, e.prototype.verbose = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Xt("verbose", this._namespace, t);
    }, e;
  }()
);
function Xt(e, t, r) {
  var n = mt("diag");
  if (n)
    return r.unshift(t), n[e].apply(n, Au([], Ou(r), !1));
}
var w;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.ERROR = 30] = "ERROR", e[e.WARN = 50] = "WARN", e[e.INFO = 60] = "INFO", e[e.DEBUG = 70] = "DEBUG", e[e.VERBOSE = 80] = "VERBOSE", e[e.ALL = 9999] = "ALL";
})(w || (w = {}));
function wu(e, t) {
  e < w.NONE ? e = w.NONE : e > w.ALL && (e = w.ALL), t = t || {};
  function r(n, i) {
    var o = t[n];
    return typeof o == "function" && e >= i ? o.bind(t) : function() {
    };
  }
  return {
    error: r("error", w.ERROR),
    warn: r("warn", w.WARN),
    info: r("info", w.INFO),
    debug: r("debug", w.DEBUG),
    verbose: r("verbose", w.VERBOSE)
  };
}
var Ru = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Lu = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Pu = "diag", Z = (
  /** @class */
  function() {
    function e() {
      function t(i) {
        return function() {
          for (var o = [], a = 0; a < arguments.length; a++)
            o[a] = arguments[a];
          var u = mt("diag");
          if (u)
            return u[i].apply(u, Lu([], Ru(o), !1));
        };
      }
      var r = this, n = function(i, o) {
        var a, u, c;
        if (o === void 0 && (o = { logLevel: w.INFO }), i === r) {
          var s = new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");
          return r.error((a = s.stack) !== null && a !== void 0 ? a : s.message), !1;
        }
        typeof o == "number" && (o = {
          logLevel: o
        });
        var f = mt("diag"), l = wu((u = o.logLevel) !== null && u !== void 0 ? u : w.INFO, i);
        if (f && !o.suppressOverrideMessage) {
          var d = (c = new Error().stack) !== null && c !== void 0 ? c : "<failed to generate stacktrace>";
          f.warn("Current logger will be overwritten from " + d), l.warn("Current logger will overwrite one already registered from " + d);
        }
        return fe("diag", l, r, !0);
      };
      r.setLogger = n, r.disable = function() {
        le(Pu, r);
      }, r.createComponentLogger = function(i) {
        return new bu(i);
      }, r.verbose = t("verbose"), r.debug = t("debug"), r.info = t("info"), r.warn = t("warn"), r.error = t("error");
    }
    return e.instance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e;
  }()
), Nu = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Iu = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Cu = (
  /** @class */
  function() {
    function e(t) {
      this._entries = t ? new Map(t) : /* @__PURE__ */ new Map();
    }
    return e.prototype.getEntry = function(t) {
      var r = this._entries.get(t);
      if (r)
        return Object.assign({}, r);
    }, e.prototype.getAllEntries = function() {
      return Array.from(this._entries.entries()).map(function(t) {
        var r = Nu(t, 2), n = r[0], i = r[1];
        return [n, i];
      });
    }, e.prototype.setEntry = function(t, r) {
      var n = new e(this._entries);
      return n._entries.set(t, r), n;
    }, e.prototype.removeEntry = function(t) {
      var r = new e(this._entries);
      return r._entries.delete(t), r;
    }, e.prototype.removeEntries = function() {
      for (var t, r, n = [], i = 0; i < arguments.length; i++)
        n[i] = arguments[i];
      var o = new e(this._entries);
      try {
        for (var a = Iu(n), u = a.next(); !u.done; u = a.next()) {
          var c = u.value;
          o._entries.delete(c);
        }
      } catch (s) {
        t = { error: s };
      } finally {
        try {
          u && !u.done && (r = a.return) && r.call(a);
        } finally {
          if (t) throw t.error;
        }
      }
      return o;
    }, e.prototype.clear = function() {
      return new e();
    }, e;
  }()
), Mu = Symbol("BaggageEntryMetadata"), xu = Z.instance();
function Du(e) {
  return e === void 0 && (e = {}), new Cu(new Map(Object.entries(e)));
}
function Uo(e) {
  return typeof e != "string" && (xu.error("Cannot create baggage metadata from unknown type: " + typeof e), e = ""), {
    __TYPE__: Mu,
    toString: function() {
      return e;
    }
  };
}
function de(e) {
  return Symbol.for(e);
}
var Uu = (
  /** @class */
  /* @__PURE__ */ function() {
    function e(t) {
      var r = this;
      r._currentContext = t ? new Map(t) : /* @__PURE__ */ new Map(), r.getValue = function(n) {
        return r._currentContext.get(n);
      }, r.setValue = function(n, i) {
        var o = new e(r._currentContext);
        return o._currentContext.set(n, i), o;
      }, r.deleteValue = function(n) {
        var i = new e(r._currentContext);
        return i._currentContext.delete(n), i;
      };
    }
    return e;
  }()
), ht = new Uu(), Ot = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Bu = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.createGauge = function(t, r) {
      return zu;
    }, e.prototype.createHistogram = function(t, r) {
      return qu;
    }, e.prototype.createCounter = function(t, r) {
      return Xu;
    }, e.prototype.createUpDownCounter = function(t, r) {
      return Wu;
    }, e.prototype.createObservableGauge = function(t, r) {
      return Ku;
    }, e.prototype.createObservableCounter = function(t, r) {
      return Yu;
    }, e.prototype.createObservableUpDownCounter = function(t, r) {
      return Ju;
    }, e.prototype.addBatchObservableCallback = function(t, r) {
    }, e.prototype.removeBatchObservableCallback = function(t) {
    }, e;
  }()
), Ye = (
  /** @class */
  /* @__PURE__ */ function() {
    function e() {
    }
    return e;
  }()
), ku = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n) {
    }, t;
  }(Ye)
), Gu = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n) {
    }, t;
  }(Ye)
), Hu = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n) {
    }, t;
  }(Ye)
), $u = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n) {
    }, t;
  }(Ye)
), Rn = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.addCallback = function(t) {
    }, e.prototype.removeCallback = function(t) {
    }, e;
  }()
), ju = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Rn)
), Vu = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Rn)
), Fu = (
  /** @class */
  function(e) {
    Ot(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Rn)
), Bo = new Bu(), Xu = new ku(), zu = new Hu(), qu = new $u(), Wu = new Gu(), Yu = new ju(), Ku = new Vu(), Ju = new Fu();
function Zu() {
  return Bo;
}
var lt;
(function(e) {
  e[e.INT = 0] = "INT", e[e.DOUBLE = 1] = "DOUBLE";
})(lt || (lt = {}));
var Qu = {
  get: function(e, t) {
    if (e != null)
      return e[t];
  },
  keys: function(e) {
    return e == null ? [] : Object.keys(e);
  }
}, tc = {
  set: function(e, t, r) {
    e != null && (e[t] = r);
  }
}, ec = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, rc = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, nc = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.active = function() {
      return ht;
    }, e.prototype.with = function(t, r, n) {
      for (var i = [], o = 3; o < arguments.length; o++)
        i[o - 3] = arguments[o];
      return r.call.apply(r, rc([n], ec(i), !1));
    }, e.prototype.bind = function(t, r) {
      return r;
    }, e.prototype.enable = function() {
      return this;
    }, e.prototype.disable = function() {
      return this;
    }, e;
  }()
), ic = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, oc = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, dr = "context", ac = new nc(), Ke = (
  /** @class */
  function() {
    function e() {
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalContextManager = function(t) {
      return fe(dr, t, Z.instance());
    }, e.prototype.active = function() {
      return this._getContextManager().active();
    }, e.prototype.with = function(t, r, n) {
      for (var i, o = [], a = 3; a < arguments.length; a++)
        o[a - 3] = arguments[a];
      return (i = this._getContextManager()).with.apply(i, oc([t, r, n], ic(o), !1));
    }, e.prototype.bind = function(t, r) {
      return this._getContextManager().bind(t, r);
    }, e.prototype._getContextManager = function() {
      return mt(dr) || ac;
    }, e.prototype.disable = function() {
      this._getContextManager().disable(), le(dr, Z.instance());
    }, e;
  }()
), Q;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.SAMPLED = 1] = "SAMPLED";
})(Q || (Q = {}));
var ko = "0000000000000000", Go = "00000000000000000000000000000000", Ho = {
  traceId: Go,
  spanId: ko,
  traceFlags: Q.NONE
}, Zt = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = Ho), this._spanContext = t;
    }
    return e.prototype.spanContext = function() {
      return this._spanContext;
    }, e.prototype.setAttribute = function(t, r) {
      return this;
    }, e.prototype.setAttributes = function(t) {
      return this;
    }, e.prototype.addEvent = function(t, r) {
      return this;
    }, e.prototype.addLink = function(t) {
      return this;
    }, e.prototype.addLinks = function(t) {
      return this;
    }, e.prototype.setStatus = function(t) {
      return this;
    }, e.prototype.updateName = function(t) {
      return this;
    }, e.prototype.end = function(t) {
    }, e.prototype.isRecording = function() {
      return !1;
    }, e.prototype.recordException = function(t, r) {
    }, e;
  }()
), Ln = de("OpenTelemetry Context Key SPAN");
function Pn(e) {
  return e.getValue(Ln) || void 0;
}
function sc() {
  return Pn(Ke.getInstance().active());
}
function Nn(e, t) {
  return e.setValue(Ln, t);
}
function uc(e) {
  return e.deleteValue(Ln);
}
function cc(e, t) {
  return Nn(e, new Zt(t));
}
function $o(e) {
  var t;
  return (t = Pn(e)) === null || t === void 0 ? void 0 : t.spanContext();
}
var fc = /^([0-9a-f]{32})$/i, lc = /^[0-9a-f]{16}$/i;
function jo(e) {
  return fc.test(e) && e !== Go;
}
function dc(e) {
  return lc.test(e) && e !== ko;
}
function pe(e) {
  return jo(e.traceId) && dc(e.spanId);
}
function pc(e) {
  return new Zt(e);
}
var pr = Ke.getInstance(), Vo = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.startSpan = function(t, r, n) {
      n === void 0 && (n = pr.active());
      var i = !!(r != null && r.root);
      if (i)
        return new Zt();
      var o = n && $o(n);
      return hc(o) && pe(o) ? new Zt(o) : new Zt();
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o, a, u;
      if (!(arguments.length < 2)) {
        arguments.length === 2 ? u = r : arguments.length === 3 ? (o = r, u = n) : (o = r, a = n, u = i);
        var c = a != null ? a : pr.active(), s = this.startSpan(t, o, c), f = Nn(c, s);
        return pr.with(f, u, void 0, s);
      }
    }, e;
  }()
);
function hc(e) {
  return typeof e == "object" && typeof e.spanId == "string" && typeof e.traceId == "string" && typeof e.traceFlags == "number";
}
var _c = new Vo(), vc = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      this._provider = t, this.name = r, this.version = n, this.options = i;
    }
    return e.prototype.startSpan = function(t, r, n) {
      return this._getTracer().startSpan(t, r, n);
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o = this._getTracer();
      return Reflect.apply(o.startActiveSpan, o, arguments);
    }, e.prototype._getTracer = function() {
      if (this._delegate)
        return this._delegate;
      var t = this._provider.getDelegateTracer(this.name, this.version, this.options);
      return t ? (this._delegate = t, this._delegate) : _c;
    }, e;
  }()
), Ec = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getTracer = function(t, r, n) {
      return new Vo();
    }, e;
  }()
), gc = new Ec(), ei = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getTracer = function(t, r, n) {
      var i;
      return (i = this.getDelegateTracer(t, r, n)) !== null && i !== void 0 ? i : new vc(this, t, r, n);
    }, e.prototype.getDelegate = function() {
      var t;
      return (t = this._delegate) !== null && t !== void 0 ? t : gc;
    }, e.prototype.setDelegate = function(t) {
      this._delegate = t;
    }, e.prototype.getDelegateTracer = function(t, r, n) {
      var i;
      return (i = this._delegate) === null || i === void 0 ? void 0 : i.getTracer(t, r, n);
    }, e;
  }()
), De;
(function(e) {
  e[e.NOT_RECORD = 0] = "NOT_RECORD", e[e.RECORD = 1] = "RECORD", e[e.RECORD_AND_SAMPLED = 2] = "RECORD_AND_SAMPLED";
})(De || (De = {}));
var ie;
(function(e) {
  e[e.INTERNAL = 0] = "INTERNAL", e[e.SERVER = 1] = "SERVER", e[e.CLIENT = 2] = "CLIENT", e[e.PRODUCER = 3] = "PRODUCER", e[e.CONSUMER = 4] = "CONSUMER";
})(ie || (ie = {}));
var Ue;
(function(e) {
  e[e.UNSET = 0] = "UNSET", e[e.OK = 1] = "OK", e[e.ERROR = 2] = "ERROR";
})(Ue || (Ue = {}));
var S = Ke.getInstance(), v = Z.instance(), yc = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getMeter = function(t, r, n) {
      return Bo;
    }, e;
  }()
), mc = new yc(), hr = "metrics", Tc = (
  /** @class */
  function() {
    function e() {
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalMeterProvider = function(t) {
      return fe(hr, t, Z.instance());
    }, e.prototype.getMeterProvider = function() {
      return mt(hr) || mc;
    }, e.prototype.getMeter = function(t, r, n) {
      return this.getMeterProvider().getMeter(t, r, n);
    }, e.prototype.disable = function() {
      le(hr, Z.instance());
    }, e;
  }()
), K = Tc.getInstance(), Sc = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r) {
    }, e.prototype.extract = function(t, r) {
      return t;
    }, e.prototype.fields = function() {
      return [];
    }, e;
  }()
), In = de("OpenTelemetry Baggage Key");
function Fo(e) {
  return e.getValue(In) || void 0;
}
function Oc() {
  return Fo(Ke.getInstance().active());
}
function Ac(e, t) {
  return e.setValue(In, t);
}
function bc(e) {
  return e.deleteValue(In);
}
var _r = "propagation", wc = new Sc(), Rc = (
  /** @class */
  function() {
    function e() {
      this.createBaggage = Du, this.getBaggage = Fo, this.getActiveBaggage = Oc, this.setBaggage = Ac, this.deleteBaggage = bc;
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalPropagator = function(t) {
      return fe(_r, t, Z.instance());
    }, e.prototype.inject = function(t, r, n) {
      return n === void 0 && (n = tc), this._getGlobalPropagator().inject(t, r, n);
    }, e.prototype.extract = function(t, r, n) {
      return n === void 0 && (n = Qu), this._getGlobalPropagator().extract(t, r, n);
    }, e.prototype.fields = function() {
      return this._getGlobalPropagator().fields();
    }, e.prototype.disable = function() {
      le(_r, Z.instance());
    }, e.prototype._getGlobalPropagator = function() {
      return mt(_r) || wc;
    }, e;
  }()
), x = Rc.getInstance(), vr = "trace", Lc = (
  /** @class */
  function() {
    function e() {
      this._proxyTracerProvider = new ei(), this.wrapSpanContext = pc, this.isSpanContextValid = pe, this.deleteSpan = uc, this.getSpan = Pn, this.getActiveSpan = sc, this.getSpanContext = $o, this.setSpan = Nn, this.setSpanContext = cc;
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalTracerProvider = function(t) {
      var r = fe(vr, this._proxyTracerProvider, Z.instance());
      return r && this._proxyTracerProvider.setDelegate(t), r;
    }, e.prototype.getTracerProvider = function() {
      return mt(vr) || this._proxyTracerProvider;
    }, e.prototype.getTracer = function(t, r) {
      return this.getTracerProvider().getTracer(t, r);
    }, e.prototype.disable = function() {
      le(vr, Z.instance()), this._proxyTracerProvider = new ei();
    }, e;
  }()
), A = Lc.getInstance(), Pc = de("OpenTelemetry SDK Context Key SUPPRESS_TRACING");
function Xo(e) {
  return e.getValue(Pc) === !0;
}
var Nc = "=", Jr = ";", Zr = ",", Er = "baggage", Ic = 180, Cc = 4096, Mc = 8192, xc = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function Dc(e) {
  return e.reduce(function(t, r) {
    var n = "" + t + (t !== "" ? Zr : "") + r;
    return n.length > Mc ? t : n;
  }, "");
}
function Uc(e) {
  return e.getAllEntries().map(function(t) {
    var r = xc(t, 2), n = r[0], i = r[1], o = encodeURIComponent(n) + "=" + encodeURIComponent(i.value);
    return i.metadata !== void 0 && (o += Jr + i.metadata.toString()), o;
  });
}
function Bc(e) {
  var t = e.split(Jr);
  if (!(t.length <= 0)) {
    var r = t.shift();
    if (r) {
      var n = r.indexOf(Nc);
      if (!(n <= 0)) {
        var i = decodeURIComponent(r.substring(0, n).trim()), o = decodeURIComponent(r.substring(n + 1).trim()), a;
        return t.length > 0 && (a = Uo(t.join(Jr))), { key: i, value: o, metadata: a };
      }
    }
  }
}
var kc = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = x.getBaggage(t);
      if (!(!i || Xo(t))) {
        var o = Uc(i).filter(function(u) {
          return u.length <= Cc;
        }).slice(0, Ic), a = Dc(o);
        a.length > 0 && n.set(r, Er, a);
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, Er), o = Array.isArray(i) ? i.join(Zr) : i;
      if (!o)
        return t;
      var a = {};
      if (o.length === 0)
        return t;
      var u = o.split(Zr);
      return u.forEach(function(c) {
        var s = Bc(c);
        if (s) {
          var f = { value: s.value };
          s.metadata && (f.metadata = s.metadata), a[s.key] = f;
        }
      }), Object.entries(a).length === 0 ? t : x.setBaggage(t, x.createBaggage(a));
    }, e.prototype.fields = function() {
      return [Er];
    }, e;
  }()
), Qr;
(function(e) {
  e.AlwaysOff = "always_off", e.AlwaysOn = "always_on", e.ParentBasedAlwaysOff = "parentbased_always_off", e.ParentBasedAlwaysOn = "parentbased_always_on", e.ParentBasedTraceIdRatio = "parentbased_traceidratio", e.TraceIdRatio = "traceidratio";
})(Qr || (Qr = {}));
var Gc = ",", Hc = ["OTEL_SDK_DISABLED"];
function $c(e) {
  return Hc.indexOf(e) > -1;
}
var jc = [
  "OTEL_BSP_EXPORT_TIMEOUT",
  "OTEL_BSP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BSP_MAX_QUEUE_SIZE",
  "OTEL_BSP_SCHEDULE_DELAY",
  "OTEL_BLRP_EXPORT_TIMEOUT",
  "OTEL_BLRP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BLRP_MAX_QUEUE_SIZE",
  "OTEL_BLRP_SCHEDULE_DELAY",
  "OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_LINK_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT",
  "OTEL_EXPORTER_OTLP_TIMEOUT",
  "OTEL_EXPORTER_OTLP_TRACES_TIMEOUT",
  "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT",
  "OTEL_EXPORTER_OTLP_LOGS_TIMEOUT",
  "OTEL_EXPORTER_JAEGER_AGENT_PORT"
];
function Vc(e) {
  return jc.indexOf(e) > -1;
}
var Fc = [
  "OTEL_NO_PATCH_MODULES",
  "OTEL_PROPAGATORS",
  "OTEL_SEMCONV_STABILITY_OPT_IN"
];
function Xc(e) {
  return Fc.indexOf(e) > -1;
}
var gr = 1 / 0, yr = 128, zc = 128, qc = 128, zo = {
  OTEL_SDK_DISABLED: !1,
  CONTAINER_NAME: "",
  ECS_CONTAINER_METADATA_URI_V4: "",
  ECS_CONTAINER_METADATA_URI: "",
  HOSTNAME: "",
  KUBERNETES_SERVICE_HOST: "",
  NAMESPACE: "",
  OTEL_BSP_EXPORT_TIMEOUT: 3e4,
  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BSP_MAX_QUEUE_SIZE: 2048,
  OTEL_BSP_SCHEDULE_DELAY: 5e3,
  OTEL_BLRP_EXPORT_TIMEOUT: 3e4,
  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,
  OTEL_BLRP_SCHEDULE_DELAY: 5e3,
  OTEL_EXPORTER_JAEGER_AGENT_HOST: "",
  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,
  OTEL_EXPORTER_JAEGER_ENDPOINT: "",
  OTEL_EXPORTER_JAEGER_PASSWORD: "",
  OTEL_EXPORTER_JAEGER_USER: "",
  OTEL_EXPORTER_OTLP_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_HEADERS: "",
  OTEL_EXPORTER_OTLP_TRACES_HEADERS: "",
  OTEL_EXPORTER_OTLP_METRICS_HEADERS: "",
  OTEL_EXPORTER_OTLP_LOGS_HEADERS: "",
  OTEL_EXPORTER_OTLP_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 1e4,
  OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://localhost:9411/api/v2/spans",
  OTEL_LOG_LEVEL: w.INFO,
  OTEL_NO_PATCH_MODULES: [],
  OTEL_PROPAGATORS: ["tracecontext", "baggage"],
  OTEL_RESOURCE_ATTRIBUTES: "",
  OTEL_SERVICE_NAME: "",
  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: gr,
  OTEL_ATTRIBUTE_COUNT_LIMIT: yr,
  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: gr,
  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: yr,
  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT: gr,
  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: yr,
  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,
  OTEL_SPAN_LINK_COUNT_LIMIT: 128,
  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT: zc,
  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT: qc,
  OTEL_TRACES_EXPORTER: "",
  OTEL_TRACES_SAMPLER: Qr.ParentBasedAlwaysOn,
  OTEL_TRACES_SAMPLER_ARG: "",
  OTEL_LOGS_EXPORTER: "",
  OTEL_EXPORTER_OTLP_INSECURE: "",
  OTEL_EXPORTER_OTLP_TRACES_INSECURE: "",
  OTEL_EXPORTER_OTLP_METRICS_INSECURE: "",
  OTEL_EXPORTER_OTLP_LOGS_INSECURE: "",
  OTEL_EXPORTER_OTLP_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: "cumulative",
  OTEL_SEMCONV_STABILITY_OPT_IN: []
};
function Wc(e, t, r) {
  if (typeof r[e] != "undefined") {
    var n = String(r[e]);
    t[e] = n.toLowerCase() === "true";
  }
}
function Yc(e, t, r, n, i) {
  if (n === void 0 && (n = -1 / 0), i === void 0 && (i = 1 / 0), typeof r[e] != "undefined") {
    var o = Number(r[e]);
    isNaN(o) || (o < n ? t[e] = n : o > i ? t[e] = i : t[e] = o);
  }
}
function Kc(e, t, r, n) {
  n === void 0 && (n = Gc);
  var i = r[e];
  typeof i == "string" && (t[e] = i.split(n).map(function(o) {
    return o.trim();
  }));
}
var Jc = {
  ALL: w.ALL,
  VERBOSE: w.VERBOSE,
  DEBUG: w.DEBUG,
  INFO: w.INFO,
  WARN: w.WARN,
  ERROR: w.ERROR,
  NONE: w.NONE
};
function Zc(e, t, r) {
  var n = r[e];
  if (typeof n == "string") {
    var i = Jc[n.toUpperCase()];
    i != null && (t[e] = i);
  }
}
function Qc(e) {
  var t = {};
  for (var r in zo) {
    var n = r;
    switch (n) {
      case "OTEL_LOG_LEVEL":
        Zc(n, t, e);
        break;
      default:
        if ($c(n))
          Wc(n, t, e);
        else if (Vc(n))
          Yc(n, t, e);
        else if (Xc(n))
          Kc(n, t, e);
        else {
          var i = e[n];
          typeof i != "undefined" && i !== null && (t[n] = String(i));
        }
    }
  }
  return t;
}
var tf = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {};
function ef() {
  var e = Qc(tf);
  return Object.assign({}, zo, e);
}
var tn = performance, rf = 9, nf = 6, of = Math.pow(10, nf), ri = Math.pow(10, rf);
function ni(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * of);
  return [r, n];
}
function af() {
  var e = tn.timeOrigin;
  if (typeof e != "number") {
    var t = tn;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function sf(e) {
  var t = ni(af()), r = ni(tn.now());
  return uf(t, r);
}
function uf(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= ri && (r[1] -= ri, r[0] += 1), r;
}
var M;
(function(e) {
  e[e.SUCCESS = 0] = "SUCCESS", e[e.FAILED = 1] = "FAILED";
})(M || (M = {}));
var cf = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, ff = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r;
      this._propagators = (r = t.propagators) !== null && r !== void 0 ? r : [], this._fields = Array.from(new Set(this._propagators.map(function(n) {
        return typeof n.fields == "function" ? n.fields() : [];
      }).reduce(function(n, i) {
        return n.concat(i);
      }, [])));
    }
    return e.prototype.inject = function(t, r, n) {
      var i, o;
      try {
        for (var a = cf(this._propagators), u = a.next(); !u.done; u = a.next()) {
          var c = u.value;
          try {
            c.inject(t, r, n);
          } catch (s) {
            v.warn("Failed to inject with " + c.constructor.name + ". Err: " + s.message);
          }
        }
      } catch (s) {
        i = { error: s };
      } finally {
        try {
          u && !u.done && (o = a.return) && o.call(a);
        } finally {
          if (i) throw i.error;
        }
      }
    }, e.prototype.extract = function(t, r, n) {
      return this._propagators.reduce(function(i, o) {
        try {
          return o.extract(i, r, n);
        } catch (a) {
          v.warn("Failed to extract with " + o.constructor.name + ". Err: " + a.message);
        }
        return i;
      }, t);
    }, e.prototype.fields = function() {
      return this._fields.slice();
    }, e;
  }()
), en = "[_0-9a-z-*/]", lf = "[a-z]" + en + "{0,255}", df = "[a-z0-9]" + en + "{0,240}@[a-z]" + en + "{0,13}", pf = new RegExp("^(?:" + lf + "|" + df + ")$"), hf = /^[ -~]{0,255}[!-~]$/, _f = /,|=/;
function vf(e) {
  return pf.test(e);
}
function Ef(e) {
  return hf.test(e) && !_f.test(e);
}
var ii = 32, gf = 512, oi = ",", ai = "=", yf = (
  /** @class */
  function() {
    function e(t) {
      this._internalState = /* @__PURE__ */ new Map(), t && this._parse(t);
    }
    return e.prototype.set = function(t, r) {
      var n = this._clone();
      return n._internalState.has(t) && n._internalState.delete(t), n._internalState.set(t, r), n;
    }, e.prototype.unset = function(t) {
      var r = this._clone();
      return r._internalState.delete(t), r;
    }, e.prototype.get = function(t) {
      return this._internalState.get(t);
    }, e.prototype.serialize = function() {
      var t = this;
      return this._keys().reduce(function(r, n) {
        return r.push(n + ai + t.get(n)), r;
      }, []).join(oi);
    }, e.prototype._parse = function(t) {
      t.length > gf || (this._internalState = t.split(oi).reverse().reduce(function(r, n) {
        var i = n.trim(), o = i.indexOf(ai);
        if (o !== -1) {
          var a = i.slice(0, o), u = i.slice(o + 1, n.length);
          vf(a) && Ef(u) && r.set(a, u);
        }
        return r;
      }, /* @__PURE__ */ new Map()), this._internalState.size > ii && (this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, ii))));
    }, e.prototype._keys = function() {
      return Array.from(this._internalState.keys()).reverse();
    }, e.prototype._clone = function() {
      var t = new e();
      return t._internalState = new Map(this._internalState), t;
    }, e;
  }()
), mr = "traceparent", Tr = "tracestate", mf = "00", Tf = "(?!ff)[\\da-f]{2}", Sf = "(?![0]{32})[\\da-f]{32}", Of = "(?![0]{16})[\\da-f]{16}", Af = "[\\da-f]{2}", bf = new RegExp("^\\s?(" + Tf + ")-(" + Sf + ")-(" + Of + ")-(" + Af + ")(-.*)?\\s?$");
function wf(e) {
  var t = bf.exec(e);
  return !t || t[1] === "00" && t[5] ? null : {
    traceId: t[2],
    spanId: t[3],
    traceFlags: parseInt(t[4], 16)
  };
}
var Rf = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = A.getSpanContext(t);
      if (!(!i || Xo(t) || !pe(i))) {
        var o = mf + "-" + i.traceId + "-" + i.spanId + "-0" + Number(i.traceFlags || Q.NONE).toString(16);
        n.set(r, mr, o), i.traceState && n.set(r, Tr, i.traceState.serialize());
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, mr);
      if (!i)
        return t;
      var o = Array.isArray(i) ? i[0] : i;
      if (typeof o != "string")
        return t;
      var a = wf(o);
      if (!a)
        return t;
      a.isRemote = !0;
      var u = n.get(r, Tr);
      if (u) {
        var c = Array.isArray(u) ? u.join(",") : u;
        a.traceState = new yf(typeof c == "string" ? c : void 0);
      }
      return A.setSpanContext(t, a);
    }, e.prototype.fields = function() {
      return [mr, Tr];
    }, e;
  }()
), Lf = "[object Object]", Pf = "[object Null]", Nf = "[object Undefined]", If = Function.prototype, qo = If.toString, Cf = qo.call(Object), Mf = xf(Object.getPrototypeOf, Object), Wo = Object.prototype, Yo = Wo.hasOwnProperty, _t = Symbol ? Symbol.toStringTag : void 0, Ko = Wo.toString;
function xf(e, t) {
  return function(r) {
    return e(t(r));
  };
}
function si(e) {
  if (!Df(e) || Uf(e) !== Lf)
    return !1;
  var t = Mf(e);
  if (t === null)
    return !0;
  var r = Yo.call(t, "constructor") && t.constructor;
  return typeof r == "function" && r instanceof r && qo.call(r) === Cf;
}
function Df(e) {
  return e != null && typeof e == "object";
}
function Uf(e) {
  return e == null ? e === void 0 ? Nf : Pf : _t && _t in Object(e) ? Bf(e) : kf(e);
}
function Bf(e) {
  var t = Yo.call(e, _t), r = e[_t], n = !1;
  try {
    e[_t] = void 0, n = !0;
  } catch (o) {
  }
  var i = Ko.call(e);
  return n && (t ? e[_t] = r : delete e[_t]), i;
}
function kf(e) {
  return Ko.call(e);
}
var Gf = 20;
function Hf() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  for (var r = e.shift(), n = /* @__PURE__ */ new WeakMap(); e.length > 0; )
    r = Jo(r, e.shift(), 0, n);
  return r;
}
function Sr(e) {
  return Be(e) ? e.slice() : e;
}
function Jo(e, t, r, n) {
  r === void 0 && (r = 0);
  var i;
  if (!(r > Gf)) {
    if (r++, Ne(e) || Ne(t) || Zo(t))
      i = Sr(t);
    else if (Be(e)) {
      if (i = e.slice(), Be(t))
        for (var o = 0, a = t.length; o < a; o++)
          i.push(Sr(t[o]));
      else if (zt(t))
        for (var u = Object.keys(t), o = 0, a = u.length; o < a; o++) {
          var c = u[o];
          i[c] = Sr(t[c]);
        }
    } else if (zt(e))
      if (zt(t)) {
        if (!$f(e, t))
          return t;
        i = Object.assign({}, e);
        for (var u = Object.keys(t), o = 0, a = u.length; o < a; o++) {
          var c = u[o], s = t[c];
          if (Ne(s))
            typeof s == "undefined" ? delete i[c] : i[c] = s;
          else {
            var f = i[c], l = s;
            if (ui(e, c, n) || ui(t, c, n))
              delete i[c];
            else {
              if (zt(f) && zt(l)) {
                var d = n.get(f) || [], h = n.get(l) || [];
                d.push({ obj: e, key: c }), h.push({ obj: t, key: c }), n.set(f, d), n.set(l, h);
              }
              i[c] = Jo(i[c], s, r, n);
            }
          }
        }
      } else
        i = t;
    return i;
  }
}
function ui(e, t, r) {
  for (var n = r.get(e[t]) || [], i = 0, o = n.length; i < o; i++) {
    var a = n[i];
    if (a.key === t && a.obj === e)
      return !0;
  }
  return !1;
}
function Be(e) {
  return Array.isArray(e);
}
function Zo(e) {
  return typeof e == "function";
}
function zt(e) {
  return !Ne(e) && !Be(e) && !Zo(e) && typeof e == "object";
}
function Ne(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "undefined" || e instanceof Date || e instanceof RegExp || e === null;
}
function $f(e, t) {
  return !(!si(e) || !si(t));
}
var Qo = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.emit = function(t) {
    }, e;
  }()
), jf = new Qo(), Vf = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getLogger = function(t, r, n) {
      return new Qo();
    }, e;
  }()
), ta = new Vf(), Ff = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      this._provider = t, this.name = r, this.version = n, this.options = i;
    }
    return e.prototype.emit = function(t) {
      this._getLogger().emit(t);
    }, e.prototype._getLogger = function() {
      if (this._delegate)
        return this._delegate;
      var t = this._provider.getDelegateLogger(this.name, this.version, this.options);
      return t ? (this._delegate = t, this._delegate) : jf;
    }, e;
  }()
), ci = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getLogger = function(t, r, n) {
      var i;
      return (i = this.getDelegateLogger(t, r, n)) !== null && i !== void 0 ? i : new Ff(this, t, r, n);
    }, e.prototype.getDelegate = function() {
      var t;
      return (t = this._delegate) !== null && t !== void 0 ? t : ta;
    }, e.prototype.setDelegate = function(t) {
      this._delegate = t;
    }, e.prototype.getDelegateLogger = function(t, r, n) {
      var i;
      return (i = this._delegate) === null || i === void 0 ? void 0 : i.getLogger(t, r, n);
    }, e;
  }()
), Xf = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, ye = Symbol.for("io.opentelemetry.js.api.logs"), qt = Xf;
function zf(e, t, r) {
  return function(n) {
    return n === e ? t : r;
  };
}
var fi = 1, qf = (
  /** @class */
  function() {
    function e() {
      this._proxyLoggerProvider = new ci();
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalLoggerProvider = function(t) {
      return qt[ye] ? this.getLoggerProvider() : (qt[ye] = zf(fi, t, ta), this._proxyLoggerProvider.setDelegate(t), t);
    }, e.prototype.getLoggerProvider = function() {
      var t, r;
      return (r = (t = qt[ye]) === null || t === void 0 ? void 0 : t.call(qt, fi)) !== null && r !== void 0 ? r : this._proxyLoggerProvider;
    }, e.prototype.getLogger = function(t, r, n) {
      return this.getLoggerProvider().getLogger(t, r, n);
    }, e.prototype.disable = function() {
      delete qt[ye], this._proxyLoggerProvider = new ci();
    }, e;
  }()
), he = qf.getInstance();
function Wf(e, t, r, n) {
  for (var i = 0, o = e.length; i < o; i++) {
    var a = e[i];
    t && a.setTracerProvider(t), r && a.setMeterProvider(r), n && a.setLoggerProvider && a.setLoggerProvider(n), a.getConfig().enabled || a.enable();
  }
}
function Yf(e) {
  e.forEach(function(t) {
    return t.disable();
  });
}
function Kf(e) {
  var t, r, n = e.tracerProvider || A.getTracerProvider(), i = e.meterProvider || K.getMeterProvider(), o = e.loggerProvider || he.getLoggerProvider(), a = (r = (t = e.instrumentations) === null || t === void 0 ? void 0 : t.flat()) !== null && r !== void 0 ? r : [];
  return Wf(a, n, i, o), function() {
    Yf(a);
  };
}
function rn(e) {
  return typeof e == "function";
}
var D = console.error.bind(console);
function Wt(e, t, r) {
  var n = !!e[t] && e.propertyIsEnumerable(t);
  Object.defineProperty(e, t, {
    configurable: !0,
    enumerable: n,
    writable: !0,
    value: r
  });
}
function _e(e) {
  e && e.logger && (rn(e.logger) ? D = e.logger : D("new logger isn't a function, not replacing"));
}
function ea(e, t, r) {
  if (!e || !e[t]) {
    D("no original function " + t + " to wrap");
    return;
  }
  if (!r) {
    D("no wrapper function"), D(new Error().stack);
    return;
  }
  if (!rn(e[t]) || !rn(r)) {
    D("original object and wrapper must be functions");
    return;
  }
  var n = e[t], i = r(n, t);
  return Wt(i, "__original", n), Wt(i, "__unwrap", function() {
    e[t] === i && Wt(e, t, n);
  }), Wt(i, "__wrapped", !0), Wt(e, t, i), i;
}
function Jf(e, t, r) {
  if (e)
    Array.isArray(e) || (e = [e]);
  else {
    D("must provide one or more modules to patch"), D(new Error().stack);
    return;
  }
  if (!(t && Array.isArray(t))) {
    D("must provide one or more functions to wrap on modules");
    return;
  }
  e.forEach(function(n) {
    t.forEach(function(i) {
      ea(n, i, r);
    });
  });
}
function ra(e, t) {
  if (!e || !e[t]) {
    D("no function to unwrap."), D(new Error().stack);
    return;
  }
  if (!e[t].__unwrap)
    D("no original to unwrap to -- has " + t + " already been unwrapped?");
  else
    return e[t].__unwrap();
}
function Zf(e, t) {
  if (e)
    Array.isArray(e) || (e = [e]);
  else {
    D("must provide one or more modules to patch"), D(new Error().stack);
    return;
  }
  if (!(t && Array.isArray(t))) {
    D("must provide one or more functions to unwrap on modules");
    return;
  }
  e.forEach(function(r) {
    t.forEach(function(n) {
      ra(r, n);
    });
  });
}
_e.wrap = ea;
_e.massWrap = Jf;
_e.unwrap = ra;
_e.massUnwrap = Zf;
var I = _e, nn = function() {
  return nn = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, nn.apply(this, arguments);
}, Qf = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.instrumentationName = t, this.instrumentationVersion = r, this._config = {}, this._wrap = I.wrap, this._unwrap = I.unwrap, this._massWrap = I.massWrap, this._massUnwrap = I.massUnwrap, this.setConfig(n), this._diag = v.createComponentLogger({
        namespace: t
      }), this._tracer = A.getTracer(t, r), this._meter = K.getMeter(t, r), this._logger = he.getLogger(t, r), this._updateMetricInstruments();
    }
    return Object.defineProperty(e.prototype, "meter", {
      /* Returns meter */
      get: function() {
        return this._meter;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setMeterProvider = function(t) {
      this._meter = t.getMeter(this.instrumentationName, this.instrumentationVersion), this._updateMetricInstruments();
    }, Object.defineProperty(e.prototype, "logger", {
      /* Returns logger */
      get: function() {
        return this._logger;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setLoggerProvider = function(t) {
      this._logger = t.getLogger(this.instrumentationName, this.instrumentationVersion);
    }, e.prototype.getModuleDefinitions = function() {
      var t, r = (t = this.init()) !== null && t !== void 0 ? t : [];
      return Array.isArray(r) ? r : [r];
    }, e.prototype._updateMetricInstruments = function() {
    }, e.prototype.getConfig = function() {
      return this._config;
    }, e.prototype.setConfig = function(t) {
      this._config = nn({ enabled: !0 }, t);
    }, e.prototype.setTracerProvider = function(t) {
      this._tracer = t.getTracer(this.instrumentationName, this.instrumentationVersion);
    }, Object.defineProperty(e.prototype, "tracer", {
      /* Returns tracer */
      get: function() {
        return this._tracer;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._runSpanCustomizationHook = function(t, r, n, i) {
      if (t)
        try {
          t(n, i);
        } catch (o) {
          this._diag.error("Error running span customization hook due to exception in handler", { triggerName: r }, o);
        }
    }, e;
  }()
), tl = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), el = (
  /** @class */
  function(e) {
    tl(t, e);
    function t(r, n, i) {
      var o = e.call(this, r, n, i) || this;
      return o._config.enabled && o.enable(), o;
    }
    return t;
  }(Qf)
);
function C(e) {
  return typeof e == "function" && typeof e.__original == "function" && typeof e.__unwrap == "function" && e.__wrapped === !0;
}
var ke = performance, rl = "traceparent", na = de("OpenTelemetry SDK Context Key SUPPRESS_TRACING");
function nl(e) {
  return e.setValue(na, !0);
}
function Cn(e) {
  return e.getValue(na) === !0;
}
var il = "=", on = ";", an = ",", Or = "baggage", ol = 180, al = 4096, sl = 8192, ul = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function cl(e) {
  return e.reduce(function(t, r) {
    var n = "" + t + (t !== "" ? an : "") + r;
    return n.length > sl ? t : n;
  }, "");
}
function fl(e) {
  return e.getAllEntries().map(function(t) {
    var r = ul(t, 2), n = r[0], i = r[1], o = encodeURIComponent(n) + "=" + encodeURIComponent(i.value);
    return i.metadata !== void 0 && (o += on + i.metadata.toString()), o;
  });
}
function ll(e) {
  var t = e.split(on);
  if (!(t.length <= 0)) {
    var r = t.shift();
    if (r) {
      var n = r.indexOf(il);
      if (!(n <= 0)) {
        var i = decodeURIComponent(r.substring(0, n).trim()), o = decodeURIComponent(r.substring(n + 1).trim()), a;
        return t.length > 0 && (a = Uo(t.join(on))), { key: i, value: o, metadata: a };
      }
    }
  }
}
var dl = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = x.getBaggage(t);
      if (!(!i || Cn(t))) {
        var o = fl(i).filter(function(u) {
          return u.length <= al;
        }).slice(0, ol), a = cl(o);
        a.length > 0 && n.set(r, Or, a);
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, Or), o = Array.isArray(i) ? i.join(an) : i;
      if (!o)
        return t;
      var a = {};
      if (o.length === 0)
        return t;
      var u = o.split(an);
      return u.forEach(function(c) {
        var s = ll(c);
        if (s) {
          var f = { value: s.value };
          s.metadata && (f.metadata = s.metadata), a[s.key] = f;
        }
      }), Object.entries(a).length === 0 ? t : x.setBaggage(t, x.createBaggage(a));
    }, e.prototype.fields = function() {
      return [Or];
    }, e;
  }()
), ia = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, pl = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function Ie(e) {
  var t, r, n = {};
  if (typeof e != "object" || e == null)
    return n;
  try {
    for (var i = ia(Object.entries(e)), o = i.next(); !o.done; o = i.next()) {
      var a = pl(o.value, 2), u = a[0], c = a[1];
      if (!hl(u)) {
        v.warn("Invalid attribute key: " + u);
        continue;
      }
      if (!oa(c)) {
        v.warn("Invalid attribute value set for key: " + u);
        continue;
      }
      Array.isArray(c) ? n[u] = c.slice() : n[u] = c;
    }
  } catch (s) {
    t = { error: s };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
function hl(e) {
  return typeof e == "string" && e.length > 0;
}
function oa(e) {
  return e == null ? !0 : Array.isArray(e) ? _l(e) : aa(e);
}
function _l(e) {
  var t, r, n;
  try {
    for (var i = ia(e), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (a != null) {
        if (!n) {
          if (aa(a)) {
            n = typeof a;
            continue;
          }
          return !1;
        }
        if (typeof a !== n)
          return !1;
      }
    }
  } catch (u) {
    t = { error: u };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return !0;
}
function aa(e) {
  switch (typeof e) {
    case "number":
    case "boolean":
    case "string":
      return !0;
  }
  return !1;
}
function vl() {
  return function(e) {
    v.error(El(e));
  };
}
function El(e) {
  return typeof e == "string" ? e : JSON.stringify(gl(e));
}
function gl(e) {
  for (var t = {}, r = e; r !== null; )
    Object.getOwnPropertyNames(r).forEach(function(n) {
      if (!t[n]) {
        var i = r[n];
        i && (t[n] = String(i));
      }
    }), r = Object.getPrototypeOf(r);
  return t;
}
var yl = vl();
function Gt(e) {
  try {
    yl(e);
  } catch (t) {
  }
}
var W;
(function(e) {
  e.AlwaysOff = "always_off", e.AlwaysOn = "always_on", e.ParentBasedAlwaysOff = "parentbased_always_off", e.ParentBasedAlwaysOn = "parentbased_always_on", e.ParentBasedTraceIdRatio = "parentbased_traceidratio", e.TraceIdRatio = "traceidratio";
})(W || (W = {}));
var ml = ",", Tl = ["OTEL_SDK_DISABLED"];
function Sl(e) {
  return Tl.indexOf(e) > -1;
}
var Ol = [
  "OTEL_BSP_EXPORT_TIMEOUT",
  "OTEL_BSP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BSP_MAX_QUEUE_SIZE",
  "OTEL_BSP_SCHEDULE_DELAY",
  "OTEL_BLRP_EXPORT_TIMEOUT",
  "OTEL_BLRP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BLRP_MAX_QUEUE_SIZE",
  "OTEL_BLRP_SCHEDULE_DELAY",
  "OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_LINK_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT",
  "OTEL_EXPORTER_OTLP_TIMEOUT",
  "OTEL_EXPORTER_OTLP_TRACES_TIMEOUT",
  "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT",
  "OTEL_EXPORTER_OTLP_LOGS_TIMEOUT",
  "OTEL_EXPORTER_JAEGER_AGENT_PORT"
];
function Al(e) {
  return Ol.indexOf(e) > -1;
}
var bl = [
  "OTEL_NO_PATCH_MODULES",
  "OTEL_PROPAGATORS",
  "OTEL_SEMCONV_STABILITY_OPT_IN"
];
function wl(e) {
  return bl.indexOf(e) > -1;
}
var Ce = 1 / 0, Me = 128, Rl = 128, Ll = 128, sa = {
  OTEL_SDK_DISABLED: !1,
  CONTAINER_NAME: "",
  ECS_CONTAINER_METADATA_URI_V4: "",
  ECS_CONTAINER_METADATA_URI: "",
  HOSTNAME: "",
  KUBERNETES_SERVICE_HOST: "",
  NAMESPACE: "",
  OTEL_BSP_EXPORT_TIMEOUT: 3e4,
  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BSP_MAX_QUEUE_SIZE: 2048,
  OTEL_BSP_SCHEDULE_DELAY: 5e3,
  OTEL_BLRP_EXPORT_TIMEOUT: 3e4,
  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,
  OTEL_BLRP_SCHEDULE_DELAY: 5e3,
  OTEL_EXPORTER_JAEGER_AGENT_HOST: "",
  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,
  OTEL_EXPORTER_JAEGER_ENDPOINT: "",
  OTEL_EXPORTER_JAEGER_PASSWORD: "",
  OTEL_EXPORTER_JAEGER_USER: "",
  OTEL_EXPORTER_OTLP_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_HEADERS: "",
  OTEL_EXPORTER_OTLP_TRACES_HEADERS: "",
  OTEL_EXPORTER_OTLP_METRICS_HEADERS: "",
  OTEL_EXPORTER_OTLP_LOGS_HEADERS: "",
  OTEL_EXPORTER_OTLP_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 1e4,
  OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://localhost:9411/api/v2/spans",
  OTEL_LOG_LEVEL: w.INFO,
  OTEL_NO_PATCH_MODULES: [],
  OTEL_PROPAGATORS: ["tracecontext", "baggage"],
  OTEL_RESOURCE_ATTRIBUTES: "",
  OTEL_SERVICE_NAME: "",
  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: Ce,
  OTEL_ATTRIBUTE_COUNT_LIMIT: Me,
  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: Ce,
  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: Me,
  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT: Ce,
  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: Me,
  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,
  OTEL_SPAN_LINK_COUNT_LIMIT: 128,
  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT: Rl,
  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT: Ll,
  OTEL_TRACES_EXPORTER: "",
  OTEL_TRACES_SAMPLER: W.ParentBasedAlwaysOn,
  OTEL_TRACES_SAMPLER_ARG: "",
  OTEL_LOGS_EXPORTER: "",
  OTEL_EXPORTER_OTLP_INSECURE: "",
  OTEL_EXPORTER_OTLP_TRACES_INSECURE: "",
  OTEL_EXPORTER_OTLP_METRICS_INSECURE: "",
  OTEL_EXPORTER_OTLP_LOGS_INSECURE: "",
  OTEL_EXPORTER_OTLP_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: "cumulative",
  OTEL_SEMCONV_STABILITY_OPT_IN: []
};
function Pl(e, t, r) {
  if (typeof r[e] != "undefined") {
    var n = String(r[e]);
    t[e] = n.toLowerCase() === "true";
  }
}
function Nl(e, t, r, n, i) {
  if (n === void 0 && (n = -1 / 0), i === void 0 && (i = 1 / 0), typeof r[e] != "undefined") {
    var o = Number(r[e]);
    isNaN(o) || (o < n ? t[e] = n : o > i ? t[e] = i : t[e] = o);
  }
}
function Il(e, t, r, n) {
  n === void 0 && (n = ml);
  var i = r[e];
  typeof i == "string" && (t[e] = i.split(n).map(function(o) {
    return o.trim();
  }));
}
var Cl = {
  ALL: w.ALL,
  VERBOSE: w.VERBOSE,
  DEBUG: w.DEBUG,
  INFO: w.INFO,
  WARN: w.WARN,
  ERROR: w.ERROR,
  NONE: w.NONE
};
function Ml(e, t, r) {
  var n = r[e];
  if (typeof n == "string") {
    var i = Cl[n.toUpperCase()];
    i != null && (t[e] = i);
  }
}
function ua(e) {
  var t = {};
  for (var r in sa) {
    var n = r;
    switch (n) {
      case "OTEL_LOG_LEVEL":
        Ml(n, t, e);
        break;
      default:
        if (Sl(n))
          Pl(n, t, e);
        else if (Al(n))
          Nl(n, t, e);
        else if (wl(n))
          Il(n, t, e);
        else {
          var i = e[n];
          typeof i != "undefined" && i !== null && (t[n] = String(i));
        }
    }
  }
  return t;
}
var ca = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {};
function oe() {
  var e = ua(ca);
  return Object.assign({}, sa, e);
}
function xl() {
  return ua(ca);
}
var Bt = performance, Dl = "exception.type", Ul = "exception.message", Bl = "exception.stacktrace", kl = "http.response_content_length", Gl = "http.response_content_length_uncompressed", Ar = Dl, br = Ul, Hl = Bl, $l = kl, jl = Gl, Vl = 9, Fl = 6, Xl = Math.pow(10, Fl), Ge = Math.pow(10, Vl);
function ct(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Xl);
  return [r, n];
}
function Mn() {
  var e = Bt.timeOrigin;
  if (typeof e != "number") {
    var t = Bt;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function fa(e) {
  var t = ct(Mn()), r = ct(typeof e == "number" ? e : Bt.now());
  return la(t, r);
}
function Qt(e) {
  if (xn(e))
    return e;
  if (typeof e == "number")
    return e < Mn() ? fa(e) : ct(e);
  if (e instanceof Date)
    return ct(e.getTime());
  throw TypeError("Invalid input type");
}
function zl(e, t) {
  var r = t[0] - e[0], n = t[1] - e[1];
  return n < 0 && (r -= 1, n += Ge), [r, n];
}
function ft(e) {
  return e[0] * Ge + e[1];
}
function xn(e) {
  return Array.isArray(e) && e.length === 2 && typeof e[0] == "number" && typeof e[1] == "number";
}
function li(e) {
  return xn(e) || typeof e == "number" || e instanceof Date;
}
function la(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= Ge && (r[1] -= Ge, r[0] += 1), r;
}
var sn;
(function(e) {
  e[e.SUCCESS = 0] = "SUCCESS", e[e.FAILED = 1] = "FAILED";
})(sn || (sn = {}));
var ql = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Wl = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r;
      this._propagators = (r = t.propagators) !== null && r !== void 0 ? r : [], this._fields = Array.from(new Set(this._propagators.map(function(n) {
        return typeof n.fields == "function" ? n.fields() : [];
      }).reduce(function(n, i) {
        return n.concat(i);
      }, [])));
    }
    return e.prototype.inject = function(t, r, n) {
      var i, o;
      try {
        for (var a = ql(this._propagators), u = a.next(); !u.done; u = a.next()) {
          var c = u.value;
          try {
            c.inject(t, r, n);
          } catch (s) {
            v.warn("Failed to inject with " + c.constructor.name + ". Err: " + s.message);
          }
        }
      } catch (s) {
        i = { error: s };
      } finally {
        try {
          u && !u.done && (o = a.return) && o.call(a);
        } finally {
          if (i) throw i.error;
        }
      }
    }, e.prototype.extract = function(t, r, n) {
      return this._propagators.reduce(function(i, o) {
        try {
          return o.extract(i, r, n);
        } catch (a) {
          v.warn("Failed to extract with " + o.constructor.name + ". Err: " + a.message);
        }
        return i;
      }, t);
    }, e.prototype.fields = function() {
      return this._fields.slice();
    }, e;
  }()
), un = "[_0-9a-z-*/]", Yl = "[a-z]" + un + "{0,255}", Kl = "[a-z0-9]" + un + "{0,240}@[a-z]" + un + "{0,13}", Jl = new RegExp("^(?:" + Yl + "|" + Kl + ")$"), Zl = /^[ -~]{0,255}[!-~]$/, Ql = /,|=/;
function td(e) {
  return Jl.test(e);
}
function ed(e) {
  return Zl.test(e) && !Ql.test(e);
}
var di = 32, rd = 512, pi = ",", hi = "=", nd = (
  /** @class */
  function() {
    function e(t) {
      this._internalState = /* @__PURE__ */ new Map(), t && this._parse(t);
    }
    return e.prototype.set = function(t, r) {
      var n = this._clone();
      return n._internalState.has(t) && n._internalState.delete(t), n._internalState.set(t, r), n;
    }, e.prototype.unset = function(t) {
      var r = this._clone();
      return r._internalState.delete(t), r;
    }, e.prototype.get = function(t) {
      return this._internalState.get(t);
    }, e.prototype.serialize = function() {
      var t = this;
      return this._keys().reduce(function(r, n) {
        return r.push(n + hi + t.get(n)), r;
      }, []).join(pi);
    }, e.prototype._parse = function(t) {
      t.length > rd || (this._internalState = t.split(pi).reverse().reduce(function(r, n) {
        var i = n.trim(), o = i.indexOf(hi);
        if (o !== -1) {
          var a = i.slice(0, o), u = i.slice(o + 1, n.length);
          td(a) && ed(u) && r.set(a, u);
        }
        return r;
      }, /* @__PURE__ */ new Map()), this._internalState.size > di && (this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, di))));
    }, e.prototype._keys = function() {
      return Array.from(this._internalState.keys()).reverse();
    }, e.prototype._clone = function() {
      var t = new e();
      return t._internalState = new Map(this._internalState), t;
    }, e;
  }()
), wr = "traceparent", Rr = "tracestate", id = "00", od = "(?!ff)[\\da-f]{2}", ad = "(?![0]{32})[\\da-f]{32}", sd = "(?![0]{16})[\\da-f]{16}", ud = "[\\da-f]{2}", cd = new RegExp("^\\s?(" + od + ")-(" + ad + ")-(" + sd + ")-(" + ud + ")(-.*)?\\s?$");
function fd(e) {
  var t = cd.exec(e);
  return !t || t[1] === "00" && t[5] ? null : {
    traceId: t[2],
    spanId: t[3],
    traceFlags: parseInt(t[4], 16)
  };
}
var ld = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = A.getSpanContext(t);
      if (!(!i || Cn(t) || !pe(i))) {
        var o = id + "-" + i.traceId + "-" + i.spanId + "-0" + Number(i.traceFlags || Q.NONE).toString(16);
        n.set(r, wr, o), i.traceState && n.set(r, Rr, i.traceState.serialize());
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, wr);
      if (!i)
        return t;
      var o = Array.isArray(i) ? i[0] : i;
      if (typeof o != "string")
        return t;
      var a = fd(o);
      if (!a)
        return t;
      a.isRemote = !0;
      var u = n.get(r, Rr);
      if (u) {
        var c = Array.isArray(u) ? u.join(",") : u;
        a.traceState = new nd(typeof c == "string" ? c : void 0);
      }
      return A.setSpanContext(t, a);
    }, e.prototype.fields = function() {
      return [wr, Rr];
    }, e;
  }()
), dd = "[object Object]", pd = "[object Null]", hd = "[object Undefined]", _d = Function.prototype, da = _d.toString, vd = da.call(Object), Ed = gd(Object.getPrototypeOf, Object), pa = Object.prototype, ha = pa.hasOwnProperty, vt = Symbol ? Symbol.toStringTag : void 0, _a = pa.toString;
function gd(e, t) {
  return function(r) {
    return e(t(r));
  };
}
function _i(e) {
  if (!yd(e) || md(e) !== dd)
    return !1;
  var t = Ed(e);
  if (t === null)
    return !0;
  var r = ha.call(t, "constructor") && t.constructor;
  return typeof r == "function" && r instanceof r && da.call(r) === vd;
}
function yd(e) {
  return e != null && typeof e == "object";
}
function md(e) {
  return e == null ? e === void 0 ? hd : pd : vt && vt in Object(e) ? Td(e) : Sd(e);
}
function Td(e) {
  var t = ha.call(e, vt), r = e[vt], n = !1;
  try {
    e[vt] = void 0, n = !0;
  } catch (o) {
  }
  var i = _a.call(e);
  return n && (t ? e[vt] = r : delete e[vt]), i;
}
function Sd(e) {
  return _a.call(e);
}
var Od = 20;
function Ad() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  for (var r = e.shift(), n = /* @__PURE__ */ new WeakMap(); e.length > 0; )
    r = va(r, e.shift(), 0, n);
  return r;
}
function Lr(e) {
  return He(e) ? e.slice() : e;
}
function va(e, t, r, n) {
  r === void 0 && (r = 0);
  var i;
  if (!(r > Od)) {
    if (r++, xe(e) || xe(t) || Ea(t))
      i = Lr(t);
    else if (He(e)) {
      if (i = e.slice(), He(t))
        for (var o = 0, a = t.length; o < a; o++)
          i.push(Lr(t[o]));
      else if (Yt(t))
        for (var u = Object.keys(t), o = 0, a = u.length; o < a; o++) {
          var c = u[o];
          i[c] = Lr(t[c]);
        }
    } else if (Yt(e))
      if (Yt(t)) {
        if (!bd(e, t))
          return t;
        i = Object.assign({}, e);
        for (var u = Object.keys(t), o = 0, a = u.length; o < a; o++) {
          var c = u[o], s = t[c];
          if (xe(s))
            typeof s == "undefined" ? delete i[c] : i[c] = s;
          else {
            var f = i[c], l = s;
            if (vi(e, c, n) || vi(t, c, n))
              delete i[c];
            else {
              if (Yt(f) && Yt(l)) {
                var d = n.get(f) || [], h = n.get(l) || [];
                d.push({ obj: e, key: c }), h.push({ obj: t, key: c }), n.set(f, d), n.set(l, h);
              }
              i[c] = va(i[c], s, r, n);
            }
          }
        }
      } else
        i = t;
    return i;
  }
}
function vi(e, t, r) {
  for (var n = r.get(e[t]) || [], i = 0, o = n.length; i < o; i++) {
    var a = n[i];
    if (a.key === t && a.obj === e)
      return !0;
  }
  return !1;
}
function He(e) {
  return Array.isArray(e);
}
function Ea(e) {
  return typeof e == "function";
}
function Yt(e) {
  return !xe(e) && !He(e) && !Ea(e) && typeof e == "object";
}
function xe(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "undefined" || e instanceof Date || e instanceof RegExp || e === null;
}
function bd(e, t) {
  return !(!_i(e) || !_i(t));
}
function wd(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
var Rd = (
  /** @class */
  function() {
    function e() {
      var t = this;
      this._promise = new Promise(function(r, n) {
        t._resolve = r, t._reject = n;
      });
    }
    return Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.resolve = function(t) {
      this._resolve(t);
    }, e.prototype.reject = function(t) {
      this._reject(t);
    }, e;
  }()
), Ld = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Pd = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Nd = (
  /** @class */
  function() {
    function e(t, r) {
      this._callback = t, this._that = r, this._isCalled = !1, this._deferred = new Rd();
    }
    return Object.defineProperty(e.prototype, "isCalled", {
      get: function() {
        return this._isCalled;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._deferred.promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.call = function() {
      for (var t, r = this, n = [], i = 0; i < arguments.length; i++)
        n[i] = arguments[i];
      if (!this._isCalled) {
        this._isCalled = !0;
        try {
          Promise.resolve((t = this._callback).call.apply(t, Pd([this._that], Ld(n), !1))).then(function(o) {
            return r._deferred.resolve(o);
          }, function(o) {
            return r._deferred.reject(o);
          });
        } catch (o) {
          this._deferred.reject(o);
        }
      }
      return this._deferred.promise;
    }, e;
  }()
), Id = "exception", cn = function() {
  return cn = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, cn.apply(this, arguments);
}, Cd = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Ei = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Md = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, xd = (
  /** @class */
  function() {
    function e(t, r, n, i, o, a, u, c, s, f) {
      u === void 0 && (u = []), this.attributes = {}, this.links = [], this.events = [], this._droppedAttributesCount = 0, this._droppedEventsCount = 0, this._droppedLinksCount = 0, this.status = {
        code: Ue.UNSET
      }, this.endTime = [0, 0], this._ended = !1, this._duration = [-1, -1], this.name = n, this._spanContext = i, this.parentSpanId = a, this.kind = o, this.links = u;
      var l = Date.now();
      this._performanceStartTime = Bt.now(), this._performanceOffset = l - (this._performanceStartTime + Mn()), this._startTimeProvided = c != null, this.startTime = this._getTime(c != null ? c : l), this.resource = t.resource, this.instrumentationLibrary = t.instrumentationLibrary, this._spanLimits = t.getSpanLimits(), this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0, f != null && this.setAttributes(f), this._spanProcessor = t.getActiveSpanProcessor(), this._spanProcessor.onStart(this, r);
    }
    return e.prototype.spanContext = function() {
      return this._spanContext;
    }, e.prototype.setAttribute = function(t, r) {
      return r == null || this._isSpanEnded() ? this : t.length === 0 ? (v.warn("Invalid attribute key: " + t), this) : oa(r) ? Object.keys(this.attributes).length >= this._spanLimits.attributeCountLimit && !Object.prototype.hasOwnProperty.call(this.attributes, t) ? (this._droppedAttributesCount++, this) : (this.attributes[t] = this._truncateToSize(r), this) : (v.warn("Invalid attribute value set for key: " + t), this);
    }, e.prototype.setAttributes = function(t) {
      var r, n;
      try {
        for (var i = Cd(Object.entries(t)), o = i.next(); !o.done; o = i.next()) {
          var a = Ei(o.value, 2), u = a[0], c = a[1];
          this.setAttribute(u, c);
        }
      } catch (s) {
        r = { error: s };
      } finally {
        try {
          o && !o.done && (n = i.return) && n.call(i);
        } finally {
          if (r) throw r.error;
        }
      }
      return this;
    }, e.prototype.addEvent = function(t, r, n) {
      if (this._isSpanEnded())
        return this;
      if (this._spanLimits.eventCountLimit === 0)
        return v.warn("No events allowed."), this._droppedEventsCount++, this;
      this.events.length >= this._spanLimits.eventCountLimit && (this._droppedEventsCount === 0 && v.debug("Dropping extra events."), this.events.shift(), this._droppedEventsCount++), li(r) && (li(n) || (n = r), r = void 0);
      var i = Ie(r);
      return this.events.push({
        name: t,
        attributes: i,
        time: this._getTime(n),
        droppedAttributesCount: 0
      }), this;
    }, e.prototype.addLink = function(t) {
      return this.links.push(t), this;
    }, e.prototype.addLinks = function(t) {
      var r;
      return (r = this.links).push.apply(r, Md([], Ei(t), !1)), this;
    }, e.prototype.setStatus = function(t) {
      return this._isSpanEnded() ? this : (this.status = cn({}, t), this.status.message != null && typeof t.message != "string" && (v.warn("Dropping invalid status.message of type '" + typeof t.message + "', expected 'string'"), delete this.status.message), this);
    }, e.prototype.updateName = function(t) {
      return this._isSpanEnded() ? this : (this.name = t, this);
    }, e.prototype.end = function(t) {
      if (this._isSpanEnded()) {
        v.error(this.name + " " + this._spanContext.traceId + "-" + this._spanContext.spanId + " - You can only call end() on a span once.");
        return;
      }
      this._ended = !0, this.endTime = this._getTime(t), this._duration = zl(this.startTime, this.endTime), this._duration[0] < 0 && (v.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.", this.startTime, this.endTime), this.endTime = this.startTime.slice(), this._duration = [0, 0]), this._droppedEventsCount > 0 && v.warn("Dropped " + this._droppedEventsCount + " events because eventCountLimit reached"), this._spanProcessor.onEnd(this);
    }, e.prototype._getTime = function(t) {
      if (typeof t == "number" && t <= Bt.now())
        return fa(t + this._performanceOffset);
      if (typeof t == "number")
        return ct(t);
      if (t instanceof Date)
        return ct(t.getTime());
      if (xn(t))
        return t;
      if (this._startTimeProvided)
        return ct(Date.now());
      var r = Bt.now() - this._performanceStartTime;
      return la(this.startTime, ct(r));
    }, e.prototype.isRecording = function() {
      return this._ended === !1;
    }, e.prototype.recordException = function(t, r) {
      var n = {};
      typeof t == "string" ? n[br] = t : t && (t.code ? n[Ar] = t.code.toString() : t.name && (n[Ar] = t.name), t.message && (n[br] = t.message), t.stack && (n[Hl] = t.stack)), n[Ar] || n[br] ? this.addEvent(Id, n, r) : v.warn("Failed to record an exception " + t);
    }, Object.defineProperty(e.prototype, "duration", {
      get: function() {
        return this._duration;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "ended", {
      get: function() {
        return this._ended;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedAttributesCount", {
      get: function() {
        return this._droppedAttributesCount;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedEventsCount", {
      get: function() {
        return this._droppedEventsCount;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedLinksCount", {
      get: function() {
        return this._droppedLinksCount;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._isSpanEnded = function() {
      return this._ended && v.warn("Can not execute the operation on ended Span {traceId: " + this._spanContext.traceId + ", spanId: " + this._spanContext.spanId + "}"), this._ended;
    }, e.prototype._truncateToLimitUtil = function(t, r) {
      return t.length <= r ? t : t.substring(0, r);
    }, e.prototype._truncateToSize = function(t) {
      var r = this, n = this._attributeValueLengthLimit;
      return n <= 0 ? (v.warn("Attribute value limit must be positive, got " + n), t) : typeof t == "string" ? this._truncateToLimitUtil(t, n) : Array.isArray(t) ? t.map(function(i) {
        return typeof i == "string" ? r._truncateToLimitUtil(i, n) : i;
      }) : t;
    }, e;
  }()
), Ht;
(function(e) {
  e[e.NOT_RECORD = 0] = "NOT_RECORD", e[e.RECORD = 1] = "RECORD", e[e.RECORD_AND_SAMPLED = 2] = "RECORD_AND_SAMPLED";
})(Ht || (Ht = {}));
var $e = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.shouldSample = function() {
      return {
        decision: Ht.NOT_RECORD
      };
    }, e.prototype.toString = function() {
      return "AlwaysOffSampler";
    }, e;
  }()
), kt = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.shouldSample = function() {
      return {
        decision: Ht.RECORD_AND_SAMPLED
      };
    }, e.prototype.toString = function() {
      return "AlwaysOnSampler";
    }, e;
  }()
), Pr = (
  /** @class */
  function() {
    function e(t) {
      var r, n, i, o;
      this._root = t.root, this._root || (Gt(new Error("ParentBasedSampler must have a root sampler configured")), this._root = new kt()), this._remoteParentSampled = (r = t.remoteParentSampled) !== null && r !== void 0 ? r : new kt(), this._remoteParentNotSampled = (n = t.remoteParentNotSampled) !== null && n !== void 0 ? n : new $e(), this._localParentSampled = (i = t.localParentSampled) !== null && i !== void 0 ? i : new kt(), this._localParentNotSampled = (o = t.localParentNotSampled) !== null && o !== void 0 ? o : new $e();
    }
    return e.prototype.shouldSample = function(t, r, n, i, o, a) {
      var u = A.getSpanContext(t);
      return !u || !pe(u) ? this._root.shouldSample(t, r, n, i, o, a) : u.isRemote ? u.traceFlags & Q.SAMPLED ? this._remoteParentSampled.shouldSample(t, r, n, i, o, a) : this._remoteParentNotSampled.shouldSample(t, r, n, i, o, a) : u.traceFlags & Q.SAMPLED ? this._localParentSampled.shouldSample(t, r, n, i, o, a) : this._localParentNotSampled.shouldSample(t, r, n, i, o, a);
    }, e.prototype.toString = function() {
      return "ParentBased{root=" + this._root.toString() + ", remoteParentSampled=" + this._remoteParentSampled.toString() + ", remoteParentNotSampled=" + this._remoteParentNotSampled.toString() + ", localParentSampled=" + this._localParentSampled.toString() + ", localParentNotSampled=" + this._localParentNotSampled.toString() + "}";
    }, e;
  }()
), gi = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = 0), this._ratio = t, this._ratio = this._normalize(t), this._upperBound = Math.floor(this._ratio * 4294967295);
    }
    return e.prototype.shouldSample = function(t, r) {
      return {
        decision: jo(r) && this._accumulate(r) < this._upperBound ? Ht.RECORD_AND_SAMPLED : Ht.NOT_RECORD
      };
    }, e.prototype.toString = function() {
      return "TraceIdRatioBased{" + this._ratio + "}";
    }, e.prototype._normalize = function(t) {
      return typeof t != "number" || isNaN(t) ? 0 : t >= 1 ? 1 : t <= 0 ? 0 : t;
    }, e.prototype._accumulate = function(t) {
      for (var r = 0, n = 0; n < t.length / 8; n++) {
        var i = n * 8, o = parseInt(t.slice(i, i + 8), 16);
        r = (r ^ o) >>> 0;
      }
      return r;
    }, e;
  }()
), Dd = W.AlwaysOn, Ct = 1;
function ga() {
  var e = oe();
  return {
    sampler: ya(e),
    forceFlushTimeoutMillis: 3e4,
    generalLimits: {
      attributeValueLengthLimit: e.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,
      attributeCountLimit: e.OTEL_ATTRIBUTE_COUNT_LIMIT
    },
    spanLimits: {
      attributeValueLengthLimit: e.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,
      attributeCountLimit: e.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,
      linkCountLimit: e.OTEL_SPAN_LINK_COUNT_LIMIT,
      eventCountLimit: e.OTEL_SPAN_EVENT_COUNT_LIMIT,
      attributePerEventCountLimit: e.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,
      attributePerLinkCountLimit: e.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT
    },
    mergeResourceWithDefaults: !0
  };
}
function ya(e) {
  switch (e === void 0 && (e = oe()), e.OTEL_TRACES_SAMPLER) {
    case W.AlwaysOn:
      return new kt();
    case W.AlwaysOff:
      return new $e();
    case W.ParentBasedAlwaysOn:
      return new Pr({
        root: new kt()
      });
    case W.ParentBasedAlwaysOff:
      return new Pr({
        root: new $e()
      });
    case W.TraceIdRatio:
      return new gi(yi(e));
    case W.ParentBasedTraceIdRatio:
      return new Pr({
        root: new gi(yi(e))
      });
    default:
      return v.error('OTEL_TRACES_SAMPLER value "' + e.OTEL_TRACES_SAMPLER + " invalid, defaulting to " + Dd + '".'), new kt();
  }
}
function yi(e) {
  if (e.OTEL_TRACES_SAMPLER_ARG === void 0 || e.OTEL_TRACES_SAMPLER_ARG === "")
    return v.error("OTEL_TRACES_SAMPLER_ARG is blank, defaulting to " + Ct + "."), Ct;
  var t = Number(e.OTEL_TRACES_SAMPLER_ARG);
  return isNaN(t) ? (v.error("OTEL_TRACES_SAMPLER_ARG=" + e.OTEL_TRACES_SAMPLER_ARG + " was given, but it is invalid, defaulting to " + Ct + "."), Ct) : t < 0 || t > 1 ? (v.error("OTEL_TRACES_SAMPLER_ARG=" + e.OTEL_TRACES_SAMPLER_ARG + " was given, but it is out of range ([0..1]), defaulting to " + Ct + "."), Ct) : t;
}
function Ud(e) {
  var t = {
    sampler: ya()
  }, r = ga(), n = Object.assign({}, r, t, e);
  return n.generalLimits = Object.assign({}, r.generalLimits, e.generalLimits || {}), n.spanLimits = Object.assign({}, r.spanLimits, e.spanLimits || {}), n;
}
function Bd(e) {
  var t, r, n, i, o, a, u, c, s, f, l, d, h = Object.assign({}, e.spanLimits), _ = xl();
  return h.attributeCountLimit = (a = (o = (i = (r = (t = e.spanLimits) === null || t === void 0 ? void 0 : t.attributeCountLimit) !== null && r !== void 0 ? r : (n = e.generalLimits) === null || n === void 0 ? void 0 : n.attributeCountLimit) !== null && i !== void 0 ? i : _.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT) !== null && o !== void 0 ? o : _.OTEL_ATTRIBUTE_COUNT_LIMIT) !== null && a !== void 0 ? a : Me, h.attributeValueLengthLimit = (d = (l = (f = (c = (u = e.spanLimits) === null || u === void 0 ? void 0 : u.attributeValueLengthLimit) !== null && c !== void 0 ? c : (s = e.generalLimits) === null || s === void 0 ? void 0 : s.attributeValueLengthLimit) !== null && f !== void 0 ? f : _.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && l !== void 0 ? l : _.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && d !== void 0 ? d : Ce, Object.assign({}, e, { spanLimits: h });
}
var kd = (
  /** @class */
  function() {
    function e(t, r) {
      this._exporter = t, this._isExporting = !1, this._finishedSpans = [], this._droppedSpansCount = 0;
      var n = oe();
      this._maxExportBatchSize = typeof (r == null ? void 0 : r.maxExportBatchSize) == "number" ? r.maxExportBatchSize : n.OTEL_BSP_MAX_EXPORT_BATCH_SIZE, this._maxQueueSize = typeof (r == null ? void 0 : r.maxQueueSize) == "number" ? r.maxQueueSize : n.OTEL_BSP_MAX_QUEUE_SIZE, this._scheduledDelayMillis = typeof (r == null ? void 0 : r.scheduledDelayMillis) == "number" ? r.scheduledDelayMillis : n.OTEL_BSP_SCHEDULE_DELAY, this._exportTimeoutMillis = typeof (r == null ? void 0 : r.exportTimeoutMillis) == "number" ? r.exportTimeoutMillis : n.OTEL_BSP_EXPORT_TIMEOUT, this._shutdownOnce = new Nd(this._shutdown, this), this._maxExportBatchSize > this._maxQueueSize && (v.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"), this._maxExportBatchSize = this._maxQueueSize);
    }
    return e.prototype.forceFlush = function() {
      return this._shutdownOnce.isCalled ? this._shutdownOnce.promise : this._flushAll();
    }, e.prototype.onStart = function(t, r) {
    }, e.prototype.onEnd = function(t) {
      this._shutdownOnce.isCalled || t.spanContext().traceFlags & Q.SAMPLED && this._addToBuffer(t);
    }, e.prototype.shutdown = function() {
      return this._shutdownOnce.call();
    }, e.prototype._shutdown = function() {
      var t = this;
      return Promise.resolve().then(function() {
        return t.onShutdown();
      }).then(function() {
        return t._flushAll();
      }).then(function() {
        return t._exporter.shutdown();
      });
    }, e.prototype._addToBuffer = function(t) {
      if (this._finishedSpans.length >= this._maxQueueSize) {
        this._droppedSpansCount === 0 && v.debug("maxQueueSize reached, dropping spans"), this._droppedSpansCount++;
        return;
      }
      this._droppedSpansCount > 0 && (v.warn("Dropped " + this._droppedSpansCount + " spans because maxQueueSize reached"), this._droppedSpansCount = 0), this._finishedSpans.push(t), this._maybeStartTimer();
    }, e.prototype._flushAll = function() {
      var t = this;
      return new Promise(function(r, n) {
        for (var i = [], o = Math.ceil(t._finishedSpans.length / t._maxExportBatchSize), a = 0, u = o; a < u; a++)
          i.push(t._flushOneBatch());
        Promise.all(i).then(function() {
          r();
        }).catch(n);
      });
    }, e.prototype._flushOneBatch = function() {
      var t = this;
      return this._clearTimer(), this._finishedSpans.length === 0 ? Promise.resolve() : new Promise(function(r, n) {
        var i = setTimeout(function() {
          n(new Error("Timeout"));
        }, t._exportTimeoutMillis);
        S.with(nl(S.active()), function() {
          var o;
          t._finishedSpans.length <= t._maxExportBatchSize ? (o = t._finishedSpans, t._finishedSpans = []) : o = t._finishedSpans.splice(0, t._maxExportBatchSize);
          for (var a = function() {
            return t._exporter.export(o, function(l) {
              var d;
              clearTimeout(i), l.code === sn.SUCCESS ? r() : n((d = l.error) !== null && d !== void 0 ? d : new Error("BatchSpanProcessor: span export failed"));
            });
          }, u = null, c = 0, s = o.length; c < s; c++) {
            var f = o[c];
            f.resource.asyncAttributesPending && f.resource.waitForAsyncAttributes && (u != null || (u = []), u.push(f.resource.waitForAsyncAttributes()));
          }
          u === null ? a() : Promise.all(u).then(a, function(l) {
            Gt(l), n(l);
          });
        });
      });
    }, e.prototype._maybeStartTimer = function() {
      var t = this;
      if (!this._isExporting) {
        var r = function() {
          t._isExporting = !0, t._flushOneBatch().finally(function() {
            t._isExporting = !1, t._finishedSpans.length > 0 && (t._clearTimer(), t._maybeStartTimer());
          }).catch(function(n) {
            t._isExporting = !1, Gt(n);
          });
        };
        if (this._finishedSpans.length >= this._maxExportBatchSize)
          return r();
        this._timer === void 0 && (this._timer = setTimeout(function() {
          return r();
        }, this._scheduledDelayMillis));
      }
    }, e.prototype._clearTimer = function() {
      this._timer !== void 0 && (clearTimeout(this._timer), this._timer = void 0);
    }, e;
  }()
), Gd = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), ma = (
  /** @class */
  function(e) {
    Gd(t, e);
    function t(r, n) {
      var i = e.call(this, r, n) || this;
      return i.onInit(n), i;
    }
    return t.prototype.onInit = function(r) {
      var n = this;
      (r == null ? void 0 : r.disableAutoFlushOnDocumentHide) !== !0 && typeof document != "undefined" && (this._visibilityChangeListener = function() {
        document.visibilityState === "hidden" && n.forceFlush().catch(function(i) {
          Gt(i);
        });
      }, this._pageHideListener = function() {
        n.forceFlush().catch(function(i) {
          Gt(i);
        });
      }, document.addEventListener("visibilitychange", this._visibilityChangeListener), document.addEventListener("pagehide", this._pageHideListener));
    }, t.prototype.onShutdown = function() {
      typeof document != "undefined" && (this._visibilityChangeListener && document.removeEventListener("visibilitychange", this._visibilityChangeListener), this._pageHideListener && document.removeEventListener("pagehide", this._pageHideListener));
    }, t;
  }(kd)
), Hd = 8, $d = 16, jd = (
  /** @class */
  /* @__PURE__ */ function() {
    function e() {
      this.generateTraceId = mi($d), this.generateSpanId = mi(Hd);
    }
    return e;
  }()
), me = Array(32);
function mi(e) {
  return function() {
    for (var r = 0; r < e * 2; r++)
      me[r] = Math.floor(Math.random() * 16) + 48, me[r] >= 58 && (me[r] += 39);
    return String.fromCharCode.apply(null, me.slice(0, e * 2));
  };
}
var Vd = (
  /** @class */
  function() {
    function e(t, r, n) {
      this._tracerProvider = n;
      var i = Ud(r);
      this._sampler = i.sampler, this._generalLimits = i.generalLimits, this._spanLimits = i.spanLimits, this._idGenerator = r.idGenerator || new jd(), this.resource = n.resource, this.instrumentationLibrary = t;
    }
    return e.prototype.startSpan = function(t, r, n) {
      var i, o, a;
      r === void 0 && (r = {}), n === void 0 && (n = S.active()), r.root && (n = A.deleteSpan(n));
      var u = A.getSpan(n);
      if (Cn(n)) {
        v.debug("Instrumentation suppressed, returning Noop Span");
        var c = A.wrapSpanContext(Ho);
        return c;
      }
      var s = u == null ? void 0 : u.spanContext(), f = this._idGenerator.generateSpanId(), l, d, h;
      !s || !A.isSpanContextValid(s) ? l = this._idGenerator.generateTraceId() : (l = s.traceId, d = s.traceState, h = s.spanId);
      var _ = (i = r.kind) !== null && i !== void 0 ? i : ie.INTERNAL, p = ((o = r.links) !== null && o !== void 0 ? o : []).map(function(U) {
        return {
          context: U.context,
          attributes: Ie(U.attributes)
        };
      }), E = Ie(r.attributes), g = this._sampler.shouldSample(n, l, t, _, E, p);
      d = (a = g.traceState) !== null && a !== void 0 ? a : d;
      var y = g.decision === De.RECORD_AND_SAMPLED ? Q.SAMPLED : Q.NONE, b = { traceId: l, spanId: f, traceFlags: y, traceState: d };
      if (g.decision === De.NOT_RECORD) {
        v.debug("Recording is off, propagating context in a non-recording span");
        var c = A.wrapSpanContext(b);
        return c;
      }
      var L = Ie(Object.assign(E, g.attributes)), G = new xd(this, n, t, b, _, h, p, r.startTime, void 0, L);
      return G;
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o, a, u;
      if (!(arguments.length < 2)) {
        arguments.length === 2 ? u = r : arguments.length === 3 ? (o = r, u = n) : (o = r, a = n, u = i);
        var c = a != null ? a : S.active(), s = this.startSpan(t, o, c), f = A.setSpan(c, s);
        return S.with(f, u, void 0, s);
      }
    }, e.prototype.getGeneralLimits = function() {
      return this._generalLimits;
    }, e.prototype.getSpanLimits = function() {
      return this._spanLimits;
    }, e.prototype.getActiveSpanProcessor = function() {
      return this._tracerProvider.getActiveSpanProcessor();
    }, e;
  }()
), Fd = "process.runtime.name", Xd = "service.name", zd = "telemetry.sdk.name", qd = "telemetry.sdk.language", Wd = "telemetry.sdk.version", Yd = Fd, Kd = Xd, fn = zd, ln = qd, dn = Wd, Jd = "webjs", Zd = Jd, Qd = "1.30.1", Mt, Nr = (Mt = {}, Mt[fn] = "opentelemetry", Mt[Yd] = "browser", Mt[ln] = Zd, Mt[dn] = Qd, Mt);
function tp() {
  return "unknown_service";
}
var at = function() {
  return at = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, at.apply(this, arguments);
}, ep = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, rp = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, np = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, ae = (
  /** @class */
  function() {
    function e(t, r) {
      var n = this, i;
      this._attributes = t, this.asyncAttributesPending = r != null, this._syncAttributes = (i = this._attributes) !== null && i !== void 0 ? i : {}, this._asyncAttributesPromise = r == null ? void 0 : r.then(function(o) {
        return n._attributes = Object.assign({}, n._attributes, o), n.asyncAttributesPending = !1, o;
      }, function(o) {
        return v.debug("a resource's async attributes promise rejected: %s", o), n.asyncAttributesPending = !1, {};
      });
    }
    return e.empty = function() {
      return e.EMPTY;
    }, e.default = function() {
      var t;
      return new e((t = {}, t[Kd] = tp(), t[ln] = Nr[ln], t[fn] = Nr[fn], t[dn] = Nr[dn], t));
    }, Object.defineProperty(e.prototype, "attributes", {
      get: function() {
        var t;
        return this.asyncAttributesPending && v.error("Accessing resource attributes before async attributes settled"), (t = this._attributes) !== null && t !== void 0 ? t : {};
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.waitForAsyncAttributes = function() {
      return ep(this, void 0, void 0, function() {
        return rp(this, function(t) {
          switch (t.label) {
            case 0:
              return this.asyncAttributesPending ? [4, this._asyncAttributesPromise] : [3, 2];
            case 1:
              t.sent(), t.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.merge = function(t) {
      var r = this, n;
      if (!t)
        return this;
      var i = at(at({}, this._syncAttributes), (n = t._syncAttributes) !== null && n !== void 0 ? n : t.attributes);
      if (!this._asyncAttributesPromise && !t._asyncAttributesPromise)
        return new e(i);
      var o = Promise.all([
        this._asyncAttributesPromise,
        t._asyncAttributesPromise
      ]).then(function(a) {
        var u, c = np(a, 2), s = c[0], f = c[1];
        return at(at(at(at({}, r._syncAttributes), s), (u = t._syncAttributes) !== null && u !== void 0 ? u : t.attributes), f);
      });
      return new e(i, o);
    }, e.EMPTY = new e({}), e;
  }()
), Te = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Ti = (
  /** @class */
  function() {
    function e(t) {
      this._spanProcessors = t;
    }
    return e.prototype.forceFlush = function() {
      var t, r, n = [];
      try {
        for (var i = Te(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          n.push(a.forceFlush());
        }
      } catch (u) {
        t = { error: u };
      } finally {
        try {
          o && !o.done && (r = i.return) && r.call(i);
        } finally {
          if (t) throw t.error;
        }
      }
      return new Promise(function(u) {
        Promise.all(n).then(function() {
          u();
        }).catch(function(c) {
          Gt(c || new Error("MultiSpanProcessor: forceFlush failed")), u();
        });
      });
    }, e.prototype.onStart = function(t, r) {
      var n, i;
      try {
        for (var o = Te(this._spanProcessors), a = o.next(); !a.done; a = o.next()) {
          var u = a.value;
          u.onStart(t, r);
        }
      } catch (c) {
        n = { error: c };
      } finally {
        try {
          a && !a.done && (i = o.return) && i.call(o);
        } finally {
          if (n) throw n.error;
        }
      }
    }, e.prototype.onEnd = function(t) {
      var r, n;
      try {
        for (var i = Te(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          a.onEnd(t);
        }
      } catch (u) {
        r = { error: u };
      } finally {
        try {
          o && !o.done && (n = i.return) && n.call(i);
        } finally {
          if (r) throw r.error;
        }
      }
    }, e.prototype.shutdown = function() {
      var t, r, n = [];
      try {
        for (var i = Te(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          n.push(a.shutdown());
        }
      } catch (u) {
        t = { error: u };
      } finally {
        try {
          o && !o.done && (r = i.return) && r.call(i);
        } finally {
          if (t) throw t.error;
        }
      }
      return new Promise(function(u, c) {
        Promise.all(n).then(function() {
          u();
        }, c);
      });
    }, e;
  }()
), ip = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.onStart = function(t, r) {
    }, e.prototype.onEnd = function(t) {
    }, e.prototype.shutdown = function() {
      return Promise.resolve();
    }, e.prototype.forceFlush = function() {
      return Promise.resolve();
    }, e;
  }()
), op = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, ap = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Et;
(function(e) {
  e[e.resolved = 0] = "resolved", e[e.timeout = 1] = "timeout", e[e.error = 2] = "error", e[e.unresolved = 3] = "unresolved";
})(Et || (Et = {}));
var sp = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r, n;
      this._registeredSpanProcessors = [], this._tracers = /* @__PURE__ */ new Map();
      var i = Ad({}, ga(), Bd(t));
      if (this.resource = (r = i.resource) !== null && r !== void 0 ? r : ae.empty(), i.mergeResourceWithDefaults && (this.resource = ae.default().merge(this.resource)), this._config = Object.assign({}, i, {
        resource: this.resource
      }), !((n = t.spanProcessors) === null || n === void 0) && n.length)
        this._registeredSpanProcessors = ap([], op(t.spanProcessors), !1), this.activeSpanProcessor = new Ti(this._registeredSpanProcessors);
      else {
        var o = this._buildExporterFromEnv();
        if (o !== void 0) {
          var a = new ma(o);
          this.activeSpanProcessor = a;
        } else
          this.activeSpanProcessor = new ip();
      }
    }
    return e.prototype.getTracer = function(t, r, n) {
      var i = t + "@" + (r || "") + ":" + ((n == null ? void 0 : n.schemaUrl) || "");
      return this._tracers.has(i) || this._tracers.set(i, new Vd({ name: t, version: r, schemaUrl: n == null ? void 0 : n.schemaUrl }, this._config, this)), this._tracers.get(i);
    }, e.prototype.addSpanProcessor = function(t) {
      this._registeredSpanProcessors.length === 0 && this.activeSpanProcessor.shutdown().catch(function(r) {
        return v.error("Error while trying to shutdown current span processor", r);
      }), this._registeredSpanProcessors.push(t), this.activeSpanProcessor = new Ti(this._registeredSpanProcessors);
    }, e.prototype.getActiveSpanProcessor = function() {
      return this.activeSpanProcessor;
    }, e.prototype.register = function(t) {
      t === void 0 && (t = {}), A.setGlobalTracerProvider(this), t.propagator === void 0 && (t.propagator = this._buildPropagatorFromEnv()), t.contextManager && S.setGlobalContextManager(t.contextManager), t.propagator && x.setGlobalPropagator(t.propagator);
    }, e.prototype.forceFlush = function() {
      var t = this._config.forceFlushTimeoutMillis, r = this._registeredSpanProcessors.map(function(n) {
        return new Promise(function(i) {
          var o, a = setTimeout(function() {
            i(new Error("Span processor did not completed within timeout period of " + t + " ms")), o = Et.timeout;
          }, t);
          n.forceFlush().then(function() {
            clearTimeout(a), o !== Et.timeout && (o = Et.resolved, i(o));
          }).catch(function(u) {
            clearTimeout(a), o = Et.error, i(u);
          });
        });
      });
      return new Promise(function(n, i) {
        Promise.all(r).then(function(o) {
          var a = o.filter(function(u) {
            return u !== Et.resolved;
          });
          a.length > 0 ? i(a) : n();
        }).catch(function(o) {
          return i([o]);
        });
      });
    }, e.prototype.shutdown = function() {
      return this.activeSpanProcessor.shutdown();
    }, e.prototype._getPropagator = function(t) {
      var r;
      return (r = this.constructor._registeredPropagators.get(t)) === null || r === void 0 ? void 0 : r();
    }, e.prototype._getSpanExporter = function(t) {
      var r;
      return (r = this.constructor._registeredExporters.get(t)) === null || r === void 0 ? void 0 : r();
    }, e.prototype._buildPropagatorFromEnv = function() {
      var t = this, r = Array.from(new Set(oe().OTEL_PROPAGATORS)), n = r.map(function(o) {
        var a = t._getPropagator(o);
        return a || v.warn('Propagator "' + o + '" requested through environment variable is unavailable.'), a;
      }), i = n.reduce(function(o, a) {
        return a && o.push(a), o;
      }, []);
      if (i.length !== 0)
        return r.length === 1 ? i[0] : new Wl({
          propagators: i
        });
    }, e.prototype._buildExporterFromEnv = function() {
      var t = oe().OTEL_TRACES_EXPORTER;
      if (!(t === "none" || t === "")) {
        var r = this._getSpanExporter(t);
        return r || v.error('Exporter "' + t + '" requested through environment variable is unavailable.'), r;
      }
    }, e._registeredPropagators = /* @__PURE__ */ new Map([
      ["tracecontext", function() {
        return new ld();
      }],
      ["baggage", function() {
        return new dl();
      }]
    ]), e._registeredExporters = /* @__PURE__ */ new Map(), e;
  }()
), up = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, cp = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Ta = (
  /** @class */
  function() {
    function e() {
      this._enabled = !1, this._currentContext = ht;
    }
    return e.prototype._bindFunction = function(t, r) {
      t === void 0 && (t = ht);
      var n = this, i = function() {
        for (var o = this, a = [], u = 0; u < arguments.length; u++)
          a[u] = arguments[u];
        return n.with(t, function() {
          return r.apply(o, a);
        });
      };
      return Object.defineProperty(i, "length", {
        enumerable: !1,
        configurable: !0,
        writable: !1,
        value: r.length
      }), i;
    }, e.prototype.active = function() {
      return this._currentContext;
    }, e.prototype.bind = function(t, r) {
      return t === void 0 && (t = this.active()), typeof r == "function" ? this._bindFunction(t, r) : r;
    }, e.prototype.disable = function() {
      return this._currentContext = ht, this._enabled = !1, this;
    }, e.prototype.enable = function() {
      return this._enabled ? this : (this._enabled = !0, this._currentContext = ht, this);
    }, e.prototype.with = function(t, r, n) {
      for (var i = [], o = 3; o < arguments.length; o++)
        i[o - 3] = arguments[o];
      var a = this._currentContext;
      this._currentContext = t || ht;
      try {
        return r.call.apply(r, cp([n], up(i), !1));
      } finally {
        this._currentContext = a;
      }
    }, e;
  }()
), fp = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), lp = (
  /** @class */
  function(e) {
    fp(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, r) || this;
      if (r.contextManager)
        throw "contextManager should be defined in register method not in constructor";
      if (r.propagator)
        throw "propagator should be defined in register method not in constructor";
      return n;
    }
    return t.prototype.register = function(r) {
      r === void 0 && (r = {}), r.contextManager === void 0 && (r.contextManager = new Ta()), r.contextManager && r.contextManager.enable(), e.prototype.register.call(this, r);
    }, t;
  }(sp)
), m;
(function(e) {
  e.CONNECT_END = "connectEnd", e.CONNECT_START = "connectStart", e.DECODED_BODY_SIZE = "decodedBodySize", e.DOM_COMPLETE = "domComplete", e.DOM_CONTENT_LOADED_EVENT_END = "domContentLoadedEventEnd", e.DOM_CONTENT_LOADED_EVENT_START = "domContentLoadedEventStart", e.DOM_INTERACTIVE = "domInteractive", e.DOMAIN_LOOKUP_END = "domainLookupEnd", e.DOMAIN_LOOKUP_START = "domainLookupStart", e.ENCODED_BODY_SIZE = "encodedBodySize", e.FETCH_START = "fetchStart", e.LOAD_EVENT_END = "loadEventEnd", e.LOAD_EVENT_START = "loadEventStart", e.NAVIGATION_START = "navigationStart", e.REDIRECT_END = "redirectEnd", e.REDIRECT_START = "redirectStart", e.REQUEST_START = "requestStart", e.RESPONSE_END = "responseEnd", e.RESPONSE_START = "responseStart", e.SECURE_CONNECTION_START = "secureConnectionStart", e.UNLOAD_EVENT_END = "unloadEventEnd", e.UNLOAD_EVENT_START = "unloadEventStart";
})(m || (m = {}));
var Ir;
function dp() {
  return Ir || (Ir = document.createElement("a")), Ir;
}
function dt(e, t) {
  return t in e;
}
function N(e, t, r, n) {
  var i = void 0, o = void 0;
  dt(r, t) && typeof r[t] == "number" && (i = r[t]);
  var a = m.FETCH_START;
  if (dt(r, a) && typeof r[a] == "number" && (o = r[a]), i !== void 0 && o !== void 0 && i >= o)
    return e.addEvent(t, i), e;
}
function $t(e, t, r) {
  r === void 0 && (r = !1), r || (N(e, m.FETCH_START, t), N(e, m.DOMAIN_LOOKUP_START, t), N(e, m.DOMAIN_LOOKUP_END, t), N(e, m.CONNECT_START, t), dt(t, "name") && t.name.startsWith("https:") && N(e, m.SECURE_CONNECTION_START, t), N(e, m.CONNECT_END, t), N(e, m.REQUEST_START, t), N(e, m.RESPONSE_START, t), N(e, m.RESPONSE_END, t));
  var n = t[m.ENCODED_BODY_SIZE];
  n !== void 0 && e.setAttribute($l, n);
  var i = t[m.DECODED_BODY_SIZE];
  i !== void 0 && n !== i && e.setAttribute(jl, i);
}
function pp(e) {
  return e.slice().sort(function(t, r) {
    var n = t[m.FETCH_START], i = r[m.FETCH_START];
    return n > i ? 1 : n < i ? -1 : 0;
  });
}
function Sa() {
  return typeof location != "undefined" ? location.origin : void 0;
}
function Oa(e, t, r, n, i, o) {
  i === void 0 && (i = /* @__PURE__ */ new WeakSet());
  var a = rt(e);
  e = a.toString();
  var u = _p(e, t, r, n, i, o);
  if (u.length === 0)
    return {
      mainRequest: void 0
    };
  if (u.length === 1)
    return {
      mainRequest: u[0]
    };
  var c = pp(u);
  if (a.origin !== Sa() && c.length > 1) {
    var s = c[0], f = hp(c, s[m.RESPONSE_END], r), l = s[m.RESPONSE_END], d = f[m.FETCH_START];
    return d < l && (f = s, s = void 0), {
      corsPreFlightRequest: s,
      mainRequest: f
    };
  } else
    return {
      mainRequest: u[0]
    };
}
function hp(e, t, r) {
  for (var n = ft(r), i = ft(Qt(t)), o = e[1], a, u = e.length, c = 1; c < u; c++) {
    var s = e[c], f = ft(Qt(s[m.FETCH_START])), l = ft(Qt(s[m.RESPONSE_END])), d = n - l;
    f >= i && (!a || d < a) && (a = d, o = s);
  }
  return o;
}
function _p(e, t, r, n, i, o) {
  var a = ft(t), u = ft(r), c = n.filter(function(s) {
    var f = ft(Qt(s[m.FETCH_START])), l = ft(Qt(s[m.RESPONSE_END]));
    return s.initiatorType.toLowerCase() === (o || "xmlhttprequest") && s.name === e && f >= a && l <= u;
  });
  return c.length > 0 && (c = c.filter(function(s) {
    return !i.has(s);
  })), c;
}
function rt(e) {
  if (typeof URL == "function")
    return new URL(e, typeof document != "undefined" ? document.baseURI : typeof location != "undefined" ? location.href : void 0);
  var t = dp();
  return t.href = e, t;
}
function Aa(e, t) {
  if (e.nodeType === Node.DOCUMENT_NODE)
    return "/";
  var r = Ep(e, t);
  if (t && r.indexOf("@id") > 0)
    return r;
  var n = "";
  return e.parentNode && (n += Aa(e.parentNode, !1)), n += r, n;
}
function vp(e) {
  if (!e.parentNode)
    return 0;
  var t = [e.nodeType];
  e.nodeType === Node.CDATA_SECTION_NODE && t.push(Node.TEXT_NODE);
  var r = Array.from(e.parentNode.childNodes);
  return r = r.filter(function(n) {
    var i = n.localName;
    return t.indexOf(n.nodeType) >= 0 && i === e.localName;
  }), r.length >= 1 ? r.indexOf(e) + 1 : 0;
}
function Ep(e, t) {
  var r = e.nodeType, n = vp(e), i = "";
  if (r === Node.ELEMENT_NODE) {
    var o = e.getAttribute("id");
    if (t && o)
      return '//*[@id="' + o + '"]';
    i = e.localName;
  } else if (r === Node.TEXT_NODE || r === Node.CDATA_SECTION_NODE)
    i = "text()";
  else if (r === Node.COMMENT_NODE)
    i = "comment()";
  else
    return "";
  return i && n > 1 ? "/" + i + "[" + n + "]" : "/" + i;
}
function ba(e, t) {
  var r = t || [];
  (typeof r == "string" || r instanceof RegExp) && (r = [r]);
  var n = rt(e);
  return n.origin === Sa() ? !0 : r.some(function(i) {
    return wd(e, i);
  });
}
var pn = function() {
  return pn = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, pn.apply(this, arguments);
}, gp = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.instrumentationName = t, this.instrumentationVersion = r, this._config = {}, this._wrap = I.wrap, this._unwrap = I.unwrap, this._massWrap = I.massWrap, this._massUnwrap = I.massUnwrap, this.setConfig(n), this._diag = v.createComponentLogger({
        namespace: t
      }), this._tracer = A.getTracer(t, r), this._meter = K.getMeter(t, r), this._logger = he.getLogger(t, r), this._updateMetricInstruments();
    }
    return Object.defineProperty(e.prototype, "meter", {
      /* Returns meter */
      get: function() {
        return this._meter;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setMeterProvider = function(t) {
      this._meter = t.getMeter(this.instrumentationName, this.instrumentationVersion), this._updateMetricInstruments();
    }, Object.defineProperty(e.prototype, "logger", {
      /* Returns logger */
      get: function() {
        return this._logger;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setLoggerProvider = function(t) {
      this._logger = t.getLogger(this.instrumentationName, this.instrumentationVersion);
    }, e.prototype.getModuleDefinitions = function() {
      var t, r = (t = this.init()) !== null && t !== void 0 ? t : [];
      return Array.isArray(r) ? r : [r];
    }, e.prototype._updateMetricInstruments = function() {
    }, e.prototype.getConfig = function() {
      return this._config;
    }, e.prototype.setConfig = function(t) {
      this._config = pn({ enabled: !0 }, t);
    }, e.prototype.setTracerProvider = function(t) {
      this._tracer = t.getTracer(this.instrumentationName, this.instrumentationVersion);
    }, Object.defineProperty(e.prototype, "tracer", {
      /* Returns tracer */
      get: function() {
        return this._tracer;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._runSpanCustomizationHook = function(t, r, n, i) {
      if (t)
        try {
          t(n, i);
        } catch (o) {
          this._diag.error("Error running span customization hook due to exception in handler", { triggerName: r }, o);
        }
    }, e;
  }()
), yp = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), mp = (
  /** @class */
  function(e) {
    yp(t, e);
    function t(r, n, i) {
      var o = e.call(this, r, n, i) || this;
      return o._config.enabled && o.enable(), o;
    }
    return t;
  }(gp)
);
function Si(e, t, r) {
  var n, i;
  try {
    i = e();
  } catch (o) {
    n = o;
  } finally {
    return t(n, i), i;
  }
}
var te;
(function(e) {
  e.DOCUMENT_LOAD = "documentLoad", e.DOCUMENT_FETCH = "documentFetch", e.RESOURCE_FETCH = "resourceFetch";
})(te || (te = {}));
var Tp = "0.44.0", Sp = "@opentelemetry/instrumentation-document-load";
const Op = "http.url", Ap = "http.user_agent", Cr = Op, bp = Ap;
var je;
(function(e) {
  e.FIRST_PAINT = "firstPaint", e.FIRST_CONTENTFUL_PAINT = "firstContentfulPaint";
})(je || (je = {}));
var wp = function() {
  var e, t, r = {}, n = (t = (e = ke).getEntriesByType) === null || t === void 0 ? void 0 : t.call(e, "navigation")[0];
  if (n) {
    var i = Object.values(m);
    i.forEach(function(u) {
      if (dt(n, u)) {
        var c = n[u];
        typeof c == "number" && (r[u] = c);
      }
    });
  } else {
    var o = ke, a = o.timing;
    if (a) {
      var i = Object.values(m);
      i.forEach(function(c) {
        if (dt(a, c)) {
          var s = a[c];
          typeof s == "number" && (r[c] = s);
        }
      });
    }
  }
  return r;
}, Oi = {
  "first-paint": je.FIRST_PAINT,
  "first-contentful-paint": je.FIRST_CONTENTFUL_PAINT
}, Rp = function(e) {
  var t, r, n = (r = (t = ke).getEntriesByType) === null || r === void 0 ? void 0 : r.call(t, "paint");
  n && n.forEach(function(i) {
    var o = i.name, a = i.startTime;
    dt(Oi, o) && e.addEvent(Oi[o], a);
  });
}, Lp = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Pp = (
  /** @class */
  function(e) {
    Lp(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, Sp, Tp, r) || this;
      return n.component = "document-load", n.version = "1", n.moduleName = n.component, n;
    }
    return t.prototype.init = function() {
    }, t.prototype._onDocumentLoaded = function() {
      var r = this;
      window.setTimeout(function() {
        r._collectPerformance();
      });
    }, t.prototype._addResourcesSpans = function(r) {
      var n = this, i, o, a = (o = (i = ke).getEntriesByType) === null || o === void 0 ? void 0 : o.call(i, "resource");
      a && a.forEach(function(u) {
        n._initResourceSpan(u, r);
      });
    }, t.prototype._collectPerformance = function() {
      var r = this, n = Array.from(document.getElementsByTagName("meta")).find(function(a) {
        return a.getAttribute("name") === rl;
      }), i = wp(), o = n && n.content || "";
      S.with(x.extract(ht, { traceparent: o }), function() {
        var a, u = r._startSpan(te.DOCUMENT_LOAD, m.FETCH_START, i);
        u && (S.with(A.setSpan(S.active(), u), function() {
          var c = r._startSpan(te.DOCUMENT_FETCH, m.FETCH_START, i);
          c && (c.setAttribute(Cr, location.href), S.with(A.setSpan(S.active(), c), function() {
            var s;
            r.getConfig().ignoreNetworkEvents || $t(c, i), r._addCustomAttributesOnSpan(c, (s = r.getConfig().applyCustomAttributesOnSpan) === null || s === void 0 ? void 0 : s.documentFetch), r._endSpan(c, m.RESPONSE_END, i);
          }));
        }), u.setAttribute(Cr, location.href), u.setAttribute(bp, navigator.userAgent), r._addResourcesSpans(u), r.getConfig().ignoreNetworkEvents || (N(u, m.FETCH_START, i), N(u, m.UNLOAD_EVENT_START, i), N(u, m.UNLOAD_EVENT_END, i), N(u, m.DOM_INTERACTIVE, i), N(u, m.DOM_CONTENT_LOADED_EVENT_START, i), N(u, m.DOM_CONTENT_LOADED_EVENT_END, i), N(u, m.DOM_COMPLETE, i), N(u, m.LOAD_EVENT_START, i), N(u, m.LOAD_EVENT_END, i)), r.getConfig().ignorePerformancePaintEvents || Rp(u), r._addCustomAttributesOnSpan(u, (a = r.getConfig().applyCustomAttributesOnSpan) === null || a === void 0 ? void 0 : a.documentLoad), r._endSpan(u, m.LOAD_EVENT_END, i));
      });
    }, t.prototype._endSpan = function(r, n, i) {
      r && (dt(i, n) ? r.end(i[n]) : r.end());
    }, t.prototype._initResourceSpan = function(r, n) {
      var i, o = this._startSpan(te.RESOURCE_FETCH, m.FETCH_START, r, n);
      o && (o.setAttribute(Cr, r.name), this.getConfig().ignoreNetworkEvents || $t(o, r), this._addCustomAttributesOnResourceSpan(o, r, (i = this.getConfig().applyCustomAttributesOnSpan) === null || i === void 0 ? void 0 : i.resourceFetch), this._endSpan(o, m.RESPONSE_END, r));
    }, t.prototype._startSpan = function(r, n, i, o) {
      if (dt(i, n) && typeof i[n] == "number") {
        var a = this.tracer.startSpan(r, {
          startTime: i[n]
        }, o ? A.setSpan(S.active(), o) : void 0);
        return a;
      }
    }, t.prototype._waitForPageLoad = function() {
      window.document.readyState === "complete" ? this._onDocumentLoaded() : (this._onDocumentLoaded = this._onDocumentLoaded.bind(this), window.addEventListener("load", this._onDocumentLoaded));
    }, t.prototype._addCustomAttributesOnSpan = function(r, n) {
      var i = this;
      n && Si(function() {
        return n(r);
      }, function(o) {
        o && i._diag.error("addCustomAttributesOnSpan", o);
      });
    }, t.prototype._addCustomAttributesOnResourceSpan = function(r, n, i) {
      var o = this;
      i && Si(function() {
        return i(r, n);
      }, function(a) {
        a && o._diag.error("addCustomAttributesOnResourceSpan", a);
      });
    }, t.prototype.enable = function() {
      window.removeEventListener("load", this._onDocumentLoaded), this._waitForPageLoad();
    }, t.prototype.disable = function() {
      window.removeEventListener("load", this._onDocumentLoaded);
    }, t;
  }(mp)
), hn = function() {
  return hn = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, hn.apply(this, arguments);
}, Np = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.instrumentationName = t, this.instrumentationVersion = r, this._config = {}, this._wrap = I.wrap, this._unwrap = I.unwrap, this._massWrap = I.massWrap, this._massUnwrap = I.massUnwrap, this.setConfig(n), this._diag = v.createComponentLogger({
        namespace: t
      }), this._tracer = A.getTracer(t, r), this._meter = K.getMeter(t, r), this._logger = he.getLogger(t, r), this._updateMetricInstruments();
    }
    return Object.defineProperty(e.prototype, "meter", {
      /* Returns meter */
      get: function() {
        return this._meter;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setMeterProvider = function(t) {
      this._meter = t.getMeter(this.instrumentationName, this.instrumentationVersion), this._updateMetricInstruments();
    }, Object.defineProperty(e.prototype, "logger", {
      /* Returns logger */
      get: function() {
        return this._logger;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setLoggerProvider = function(t) {
      this._logger = t.getLogger(this.instrumentationName, this.instrumentationVersion);
    }, e.prototype.getModuleDefinitions = function() {
      var t, r = (t = this.init()) !== null && t !== void 0 ? t : [];
      return Array.isArray(r) ? r : [r];
    }, e.prototype._updateMetricInstruments = function() {
    }, e.prototype.getConfig = function() {
      return this._config;
    }, e.prototype.setConfig = function(t) {
      this._config = hn({ enabled: !0 }, t);
    }, e.prototype.setTracerProvider = function(t) {
      this._tracer = t.getTracer(this.instrumentationName, this.instrumentationVersion);
    }, Object.defineProperty(e.prototype, "tracer", {
      /* Returns tracer */
      get: function() {
        return this._tracer;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._runSpanCustomizationHook = function(t, r, n, i) {
      if (t)
        try {
          t(n, i);
        } catch (o) {
          this._diag.error("Error running span customization hook due to exception in handler", { triggerName: r }, o);
        }
    }, e;
  }()
), Ip = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Cp = (
  /** @class */
  function(e) {
    Ip(t, e);
    function t(r, n, i) {
      var o = e.call(this, r, n, i) || this;
      return o._config.enabled && o.enable(), o;
    }
    return t;
  }(Np)
);
function Mp(e, t, r) {
  var n, i;
  try {
    i = e();
  } catch (o) {
    n = o;
  } finally {
    return t(n, i), i;
  }
}
function xp(e) {
  return typeof e == "function" && typeof e.__original == "function" && typeof e.__unwrap == "function" && e.__wrapped === !0;
}
var Mr = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, _n = performance, Dp = "http.method", Up = "http.url", Bp = "http.host", kp = "http.scheme", Gp = "http.status_code", Hp = "http.user_agent", $p = "http.request_content_length_uncompressed", jp = Dp, Vp = Up, Fp = Bp, Xp = kp, zp = Gp, qp = Hp, Wp = $p, Yp = 9, Kp = 6, Jp = Math.pow(10, Kp), Ai = Math.pow(10, Yp);
function vn(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Jp);
  return [r, n];
}
function Zp() {
  var e = _n.timeOrigin;
  if (typeof e != "number") {
    var t = _n;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function bi(e) {
  var t = vn(Zp()), r = vn(_n.now());
  return Qp(t, r);
}
function Qp(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= Ai && (r[1] -= Ai, r[0] += 1), r;
}
var th = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function eh(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
function rh(e, t) {
  var r, n;
  if (!t)
    return !1;
  try {
    for (var i = th(t), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (eh(e, a))
        return !0;
    }
  } catch (u) {
    r = { error: u };
  } finally {
    try {
      o && !o.done && (n = i.return) && n.call(i);
    } finally {
      if (r) throw r.error;
    }
  }
  return !1;
}
var Ve;
(function(e) {
  e.COMPONENT = "component", e.HTTP_ERROR_NAME = "http.error_name", e.HTTP_STATUS_TEXT = "http.status_text";
})(Ve || (Ve = {}));
var nh = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, ih = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, oh = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, ah = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, wa = v.createComponentLogger({
  namespace: "@opentelemetry/opentelemetry-instrumentation-fetch/utils"
});
function sh() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  if (e[0] instanceof URL || typeof e[0] == "string") {
    var r = e[1];
    if (!(r != null && r.body))
      return Promise.resolve();
    if (r.body instanceof ReadableStream) {
      var n = uh(r.body), i = n.body, o = n.length;
      return r.body = i, o;
    } else
      return Promise.resolve(ch(r.body));
  } else {
    var a = e[0];
    return a != null && a.body ? a.clone().text().then(function(u) {
      return En(u);
    }) : Promise.resolve();
  }
}
function uh(e) {
  if (!e.pipeThrough)
    return wa.warn("Platform has ReadableStream but not pipeThrough!"), {
      body: e,
      length: Promise.resolve(void 0)
    };
  var t = 0, r, n = new Promise(function(o) {
    r = o;
  }), i = new TransformStream({
    start: function() {
    },
    transform: function(o, a) {
      return nh(this, void 0, void 0, function() {
        var u;
        return ih(this, function(c) {
          switch (c.label) {
            case 0:
              return [4, o];
            case 1:
              return u = c.sent(), t += u.byteLength, a.enqueue(o), [
                2
                /*return*/
              ];
          }
        });
      });
    },
    flush: function() {
      r(t);
    }
  });
  return {
    body: e.pipeThrough(i),
    length: n
  };
}
function ch(e) {
  if (typeof Document != "undefined" && e instanceof Document)
    return new XMLSerializer().serializeToString(document).length;
  if (e instanceof Blob)
    return e.size;
  if (e.byteLength !== void 0)
    return e.byteLength;
  if (e instanceof FormData)
    return lh(e);
  if (e instanceof URLSearchParams)
    return En(e.toString());
  if (typeof e == "string")
    return En(e);
  wa.warn("unknown body type");
}
var fh = new TextEncoder();
function En(e) {
  return fh.encode(e).byteLength;
}
function lh(e) {
  var t, r, n = 0;
  try {
    for (var i = oh(e.entries()), o = i.next(); !o.done; o = i.next()) {
      var a = ah(o.value, 2), u = a[0], c = a[1];
      n += u.length, c instanceof Blob ? n += c.size : n += c.length;
    }
  } catch (s) {
    t = { error: s };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
var wi = "0.57.2", dh = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), ph = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, hh = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, xr, _h = 300, Ri = typeof process == "object" && ((xr = process.release) === null || xr === void 0 ? void 0 : xr.name) === "node", vh = (
  /** @class */
  function(e) {
    dh(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, "@opentelemetry/instrumentation-fetch", wi, r) || this;
      return n.component = "fetch", n.version = wi, n.moduleName = n.component, n._usedResources = /* @__PURE__ */ new WeakSet(), n._tasksCount = 0, n;
    }
    return t.prototype.init = function() {
    }, t.prototype._addChildSpan = function(r, n) {
      var i = this.tracer.startSpan("CORS Preflight", {
        startTime: n[m.FETCH_START]
      }, A.setSpan(S.active(), r));
      $t(i, n, this.getConfig().ignoreNetworkEvents), i.end(n[m.RESPONSE_END]);
    }, t.prototype._addFinalSpanAttributes = function(r, n) {
      var i = rt(n.url);
      r.setAttribute(zp, n.status), n.statusText != null && r.setAttribute(Ve.HTTP_STATUS_TEXT, n.statusText), r.setAttribute(Fp, i.host), r.setAttribute(Xp, i.protocol.replace(":", "")), typeof navigator != "undefined" && r.setAttribute(qp, navigator.userAgent);
    }, t.prototype._addHeaders = function(r, n) {
      if (!ba(n, this.getConfig().propagateTraceHeaderCorsUrls)) {
        var i = {};
        x.inject(S.active(), i), Object.keys(i).length > 0 && this._diag.debug("headers inject skipped due to CORS policy");
        return;
      }
      if (r instanceof Request)
        x.inject(S.active(), r.headers, {
          set: function(o, a, u) {
            return o.set(a, typeof u == "string" ? u : String(u));
          }
        });
      else if (r.headers instanceof Headers)
        x.inject(S.active(), r.headers, {
          set: function(o, a, u) {
            return o.set(a, typeof u == "string" ? u : String(u));
          }
        });
      else if (r.headers instanceof Map)
        x.inject(S.active(), r.headers, {
          set: function(o, a, u) {
            return o.set(a, typeof u == "string" ? u : String(u));
          }
        });
      else {
        var i = {};
        x.inject(S.active(), i), r.headers = Object.assign({}, i, r.headers || {});
      }
    }, t.prototype._clearResources = function() {
      this._tasksCount === 0 && this.getConfig().clearTimingResources && (performance.clearResourceTimings(), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t.prototype._createSpan = function(r, n) {
      var i;
      if (n === void 0 && (n = {}), rh(r, this.getConfig().ignoreUrls)) {
        this._diag.debug("ignoring span as url matches ignored url");
        return;
      }
      var o = (n.method || "GET").toUpperCase(), a = "HTTP " + o;
      return this.tracer.startSpan(a, {
        kind: ie.CLIENT,
        attributes: (i = {}, i[Ve.COMPONENT] = this.moduleName, i[jp] = o, i[Vp] = r, i)
      });
    }, t.prototype._findResourceAndAddNetworkEvents = function(r, n, i) {
      var o = n.entries;
      if (!o.length) {
        if (!performance.getEntriesByType)
          return;
        o = performance.getEntriesByType("resource");
      }
      var a = Oa(n.spanUrl, n.startTime, i, o, this._usedResources, "fetch");
      if (a.mainRequest) {
        var u = a.mainRequest;
        this._markResourceAsUsed(u);
        var c = a.corsPreFlightRequest;
        c && (this._addChildSpan(r, c), this._markResourceAsUsed(c)), $t(r, u, this.getConfig().ignoreNetworkEvents);
      }
    }, t.prototype._markResourceAsUsed = function(r) {
      this._usedResources.add(r);
    }, t.prototype._endSpan = function(r, n, i) {
      var o = this, a = vn(Date.now()), u = bi();
      this._addFinalSpanAttributes(r, i), setTimeout(function() {
        var c;
        (c = n.observer) === null || c === void 0 || c.disconnect(), o._findResourceAndAddNetworkEvents(r, n, u), o._tasksCount--, o._clearResources(), r.end(a);
      }, _h);
    }, t.prototype._patchConstructor = function() {
      var r = this;
      return function(n) {
        var i = r;
        return function() {
          for (var a = [], u = 0; u < arguments.length; u++)
            a[u] = arguments[u];
          var c = this, s = rt(a[0] instanceof Request ? a[0].url : String(a[0])).href, f = a[0] instanceof Request ? a[0] : a[1] || {}, l = i._createSpan(s, f);
          if (!l)
            return n.apply(this, a);
          var d = i._prepareSpanData(s);
          i.getConfig().measureRequestSize && sh.apply(void 0, hh([], ph(a), !1)).then(function(g) {
            g && l.setAttribute(Wp, g);
          }).catch(function(g) {
            i._diag.warn("getFetchBodyLength", g);
          });
          function h(g, y) {
            i._applyAttributesAfterFetch(g, f, y), i._endSpan(g, d, {
              status: y.status || 0,
              statusText: y.message,
              url: s
            });
          }
          function _(g, y) {
            i._applyAttributesAfterFetch(g, f, y), y.status >= 200 && y.status < 400 ? i._endSpan(g, d, y) : i._endSpan(g, d, {
              status: y.status,
              statusText: y.statusText,
              url: s
            });
          }
          function p(g, y, b) {
            try {
              var L = b.clone(), G = b.clone(), U = L.body;
              if (U) {
                var Lt = U.getReader(), Vt = function() {
                  Lt.read().then(function(Pt) {
                    var B = Pt.done;
                    B ? _(g, G) : Vt();
                  }, function(Pt) {
                    h(g, Pt);
                  });
                };
                Vt();
              } else
                _(g, b);
            } finally {
              y(b);
            }
          }
          function E(g, y, b) {
            try {
              h(g, b);
            } finally {
              y(b);
            }
          }
          return new Promise(function(g, y) {
            return S.with(A.setSpan(S.active(), l), function() {
              return i._addHeaders(f, s), i._tasksCount++, n.apply(c, f instanceof Request ? [f] : [s, f]).then(p.bind(c, l, g), E.bind(c, l, y));
            });
          });
        };
      };
    }, t.prototype._applyAttributesAfterFetch = function(r, n, i) {
      var o = this, a = this.getConfig().applyCustomAttributesOnSpan;
      a && Mp(function() {
        return a(r, n, i);
      }, function(u) {
        u && o._diag.error("applyCustomAttributesOnSpan", u);
      });
    }, t.prototype._prepareSpanData = function(r) {
      var n = bi(), i = [];
      if (typeof PerformanceObserver != "function")
        return { entries: i, startTime: n, spanUrl: r };
      var o = new PerformanceObserver(function(a) {
        var u = a.getEntries();
        u.forEach(function(c) {
          c.initiatorType === "fetch" && c.name === r && i.push(c);
        });
      });
      return o.observe({
        entryTypes: ["resource"]
      }), { entries: i, observer: o, startTime: n, spanUrl: r };
    }, t.prototype.enable = function() {
      if (Ri) {
        this._diag.warn("this instrumentation is intended for web usage only, it does not instrument Node.js's fetch()");
        return;
      }
      xp(fetch) && (this._unwrap(Mr, "fetch"), this._diag.debug("removing previous patch for constructor")), this._wrap(Mr, "fetch", this._patchConstructor());
    }, t.prototype.disable = function() {
      Ri || (this._unwrap(Mr, "fetch"), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t;
  }(Cp)
), gn = function() {
  return gn = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, gn.apply(this, arguments);
}, Eh = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.instrumentationName = t, this.instrumentationVersion = r, this._config = {}, this._wrap = I.wrap, this._unwrap = I.unwrap, this._massWrap = I.massWrap, this._massUnwrap = I.massUnwrap, this.setConfig(n), this._diag = v.createComponentLogger({
        namespace: t
      }), this._tracer = A.getTracer(t, r), this._meter = K.getMeter(t, r), this._logger = he.getLogger(t, r), this._updateMetricInstruments();
    }
    return Object.defineProperty(e.prototype, "meter", {
      /* Returns meter */
      get: function() {
        return this._meter;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setMeterProvider = function(t) {
      this._meter = t.getMeter(this.instrumentationName, this.instrumentationVersion), this._updateMetricInstruments();
    }, Object.defineProperty(e.prototype, "logger", {
      /* Returns logger */
      get: function() {
        return this._logger;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setLoggerProvider = function(t) {
      this._logger = t.getLogger(this.instrumentationName, this.instrumentationVersion);
    }, e.prototype.getModuleDefinitions = function() {
      var t, r = (t = this.init()) !== null && t !== void 0 ? t : [];
      return Array.isArray(r) ? r : [r];
    }, e.prototype._updateMetricInstruments = function() {
    }, e.prototype.getConfig = function() {
      return this._config;
    }, e.prototype.setConfig = function(t) {
      this._config = gn({ enabled: !0 }, t);
    }, e.prototype.setTracerProvider = function(t) {
      this._tracer = t.getTracer(this.instrumentationName, this.instrumentationVersion);
    }, Object.defineProperty(e.prototype, "tracer", {
      /* Returns tracer */
      get: function() {
        return this._tracer;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._runSpanCustomizationHook = function(t, r, n, i) {
      if (t)
        try {
          t(n, i);
        } catch (o) {
          this._diag.error("Error running span customization hook due to exception in handler", { triggerName: r }, o);
        }
    }, e;
  }()
), gh = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), yh = (
  /** @class */
  function(e) {
    gh(t, e);
    function t(r, n, i) {
      var o = e.call(this, r, n, i) || this;
      return o._config.enabled && o.enable(), o;
    }
    return t;
  }(Eh)
);
function mh(e, t, r) {
  var n, i;
  try {
    i = e();
  } catch (o) {
    n = o;
  } finally {
    return t(n, i), i;
  }
}
function Li(e) {
  return typeof e == "function" && typeof e.__original == "function" && typeof e.__unwrap == "function" && e.__wrapped === !0;
}
var se = performance, Th = "http.method", Sh = "http.url", Oh = "http.host", Ah = "http.scheme", bh = "http.status_code", wh = "http.user_agent", Rh = "http.request_content_length_uncompressed", Lh = Th, Ph = Sh, Nh = Oh, Ih = Ah, Ch = bh, Mh = wh, xh = Rh, Dh = 9, Uh = 6, Bh = Math.pow(10, Uh), Pi = Math.pow(10, Dh);
function Ni(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Bh);
  return [r, n];
}
function kh() {
  var e = se.timeOrigin;
  if (typeof e != "number") {
    var t = se;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function Ii(e) {
  var t = Ni(kh()), r = Ni(se.now());
  return Gh(t, r);
}
function Gh(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= Pi && (r[1] -= Pi, r[0] += 1), r;
}
var Hh = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function $h(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
function jh(e, t) {
  var r, n;
  if (!t)
    return !1;
  try {
    for (var i = Hh(t), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if ($h(e, a))
        return !0;
    }
  } catch (u) {
    r = { error: u };
  } finally {
    try {
      o && !o.done && (n = i.return) && n.call(i);
    } finally {
      if (r) throw r.error;
    }
  }
  return !1;
}
var et;
(function(e) {
  e.METHOD_OPEN = "open", e.METHOD_SEND = "send", e.EVENT_ABORT = "abort", e.EVENT_ERROR = "error", e.EVENT_LOAD = "loaded", e.EVENT_TIMEOUT = "timeout";
})(et || (et = {}));
var Vh = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Fh = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Xh = v.createComponentLogger({
  namespace: "@opentelemetry/opentelemetry-instrumentation-xml-http-request/utils"
});
function zh(e) {
  if (typeof Document != "undefined" && e instanceof Document)
    return new XMLSerializer().serializeToString(document).length;
  if (e instanceof Blob)
    return e.size;
  if (e.byteLength !== void 0)
    return e.byteLength;
  if (e instanceof FormData)
    return Wh(e);
  if (e instanceof URLSearchParams)
    return Ci(e.toString());
  if (typeof e == "string")
    return Ci(e);
  Xh.warn("unknown body type");
}
var qh = new TextEncoder();
function Ci(e) {
  return qh.encode(e).byteLength;
}
function Wh(e) {
  var t, r, n = 0;
  try {
    for (var i = Vh(e.entries()), o = i.next(); !o.done; o = i.next()) {
      var a = Fh(o.value, 2), u = a[0], c = a[1];
      n += u.length, c instanceof Blob ? n += c.size : n += c.length;
    }
  } catch (s) {
    t = { error: s };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
var Mi = "0.57.2", yn;
(function(e) {
  e.HTTP_STATUS_TEXT = "http.status_text";
})(yn || (yn = {}));
var Yh = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Kh = 300, Jh = (
  /** @class */
  function(e) {
    Yh(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, "@opentelemetry/instrumentation-xml-http-request", Mi, r) || this;
      return n.component = "xml-http-request", n.version = Mi, n.moduleName = n.component, n._tasksCount = 0, n._xhrMem = /* @__PURE__ */ new WeakMap(), n._usedResources = /* @__PURE__ */ new WeakSet(), n;
    }
    return t.prototype.init = function() {
    }, t.prototype._addHeaders = function(r, n) {
      var i = rt(n).href;
      if (!ba(i, this.getConfig().propagateTraceHeaderCorsUrls)) {
        var o = {};
        x.inject(S.active(), o), Object.keys(o).length > 0 && this._diag.debug("headers inject skipped due to CORS policy");
        return;
      }
      var a = {};
      x.inject(S.active(), a), Object.keys(a).forEach(function(u) {
        r.setRequestHeader(u, String(a[u]));
      });
    }, t.prototype._addChildSpan = function(r, n) {
      var i = this;
      S.with(A.setSpan(S.active(), r), function() {
        var o = i.tracer.startSpan("CORS Preflight", {
          startTime: n[m.FETCH_START]
        });
        $t(o, n, i.getConfig().ignoreNetworkEvents), o.end(n[m.RESPONSE_END]);
      });
    }, t.prototype._addFinalSpanAttributes = function(r, n, i) {
      if (typeof i == "string") {
        var o = rt(i);
        n.status !== void 0 && r.setAttribute(Ch, n.status), n.statusText !== void 0 && r.setAttribute(yn.HTTP_STATUS_TEXT, n.statusText), r.setAttribute(Nh, o.host), r.setAttribute(Ih, o.protocol.replace(":", "")), r.setAttribute(Mh, navigator.userAgent);
      }
    }, t.prototype._applyAttributesAfterXHR = function(r, n) {
      var i = this, o = this.getConfig().applyCustomAttributesOnSpan;
      typeof o == "function" && mh(function() {
        return o(r, n);
      }, function(a) {
        a && i._diag.error("applyCustomAttributesOnSpan", a);
      });
    }, t.prototype._addResourceObserver = function(r, n) {
      var i = this._xhrMem.get(r);
      !i || typeof PerformanceObserver != "function" || typeof PerformanceResourceTiming != "function" || (i.createdResources = {
        observer: new PerformanceObserver(function(o) {
          var a = o.getEntries(), u = rt(n);
          a.forEach(function(c) {
            c.initiatorType === "xmlhttprequest" && c.name === u.href && i.createdResources && i.createdResources.entries.push(c);
          });
        }),
        entries: []
      }, i.createdResources.observer.observe({
        entryTypes: ["resource"]
      }));
    }, t.prototype._clearResources = function() {
      this._tasksCount === 0 && this.getConfig().clearTimingResources && (se.clearResourceTimings(), this._xhrMem = /* @__PURE__ */ new WeakMap(), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t.prototype._findResourceAndAddNetworkEvents = function(r, n, i, o, a) {
      if (!(!i || !o || !a || !r.createdResources)) {
        var u = r.createdResources.entries;
        (!u || !u.length) && (u = se.getEntriesByType("resource"));
        var c = Oa(rt(i).href, o, a, u, this._usedResources);
        if (c.mainRequest) {
          var s = c.mainRequest;
          this._markResourceAsUsed(s);
          var f = c.corsPreFlightRequest;
          f && (this._addChildSpan(n, f), this._markResourceAsUsed(f)), $t(n, s, this.getConfig().ignoreNetworkEvents);
        }
      }
    }, t.prototype._cleanPreviousSpanInformation = function(r) {
      var n = this._xhrMem.get(r);
      if (n) {
        var i = n.callbackToRemoveEvents;
        i && i(), this._xhrMem.delete(r);
      }
    }, t.prototype._createSpan = function(r, n, i) {
      var o;
      if (jh(n, this.getConfig().ignoreUrls)) {
        this._diag.debug("ignoring span as url matches ignored url");
        return;
      }
      var a = i.toUpperCase(), u = this.tracer.startSpan(a, {
        kind: ie.CLIENT,
        attributes: (o = {}, o[Lh] = i, o[Ph] = rt(n).toString(), o)
      });
      return u.addEvent(et.METHOD_OPEN), this._cleanPreviousSpanInformation(r), this._xhrMem.set(r, {
        span: u,
        spanUrl: n
      }), u;
    }, t.prototype._markResourceAsUsed = function(r) {
      this._usedResources.add(r);
    }, t.prototype._patchOpen = function() {
      var r = this;
      return function(n) {
        var i = r;
        return function() {
          for (var a = [], u = 0; u < arguments.length; u++)
            a[u] = arguments[u];
          var c = a[0], s = a[1];
          return i._createSpan(this, s, c), n.apply(this, a);
        };
      };
    }, t.prototype._patchSend = function() {
      var r = this;
      function n(f, l, d, h) {
        var _ = l.callbackToRemoveEvents;
        typeof _ == "function" && _();
        var p = l.span, E = l.spanUrl, g = l.sendStartTime;
        p && (r._findResourceAndAddNetworkEvents(l, p, E, g, d), p.addEvent(f, h), r._addFinalSpanAttributes(p, l, E), p.end(h), r._tasksCount--), r._clearResources();
      }
      function i(f, l) {
        var d = r._xhrMem.get(l);
        if (d) {
          d.status = l.status, d.statusText = l.statusText, r._xhrMem.delete(l), d.span && r._applyAttributesAfterXHR(d.span, l);
          var h = Ii(), _ = Date.now();
          setTimeout(function() {
            n(f, d, h, _);
          }, Kh);
        }
      }
      function o() {
        i(et.EVENT_ERROR, this);
      }
      function a() {
        i(et.EVENT_ABORT, this);
      }
      function u() {
        i(et.EVENT_TIMEOUT, this);
      }
      function c() {
        this.status < 299 ? i(et.EVENT_LOAD, this) : i(et.EVENT_ERROR, this);
      }
      function s(f) {
        f.removeEventListener("abort", a), f.removeEventListener("error", o), f.removeEventListener("load", c), f.removeEventListener("timeout", u);
        var l = r._xhrMem.get(f);
        l && (l.callbackToRemoveEvents = void 0);
      }
      return function(f) {
        return function() {
          for (var d = this, h = [], _ = 0; _ < arguments.length; _++)
            h[_] = arguments[_];
          var p = r._xhrMem.get(this);
          if (!p)
            return f.apply(this, h);
          var E = p.span, g = p.spanUrl;
          if (E && g) {
            if (r.getConfig().measureRequestSize && (h != null && h[0])) {
              var y = h[0], b = zh(y);
              b !== void 0 && E.setAttribute(xh, b);
            }
            S.with(A.setSpan(S.active(), E), function() {
              r._tasksCount++, p.sendStartTime = Ii(), E.addEvent(et.METHOD_SEND), d.addEventListener("abort", a), d.addEventListener("error", o), d.addEventListener("load", c), d.addEventListener("timeout", u), p.callbackToRemoveEvents = function() {
                s(d), p.createdResources && p.createdResources.observer.disconnect();
              }, r._addHeaders(d, g), r._addResourceObserver(d, g);
            });
          }
          return f.apply(this, h);
        };
      };
    }, t.prototype.enable = function() {
      this._diag.debug("applying patch to", this.moduleName, this.version), Li(XMLHttpRequest.prototype.open) && (this._unwrap(XMLHttpRequest.prototype, "open"), this._diag.debug("removing previous patch from method open")), Li(XMLHttpRequest.prototype.send) && (this._unwrap(XMLHttpRequest.prototype, "send"), this._diag.debug("removing previous patch from method send")), this._wrap(XMLHttpRequest.prototype, "open", this._patchOpen()), this._wrap(XMLHttpRequest.prototype, "send", this._patchSend());
    }, t.prototype.disable = function() {
      this._diag.debug("removing patch from", this.moduleName, this.version), this._unwrap(XMLHttpRequest.prototype, "open"), this._unwrap(XMLHttpRequest.prototype, "send"), this._tasksCount = 0, this._xhrMem = /* @__PURE__ */ new WeakMap(), this._usedResources = /* @__PURE__ */ new WeakSet();
    }, t;
  }(yh)
);
const xi = (e, t, r) => {
  const n = Ra(
    t,
    e.headers,
    r
  );
  return P(O({}, e), {
    headers: n
  });
}, Ra = (e, t, r) => {
  var i, o;
  const n = O({}, t);
  return r ? ((i = Object.keys(n)) == null || i.forEach((a) => {
    [...r].includes(a == null ? void 0 : a.toLowerCase()) || (n[a] = "[REDACTED]");
  }), n) : ((o = Object.keys(n)) == null || o.forEach((a) => {
    [...Zh, ...e].includes(
      a == null ? void 0 : a.toLowerCase()
    ) && (n[a] = "[REDACTED]");
  }), n);
}, Zh = [
  "authorization",
  "cookie",
  "proxy-authorization",
  "token"
], Qh = [
  "https://www.googleapis.com/identitytoolkit",
  "https://securetoken.googleapis.com"
], t_ = new RegExp("sdk\\/evalx\\/[^/]+\\/contexts\\/(?<context>[^/?]*)\\??.*?"), e_ = new RegExp("\\/eval\\/[^/]+\\/(?<context>[^/?]*)\\??.*?");
function r_(e) {
  return !!(e.includes("/sdk/evalx") && e.match(t_) || e.includes("/eval/") && e.match(e_));
}
const La = "X-Highlight-Request", Di = (e) => {
  let t = e;
  return !e.startsWith("https://") && !e.startsWith("http://") && (t = `${window.location.origin}${t}`), t.replace(/\/+$/, "");
}, n_ = (e, {
  headersToRedact: t,
  headersToRecord: r,
  requestResponseSanitizer: n
}) => {
  var c, s;
  let i = e;
  if (n) {
    let l = !0;
    try {
      i.request.body = JSON.parse(i.request.body);
    } catch (h) {
      l = !1;
    }
    let d = !0;
    try {
      i.response.body = JSON.parse(
        i.response.body
      );
    } catch (h) {
      d = !1;
    }
    try {
      i = n(i);
    } catch (h) {
    } finally {
      l = l && !!((c = i == null ? void 0 : i.request) != null && c.body), d = d && !!((s = i == null ? void 0 : i.response) != null && s.body), l && (i.request.body = JSON.stringify(
        i.request.body
      )), d && (i.response.body = JSON.stringify(
        i.response.body
      ));
    }
    if (!i)
      return null;
  }
  const f = i, { request: o, response: a } = f, u = Yn(f, ["request", "response"]);
  return O({
    request: xi(o, t, r),
    response: xi(a, t, r)
  }, u);
}, Ty = (e, t, r, n) => {
  e.sort((c, s) => c.responseEnd - s.responseEnd);
  const i = {
    xmlhttprequest: {},
    others: {},
    fetch: {}
  }, o = e.reduce((c, s) => {
    const f = Di(s.name);
    return s.initiatorType === r ? c[r][f] = [
      ...c[r][f] || [],
      s
    ] : c.others[f] = [
      ...c.others[f] || [],
      s
    ], c;
  }, i);
  let a = {};
  a = t.reduce(
    (c, s) => {
      const f = Di(s.request.url);
      return c[f] = [...c[f] || [], s], c;
    },
    a
  );
  for (let c in o[r]) {
    const s = o[r][c], f = a[c];
    if (!f)
      continue;
    const l = Math.max(
      s.length - f.length,
      0
    );
    for (let d = l; d < s.length; d++)
      s[d] && (s[d].requestResponsePair = f[d - l]);
  }
  let u = [];
  for (let c in o)
    for (let s in o[c])
      u = u.concat(o[c][s]);
  return u.sort((c, s) => c.fetchStart - s.fetchStart).reduce(
    (c, s) => {
      let f = s.requestResponsePair;
      return f && (f = n_(
        s.requestResponsePair,
        n
      ), !f) || (s.toJSON = function() {
        const l = window.performance.timeOrigin;
        return {
          initiatorType: this.initiatorType,
          startTimeAbs: l + this.startTime,
          connectStartAbs: l + this.connectStart,
          connectEndAbs: l + this.connectEnd,
          domainLookupStartAbs: l + this.domainLookupStart,
          domainLookupEndAbs: l + this.domainLookupEnd,
          fetchStartAbs: l + this.fetchStart,
          redirectStartAbs: l + this.redirectStart,
          redirectEndAbs: l + this.redirectEnd,
          requestStartAbs: l + this.requestStart,
          responseStartAbs: l + this.responseStart,
          responseEndAbs: l + this.responseEnd,
          secureConnectionStartAbs: l + this.secureConnectionStart,
          workerStartAbs: l + this.workerStart,
          name: this.name,
          transferSize: this.transferSize,
          encodedBodySize: this.encodedBodySize,
          decodedBodySize: this.decodedBodySize,
          nextHopProtocol: this.nextHopProtocol,
          requestResponsePairs: f
        };
      }, c.push(s)), c;
    },
    []
  );
}, i_ = (e) => ["events.ld.catamorphic.com", "events.launchdarkly.com"].some(
  (t) => e.toLocaleLowerCase().includes(t)
), o_ = (e) => r_(e), a_ = (e, t) => t.some(
  (r) => e.toLocaleLowerCase().includes(r)
), Dn = (e, t, r) => !a_(e, t) && !o_(e) && !i_(e), Un = (e, t, r) => {
  var o;
  if (r.some(
    (a) => e.toLowerCase().includes(a)
  ))
    return !1;
  let n = [];
  t === !0 ? (n = ["localhost", /^\//], (o = window == null ? void 0 : window.location) != null && o.host && n.push(window.location.host)) : t instanceof Array && (n = t);
  let i = !1;
  return n.forEach((a) => {
    e.match(a) && (i = !0);
  }), i;
};
function s_(e) {
  for (var t = "", r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = r.length, i = 0; i < e; i++)
    t += r.charAt(
      Math.floor(Math.random() * n)
    );
  return t;
}
const Pa = () => {
  const e = s_(10), t = kg(), r = t == null ? void 0 : t.spanContext().traceId;
  return [ot(), r != null ? r : e];
}, Na = (e, t) => e + "/" + t, Sy = (e, t, r, n, i, o) => {
  const a = XMLHttpRequest.prototype, u = a.open, c = a.send, s = a.setRequestHeader;
  return a.open = function(f, l) {
    return typeof l == "string" ? this._url = l : this._url = l.toString(), this._method = f, this._requestHeaders = {}, this._shouldRecordHeaderAndBody = !n.some(
      (d) => this._url.toLowerCase().includes(d)
    ), u.apply(this, arguments);
  }, a.setRequestHeader = function(f, l) {
    return this._requestHeaders[f] = l, s.apply(this, arguments);
  }, a.send = function(f) {
    if (!Dn(
      this._url,
      t
    ))
      return c.apply(this, arguments);
    const [l, d] = Pa();
    Un(
      this._url,
      r,
      n
    ) && this.setRequestHeader(
      La,
      Na(l, d)
    );
    const h = this._shouldRecordHeaderAndBody, _ = {
      sessionSecureID: l,
      id: d,
      url: this._url,
      verb: this._method,
      headers: h ? this._requestHeaders : {},
      body: void 0
    };
    if (h && f) {
      const p = Ui(f, _.url);
      p && (this._body = p, _.body = st(
        p,
        i,
        o,
        _.headers
      ));
    }
    return this.addEventListener("load", function() {
      return F(this, null, function* () {
        const p = {
          status: this.status,
          headers: {},
          body: void 0
        };
        if (h) {
          const y = this.getAllResponseHeaders().trim().split(/[\r\n]+/), b = {};
          if (y.forEach(function(L) {
            const G = L.split(": "), U = G.shift();
            b[U] = G.join(": ");
          }), p.headers = b, f) {
            const L = Ui(f, _.url);
            L && (_.body = st(
              L,
              i,
              o,
              p.headers
            ));
          }
          if (this.responseType === "" || this.responseType === "text")
            p.body = st(
              this.responseText,
              i,
              o,
              p.headers
            ), p.size = this.responseText.length * 8;
          else if (this.responseType === "blob") {
            if (this.response instanceof Blob)
              try {
                const L = yield this.response.text();
                p.body = st(
                  L,
                  i,
                  o,
                  p.headers
                ), p.size = this.response.size;
              } catch (L) {
              }
          } else
            try {
              p.body = st(
                this.response,
                i,
                o,
                p.headers
              );
            } catch (L) {
            }
        }
        e({
          request: _,
          response: p,
          urlBlocked: !h
        });
      });
    }), this.addEventListener("error", function() {
      return F(this, null, function* () {
        const p = {
          status: this.status,
          headers: void 0,
          body: void 0
        };
        e({
          request: _,
          response: p,
          urlBlocked: !1
        });
      });
    }), c.apply(this, arguments);
  }, () => {
    a.open = u, a.send = c, a.setRequestHeader = s;
  };
}, Ui = (e, t) => {
  if (typeof e == "string") {
    if (!((t != null && t.includes("localhost") || t != null && t.includes("highlight.run")) && (e.includes("pushPayload") || e.includes("pushSessionEvents"))))
      return e;
  } else if (typeof e == "object" || typeof e == "number" || typeof e == "boolean")
    return Ut(e);
  return null;
}, Bi = 64 * 1024, u_ = {
  "application/json": 64 * 1024 * 1024,
  // MB
  "text/plain": 64 * 1024 * 1024
  // MB
}, st = (e, t, r, n) => {
  var o, a, u;
  let i = Bi;
  if (n) {
    let c = "";
    typeof n.get == "function" ? c = (o = n.get("content-type")) != null ? o : "" : c = (a = n["content-type"]) != null ? a : "";
    try {
      c = c.split(";")[0];
    } catch (s) {
    }
    i = (u = u_[c]) != null ? u : Bi;
  }
  if (e) {
    if (t)
      try {
        const c = JSON.parse(e);
        Array.isArray(c) ? c.forEach((s) => {
          Object.keys(s).forEach((f) => {
            t.includes(
              f.toLocaleLowerCase()
            ) && (s[f] = "[REDACTED]");
          });
        }) : Object.keys(c).forEach((s) => {
          t.includes(s.toLocaleLowerCase()) && (c[s] = "[REDACTED]");
        }), e = JSON.stringify(c);
      } catch (c) {
      }
    if (r)
      try {
        const c = JSON.parse(e);
        Object.keys(c).forEach((s) => {
          r.includes(s.toLocaleLowerCase()) || (c[s] = "[REDACTED]");
        }), e = JSON.stringify(c);
      } catch (c) {
      }
  }
  try {
    e = e.slice(0, i);
  } catch (c) {
  }
  return e;
}, Oy = (e, t, r, n, i, o) => {
  const a = window._fetchProxy;
  return window._fetchProxy = function(u, c) {
    const { method: s, url: f } = c_(u, c);
    if (!Dn(
      f,
      t
    ))
      return a.call(this, u, c);
    const [l, d] = Pa();
    if (Un(f, r, n)) {
      c = c || {};
      let E = new Headers(c.headers);
      u instanceof Request && [...u.headers].forEach(
        ([g, y]) => E.set(g, y)
      ), E.set(
        La,
        Na(l, d)
      ), c.headers = Object.fromEntries(E.entries());
    }
    const h = {
      sessionSecureID: l,
      id: d,
      headers: {},
      body: void 0,
      url: f,
      verb: s
    }, _ = !n.some(
      (E) => f.toLowerCase().includes(E)
    );
    _ && (h.headers = Object.fromEntries(
      new Headers(c == null ? void 0 : c.headers).entries()
    ), h.body = st(
      c == null ? void 0 : c.body,
      i,
      o,
      c == null ? void 0 : c.headers
    ));
    let p = a.call(this, u, c);
    return f_(
      p,
      h,
      e,
      _,
      i,
      o
    ), p;
  }, () => {
    window._fetchProxy = a;
  };
}, c_ = (e, t) => {
  const r = t && t.method || typeof e == "object" && "method" in e && e.method || "GET";
  let n;
  return typeof e == "object" ? "url" in e && e.url ? n = e.url : n = e.toString() : n = e, {
    method: r,
    url: n
  };
}, f_ = (e, t, r, n, i, o) => {
  const a = (u) => F(void 0, null, function* () {
    let c = {
      body: void 0,
      headers: void 0,
      status: 0,
      size: 0
    }, s = !1, f = !n;
    "stack" in u || u instanceof Error ? (c = P(O({}, c), {
      body: u.message,
      status: 0,
      size: void 0
    }), s = !0) : "status" in u && (c = P(O({}, c), {
      status: u.status
    }), n && (c.body = yield Ia(
      u,
      o,
      i
    ), c.headers = Object.fromEntries(
      u.headers.entries()
    ), c.size = c.body.length * 8), (u.type === "opaque" || u.type === "opaqueredirect") && (f = !0, c = P(O({}, c), {
      body: "CORS blocked request"
    })), s = !0), s && r({
      request: t,
      response: c,
      urlBlocked: f
    });
  });
  e.then(a).catch(() => {
  });
}, Ia = (e, t, r) => F(void 0, null, function* () {
  let n;
  try {
    const o = e.clone().body;
    if (o) {
      let a = o.getReader(), u = new TextDecoder(), c, s = "";
      for (; !(c = yield a.read()).done; ) {
        let f = c.value;
        s += u.decode(f);
      }
      n = s, n = st(
        n,
        r,
        t,
        e.headers
      );
    } else
      n = "";
  } catch (i) {
    n = `Unable to clone response: ${i}`;
  }
  return n;
});
var Ca = (
  /** @class */
  function() {
    function e(t) {
      this._delegate = t;
    }
    return e.prototype.export = function(t, r) {
      this._delegate.export(t, r);
    }, e.prototype.forceFlush = function() {
      return this._delegate.forceFlush();
    }, e.prototype.shutdown = function() {
      return this._delegate.shutdown();
    }, e;
  }()
), l_ = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), ki = (
  /** @class */
  function(e) {
    l_(t, e);
    function t(r, n, i) {
      var o = e.call(this, r) || this;
      return o.name = "OTLPExporterError", o.data = i, o.code = n, o;
    }
    return t;
  }(Error)
);
function d_(e) {
  if (!Number.isNaN(e) && Number.isFinite(e) && e > 0)
    return e;
  throw new Error("Configuration: timeoutMillis is invalid, expected number greater than 0 (actual: '" + e + "')");
}
function p_(e) {
  if (e != null)
    return function() {
      return e;
    };
}
function h_(e, t, r) {
  var n, i, o, a, u, c;
  return {
    timeoutMillis: d_((i = (n = e.timeoutMillis) !== null && n !== void 0 ? n : t.timeoutMillis) !== null && i !== void 0 ? i : r.timeoutMillis),
    concurrencyLimit: (a = (o = e.concurrencyLimit) !== null && o !== void 0 ? o : t.concurrencyLimit) !== null && a !== void 0 ? a : r.concurrencyLimit,
    compression: (c = (u = e.compression) !== null && u !== void 0 ? u : t.compression) !== null && c !== void 0 ? c : r.compression
  };
}
function __() {
  return {
    timeoutMillis: 1e4,
    concurrencyLimit: 30,
    compression: "none"
  };
}
var v_ = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, E_ = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, g_ = (
  /** @class */
  function() {
    function e(t) {
      this._sendingPromises = [], this._concurrencyLimit = t;
    }
    return e.prototype.pushPromise = function(t) {
      var r = this;
      if (this.hasReachedLimit())
        throw new Error("Concurrency Limit reached");
      this._sendingPromises.push(t);
      var n = function() {
        var i = r._sendingPromises.indexOf(t);
        r._sendingPromises.splice(i, 1);
      };
      t.then(n, n);
    }, e.prototype.hasReachedLimit = function() {
      return this._sendingPromises.length >= this._concurrencyLimit;
    }, e.prototype.awaitAll = function() {
      return v_(this, void 0, void 0, function() {
        return E_(this, function(t) {
          switch (t.label) {
            case 0:
              return [4, Promise.all(this._sendingPromises)];
            case 1:
              return t.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e;
  }()
);
function y_(e) {
  return new g_(e.concurrencyLimit);
}
function m_(e) {
  return Object.prototype.hasOwnProperty.call(e, "partialSuccess");
}
function T_() {
  return {
    handleResponse: function(e) {
      e == null || !m_(e) || e.partialSuccess == null || Object.keys(e.partialSuccess).length === 0 || v.warn("Received Partial Success response:", JSON.stringify(e.partialSuccess));
    }
  };
}
var S_ = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, O_ = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, A_ = (
  /** @class */
  function() {
    function e(t, r, n, i, o) {
      this._transport = t, this._serializer = r, this._responseHandler = n, this._promiseQueue = i, this._timeout = o, this._diagLogger = v.createComponentLogger({
        namespace: "OTLPExportDelegate"
      });
    }
    return e.prototype.export = function(t, r) {
      var n = this;
      if (this._diagLogger.debug("items to be sent", t), this._promiseQueue.hasReachedLimit()) {
        r({
          code: M.FAILED,
          error: new Error("Concurrent export limit reached")
        });
        return;
      }
      var i = this._serializer.serializeRequest(t);
      if (i == null) {
        r({
          code: M.FAILED,
          error: new Error("Nothing to send")
        });
        return;
      }
      this._promiseQueue.pushPromise(this._transport.send(i, this._timeout).then(function(o) {
        if (o.status === "success") {
          if (o.data != null)
            try {
              n._responseHandler.handleResponse(n._serializer.deserializeResponse(o.data));
            } catch (a) {
              n._diagLogger.warn("Export succeeded but could not deserialize response - is the response specification compliant?", a, o.data);
            }
          r({
            code: M.SUCCESS
          });
          return;
        } else if (o.status === "failure" && o.error) {
          r({
            code: M.FAILED,
            error: o.error
          });
          return;
        } else o.status === "retryable" ? r({
          code: M.FAILED,
          error: new ki("Export failed with retryable status")
        }) : r({
          code: M.FAILED,
          error: new ki("Export failed with unknown error")
        });
      }, function(o) {
        return r({
          code: M.FAILED,
          error: o
        });
      }));
    }, e.prototype.forceFlush = function() {
      return this._promiseQueue.awaitAll();
    }, e.prototype.shutdown = function() {
      return S_(this, void 0, void 0, function() {
        return O_(this, function(t) {
          switch (t.label) {
            case 0:
              return this._diagLogger.debug("shutdown started"), [4, this.forceFlush()];
            case 1:
              return t.sent(), this._transport.shutdown(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e;
  }()
);
function b_(e, t) {
  return new A_(e.transport, e.serializer, T_(), e.promiseHandler, t.timeout);
}
function Ma(e, t, r) {
  return b_({
    transport: r,
    serializer: t,
    promiseHandler: y_(e)
  }, { timeout: e.timeoutMillis });
}
function Gi(e) {
  return e >= 48 && e <= 57 ? e - 48 : e >= 97 && e <= 102 ? e - 87 : e - 55;
}
function Bn(e) {
  for (var t = new Uint8Array(e.length / 2), r = 0, n = 0; n < e.length; n += 2) {
    var i = Gi(e.charCodeAt(n)), o = Gi(e.charCodeAt(n + 1));
    t[r++] = i << 4 | o;
  }
  return t;
}
var w_ = 9, R_ = Math.pow(10, w_);
function L_(e) {
  return e[0] * R_ + e[1];
}
function xa(e) {
  var t = BigInt(1e9);
  return BigInt(e[0]) * t + BigInt(e[1]);
}
function P_(e) {
  var t = Number(BigInt.asUintN(32, e)), r = Number(BigInt.asUintN(32, e >> BigInt(32)));
  return { low: t, high: r };
}
function Da(e) {
  var t = xa(e);
  return P_(t);
}
function N_(e) {
  var t = xa(e);
  return t.toString();
}
var I_ = typeof BigInt != "undefined" ? N_ : L_;
function Hi(e) {
  return e;
}
function Ua(e) {
  if (e !== void 0)
    return Bn(e);
}
var C_ = {
  encodeHrTime: Da,
  encodeSpanContext: Bn,
  encodeOptionalSpanContext: Ua
};
function Ba(e) {
  var t, r;
  if (e === void 0)
    return C_;
  var n = (t = e.useLongBits) !== null && t !== void 0 ? t : !0, i = (r = e.useHex) !== null && r !== void 0 ? r : !1;
  return {
    encodeHrTime: n ? Da : I_,
    encodeSpanContext: i ? Hi : Bn,
    encodeOptionalSpanContext: i ? Hi : Ua
  };
}
var M_ = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function ka(e) {
  return {
    attributes: At(e.attributes),
    droppedAttributesCount: 0
  };
}
function Ga(e) {
  return {
    name: e.name,
    version: e.version
  };
}
function At(e) {
  return Object.keys(e).map(function(t) {
    return Ha(t, e[t]);
  });
}
function Ha(e, t) {
  return {
    key: e,
    value: $a(t)
  };
}
function $a(e) {
  var t = typeof e;
  return t === "string" ? { stringValue: e } : t === "number" ? Number.isInteger(e) ? { intValue: e } : { doubleValue: e } : t === "boolean" ? { boolValue: e } : e instanceof Uint8Array ? { bytesValue: e } : Array.isArray(e) ? { arrayValue: { values: e.map($a) } } : t === "object" && e != null ? {
    kvlistValue: {
      values: Object.entries(e).map(function(r) {
        var n = M_(r, 2), i = n[0], o = n[1];
        return Ha(i, o);
      })
    }
  } : {};
}
var X;
(function(e) {
  e[e.DELTA = 0] = "DELTA", e[e.CUMULATIVE = 1] = "CUMULATIVE";
})(X || (X = {}));
var J;
(function(e) {
  e[e.HISTOGRAM = 0] = "HISTOGRAM", e[e.EXPONENTIAL_HISTOGRAM = 1] = "EXPONENTIAL_HISTOGRAM", e[e.GAUGE = 2] = "GAUGE", e[e.SUM = 3] = "SUM";
})(J || (J = {}));
var x_ = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), $i = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, ji = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, D_ = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, U_ = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, B_ = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function k_(e) {
  return e != null;
}
function ja(e) {
  var t = Object.keys(e);
  return t.length === 0 ? "" : (t = t.sort(), JSON.stringify(t.map(function(r) {
    return [r, e[r]];
  })));
}
function G_(e) {
  var t, r;
  return e.name + ":" + ((t = e.version) !== null && t !== void 0 ? t : "") + ":" + ((r = e.schemaUrl) !== null && r !== void 0 ? r : "");
}
var Va = (
  /** @class */
  function(e) {
    x_(t, e);
    function t(r) {
      var n = e.call(this, r) || this;
      return Object.setPrototypeOf(n, t.prototype), n;
    }
    return t;
  }(Error)
);
function ue(e, t) {
  var r, n = new Promise(function(o, a) {
    r = setTimeout(function() {
      a(new Va("Operation timed out."));
    }, t);
  });
  return Promise.race([e, n]).then(function(i) {
    return clearTimeout(r), i;
  }, function(i) {
    throw clearTimeout(r), i;
  });
}
function H_(e) {
  return $i(this, void 0, void 0, function() {
    var t = this;
    return ji(this, function(r) {
      return [2, Promise.all(e.map(function(n) {
        return $i(t, void 0, void 0, function() {
          var i, o;
          return ji(this, function(a) {
            switch (a.label) {
              case 0:
                return a.trys.push([0, 2, , 3]), [4, n];
              case 1:
                return i = a.sent(), [2, {
                  status: "fulfilled",
                  value: i
                }];
              case 2:
                return o = a.sent(), [2, {
                  status: "rejected",
                  reason: o
                }];
              case 3:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }))];
    });
  });
}
function $_(e) {
  return e.status === "rejected";
}
function Vi(e, t) {
  var r = [];
  return e.forEach(function(n) {
    r.push.apply(r, U_([], D_(t(n)), !1));
  }), r;
}
function j_(e, t) {
  var r, n;
  if (e.size !== t.size)
    return !1;
  try {
    for (var i = B_(e), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (!t.has(a))
        return !1;
    }
  } catch (u) {
    r = { error: u };
  } finally {
    try {
      o && !o.done && (n = i.return) && n.call(i);
    } finally {
      if (r) throw r.error;
    }
  }
  return !0;
}
function V_(e, t) {
  for (var r = 0, n = e.length - 1, i = e.length; n >= r; ) {
    var o = r + Math.trunc((n - r) / 2);
    e[o] < t ? r = o + 1 : (i = o, n = o - 1);
  }
  return i;
}
function F_(e, t) {
  return e.toLowerCase() === t.toLowerCase();
}
var Tt;
(function(e) {
  e[e.DROP = 0] = "DROP", e[e.SUM = 1] = "SUM", e[e.LAST_VALUE = 2] = "LAST_VALUE", e[e.HISTOGRAM = 3] = "HISTOGRAM", e[e.EXPONENTIAL_HISTOGRAM = 4] = "EXPONENTIAL_HISTOGRAM";
})(Tt || (Tt = {}));
var X_ = (
  /** @class */
  function() {
    function e() {
      this.kind = Tt.DROP;
    }
    return e.prototype.createAccumulation = function() {
    }, e.prototype.merge = function(t, r) {
    }, e.prototype.diff = function(t, r) {
    }, e.prototype.toMetricData = function(t, r, n, i) {
    }, e;
  }()
), T;
(function(e) {
  e.COUNTER = "COUNTER", e.GAUGE = "GAUGE", e.HISTOGRAM = "HISTOGRAM", e.UP_DOWN_COUNTER = "UP_DOWN_COUNTER", e.OBSERVABLE_COUNTER = "OBSERVABLE_COUNTER", e.OBSERVABLE_GAUGE = "OBSERVABLE_GAUGE", e.OBSERVABLE_UP_DOWN_COUNTER = "OBSERVABLE_UP_DOWN_COUNTER";
})(T || (T = {}));
function it(e, t, r) {
  var n, i, o, a;
  return Y_(e) || v.warn('Invalid metric name: "' + e + '". The metric name should be a ASCII string with a length no greater than 255 characters.'), {
    name: e,
    type: t,
    description: (n = r == null ? void 0 : r.description) !== null && n !== void 0 ? n : "",
    unit: (i = r == null ? void 0 : r.unit) !== null && i !== void 0 ? i : "",
    valueType: (o = r == null ? void 0 : r.valueType) !== null && o !== void 0 ? o : lt.DOUBLE,
    advice: (a = r == null ? void 0 : r.advice) !== null && a !== void 0 ? a : {}
  };
}
function z_(e, t) {
  var r, n;
  return {
    name: (r = e.name) !== null && r !== void 0 ? r : t.name,
    description: (n = e.description) !== null && n !== void 0 ? n : t.description,
    type: t.type,
    unit: t.unit,
    valueType: t.valueType,
    advice: t.advice
  };
}
function q_(e, t) {
  return F_(e.name, t.name) && e.unit === t.unit && e.type === t.type && e.valueType === t.valueType;
}
var W_ = /^[a-z][a-z0-9_.\-/]{0,254}$/i;
function Y_(e) {
  return e.match(W_) != null;
}
var K_ = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function J_(e) {
  var t = e.map(function() {
    return 0;
  });
  return t.push(0), {
    buckets: {
      boundaries: e,
      counts: t
    },
    sum: 0,
    count: 0,
    hasMinMax: !1,
    min: 1 / 0,
    max: -1 / 0
  };
}
var Dr = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      n === void 0 && (n = !0), i === void 0 && (i = J_(r)), this.startTime = t, this._boundaries = r, this._recordMinMax = n, this._current = i;
    }
    return e.prototype.record = function(t) {
      if (!Number.isNaN(t)) {
        this._current.count += 1, this._current.sum += t, this._recordMinMax && (this._current.min = Math.min(t, this._current.min), this._current.max = Math.max(t, this._current.max), this._current.hasMinMax = !0);
        var r = V_(this._boundaries, t);
        this._current.buckets.counts[r] += 1;
      }
    }, e.prototype.setStartTime = function(t) {
      this.startTime = t;
    }, e.prototype.toPointValue = function() {
      return this._current;
    }, e;
  }()
), Fa = (
  /** @class */
  function() {
    function e(t, r) {
      this._boundaries = t, this._recordMinMax = r, this.kind = Tt.HISTOGRAM;
    }
    return e.prototype.createAccumulation = function(t) {
      return new Dr(t, this._boundaries, this._recordMinMax);
    }, e.prototype.merge = function(t, r) {
      for (var n = t.toPointValue(), i = r.toPointValue(), o = n.buckets.counts, a = i.buckets.counts, u = new Array(o.length), c = 0; c < o.length; c++)
        u[c] = o[c] + a[c];
      var s = 1 / 0, f = -1 / 0;
      return this._recordMinMax && (n.hasMinMax && i.hasMinMax ? (s = Math.min(n.min, i.min), f = Math.max(n.max, i.max)) : n.hasMinMax ? (s = n.min, f = n.max) : i.hasMinMax && (s = i.min, f = i.max)), new Dr(t.startTime, n.buckets.boundaries, this._recordMinMax, {
        buckets: {
          boundaries: n.buckets.boundaries,
          counts: u
        },
        count: n.count + i.count,
        sum: n.sum + i.sum,
        hasMinMax: this._recordMinMax && (n.hasMinMax || i.hasMinMax),
        min: s,
        max: f
      });
    }, e.prototype.diff = function(t, r) {
      for (var n = t.toPointValue(), i = r.toPointValue(), o = n.buckets.counts, a = i.buckets.counts, u = new Array(o.length), c = 0; c < o.length; c++)
        u[c] = a[c] - o[c];
      return new Dr(r.startTime, n.buckets.boundaries, this._recordMinMax, {
        buckets: {
          boundaries: n.buckets.boundaries,
          counts: u
        },
        count: i.count - n.count,
        sum: i.sum - n.sum,
        hasMinMax: !1,
        min: 1 / 0,
        max: -1 / 0
      });
    }, e.prototype.toMetricData = function(t, r, n, i) {
      return {
        descriptor: t,
        aggregationTemporality: r,
        dataPointType: J.HISTOGRAM,
        dataPoints: n.map(function(o) {
          var a = K_(o, 2), u = a[0], c = a[1], s = c.toPointValue(), f = t.type === T.GAUGE || t.type === T.UP_DOWN_COUNTER || t.type === T.OBSERVABLE_GAUGE || t.type === T.OBSERVABLE_UP_DOWN_COUNTER;
          return {
            attributes: u,
            startTime: c.startTime,
            endTime: i,
            value: {
              min: s.hasMinMax ? s.min : void 0,
              max: s.hasMinMax ? s.max : void 0,
              sum: f ? void 0 : s.sum,
              buckets: s.buckets,
              count: s.count
            }
          };
        })
      };
    }, e;
  }()
), Ur = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Br = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Fi = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      t === void 0 && (t = new Z_()), r === void 0 && (r = 0), n === void 0 && (n = 0), i === void 0 && (i = 0), this.backing = t, this.indexBase = r, this.indexStart = n, this.indexEnd = i;
    }
    return Object.defineProperty(e.prototype, "offset", {
      /**
       * Offset is the bucket index of the smallest entry in the counts array
       * @returns {number}
       */
      get: function() {
        return this.indexStart;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "length", {
      /**
       * Buckets is a view into the backing array.
       * @returns {number}
       */
      get: function() {
        return this.backing.length === 0 || this.indexEnd === this.indexStart && this.at(0) === 0 ? 0 : this.indexEnd - this.indexStart + 1;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.counts = function() {
      var t = this;
      return Array.from({ length: this.length }, function(r, n) {
        return t.at(n);
      });
    }, e.prototype.at = function(t) {
      var r = this.indexBase - this.indexStart;
      return t < r && (t += this.backing.length), t -= r, this.backing.countAt(t);
    }, e.prototype.incrementBucket = function(t, r) {
      this.backing.increment(t, r);
    }, e.prototype.decrementBucket = function(t, r) {
      this.backing.decrement(t, r);
    }, e.prototype.trim = function() {
      for (var t = 0; t < this.length; t++)
        if (this.at(t) !== 0) {
          this.indexStart += t;
          break;
        } else if (t === this.length - 1) {
          this.indexStart = this.indexEnd = this.indexBase = 0;
          return;
        }
      for (var t = this.length - 1; t >= 0; t--)
        if (this.at(t) !== 0) {
          this.indexEnd -= this.length - t - 1;
          break;
        }
      this._rotate();
    }, e.prototype.downscale = function(t) {
      this._rotate();
      for (var r = 1 + this.indexEnd - this.indexStart, n = 1 << t, i = 0, o = 0, a = this.indexStart; a <= this.indexEnd; ) {
        var u = a % n;
        u < 0 && (u += n);
        for (var c = u; c < n && i < r; c++)
          this._relocateBucket(o, i), i++, a++;
        o++;
      }
      this.indexStart >>= t, this.indexEnd >>= t, this.indexBase = this.indexStart;
    }, e.prototype.clone = function() {
      return new e(this.backing.clone(), this.indexBase, this.indexStart, this.indexEnd);
    }, e.prototype._rotate = function() {
      var t = this.indexBase - this.indexStart;
      t !== 0 && (t > 0 ? (this.backing.reverse(0, this.backing.length), this.backing.reverse(0, t), this.backing.reverse(t, this.backing.length)) : (this.backing.reverse(0, this.backing.length), this.backing.reverse(0, this.backing.length + t)), this.indexBase = this.indexStart);
    }, e.prototype._relocateBucket = function(t, r) {
      t !== r && this.incrementBucket(t, this.backing.emptyBucket(r));
    }, e;
  }()
), Z_ = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = [0]), this._counts = t;
    }
    return Object.defineProperty(e.prototype, "length", {
      /**
       * length returns the physical size of the backing array, which
       * is >= buckets.length()
       */
      get: function() {
        return this._counts.length;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.countAt = function(t) {
      return this._counts[t];
    }, e.prototype.growTo = function(t, r, n) {
      var i = new Array(t).fill(0);
      i.splice.apply(i, Br([
        n,
        this._counts.length - r
      ], Ur(this._counts.slice(r)), !1)), i.splice.apply(i, Br([0, r], Ur(this._counts.slice(0, r)), !1)), this._counts = i;
    }, e.prototype.reverse = function(t, r) {
      for (var n = Math.floor((t + r) / 2) - t, i = 0; i < n; i++) {
        var o = this._counts[t + i];
        this._counts[t + i] = this._counts[r - i - 1], this._counts[r - i - 1] = o;
      }
    }, e.prototype.emptyBucket = function(t) {
      var r = this._counts[t];
      return this._counts[t] = 0, r;
    }, e.prototype.increment = function(t, r) {
      this._counts[t] += r;
    }, e.prototype.decrement = function(t, r) {
      this._counts[t] >= r ? this._counts[t] -= r : this._counts[t] = 0;
    }, e.prototype.clone = function() {
      return new e(Br([], Ur(this._counts), !1));
    }, e;
  }()
), Q_ = 52, tv = 2146435072, ev = 1048575, kn = 1023, Xa = -kn + 1, za = kn, mn = Math.pow(2, -1022);
function qa(e) {
  var t = new DataView(new ArrayBuffer(8));
  t.setFloat64(0, e);
  var r = t.getUint32(0), n = (r & tv) >> 20;
  return n - kn;
}
function Wa(e) {
  var t = new DataView(new ArrayBuffer(8));
  t.setFloat64(0, e);
  var r = t.getUint32(0), n = t.getUint32(4), i = (r & ev) * Math.pow(2, 32);
  return i + n;
}
function Tn(e, t) {
  return e === 0 || e === Number.POSITIVE_INFINITY || e === Number.NEGATIVE_INFINITY || Number.isNaN(e) ? e : e * Math.pow(2, t);
}
function rv(e) {
  return e--, e |= e >> 1, e |= e >> 2, e |= e >> 4, e |= e >> 8, e |= e >> 16, e++, e;
}
var nv = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), ce = (
  /** @class */
  function(e) {
    nv(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Error)
), iv = (
  /** @class */
  function() {
    function e(t) {
      this._shift = -t;
    }
    return e.prototype.mapToIndex = function(t) {
      if (t < mn)
        return this._minNormalLowerBoundaryIndex();
      var r = qa(t), n = this._rightShift(Wa(t) - 1, Q_);
      return r + n >> this._shift;
    }, e.prototype.lowerBoundary = function(t) {
      var r = this._minNormalLowerBoundaryIndex();
      if (t < r)
        throw new ce("underflow: " + t + " is < minimum lower boundary: " + r);
      var n = this._maxNormalLowerBoundaryIndex();
      if (t > n)
        throw new ce("overflow: " + t + " is > maximum lower boundary: " + n);
      return Tn(1, t << this._shift);
    }, Object.defineProperty(e.prototype, "scale", {
      /**
       * The scale used by this mapping
       * @returns {number}
       */
      get: function() {
        return this._shift === 0 ? 0 : -this._shift;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._minNormalLowerBoundaryIndex = function() {
      var t = Xa >> this._shift;
      return this._shift < 2 && t--, t;
    }, e.prototype._maxNormalLowerBoundaryIndex = function() {
      return za >> this._shift;
    }, e.prototype._rightShift = function(t, r) {
      return Math.floor(t * Math.pow(2, -r));
    }, e;
  }()
), ov = (
  /** @class */
  function() {
    function e(t) {
      this._scale = t, this._scaleFactor = Tn(Math.LOG2E, t), this._inverseFactor = Tn(Math.LN2, -t);
    }
    return e.prototype.mapToIndex = function(t) {
      if (t <= mn)
        return this._minNormalLowerBoundaryIndex() - 1;
      if (Wa(t) === 0) {
        var r = qa(t);
        return (r << this._scale) - 1;
      }
      var n = Math.floor(Math.log(t) * this._scaleFactor), i = this._maxNormalLowerBoundaryIndex();
      return n >= i ? i : n;
    }, e.prototype.lowerBoundary = function(t) {
      var r = this._maxNormalLowerBoundaryIndex();
      if (t >= r) {
        if (t === r)
          return 2 * Math.exp((t - (1 << this._scale)) / this._scaleFactor);
        throw new ce("overflow: " + t + " is > maximum lower boundary: " + r);
      }
      var n = this._minNormalLowerBoundaryIndex();
      if (t <= n) {
        if (t === n)
          return mn;
        if (t === n - 1)
          return Math.exp((t + (1 << this._scale)) / this._scaleFactor) / 2;
        throw new ce("overflow: " + t + " is < minimum lower boundary: " + n);
      }
      return Math.exp(t * this._inverseFactor);
    }, Object.defineProperty(e.prototype, "scale", {
      /**
       * The scale used by this mapping
       * @returns {number}
       */
      get: function() {
        return this._scale;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._minNormalLowerBoundaryIndex = function() {
      return Xa << this._scale;
    }, e.prototype._maxNormalLowerBoundaryIndex = function() {
      return (za + 1 << this._scale) - 1;
    }, e;
  }()
), Xi = -10, zi = 20, av = Array.from({ length: 31 }, function(e, t) {
  return t > 10 ? new ov(t - 10) : new iv(t - 10);
});
function qi(e) {
  if (e > zi || e < Xi)
    throw new ce("expected scale >= " + Xi + " && <= " + zi + ", got: " + e);
  return av[e + 10];
}
var sv = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Se = (
  /** @class */
  function() {
    function e(t, r) {
      this.low = t, this.high = r;
    }
    return e.combine = function(t, r) {
      return new e(Math.min(t.low, r.low), Math.max(t.high, r.high));
    }, e;
  }()
), uv = 20, cv = 160, kr = 2, fv = (
  /** @class */
  function() {
    function e(t, r, n, i, o, a, u, c, s, f, l) {
      t === void 0 && (t = t), r === void 0 && (r = cv), n === void 0 && (n = !0), i === void 0 && (i = 0), o === void 0 && (o = 0), a === void 0 && (a = 0), u === void 0 && (u = Number.POSITIVE_INFINITY), c === void 0 && (c = Number.NEGATIVE_INFINITY), s === void 0 && (s = new Fi()), f === void 0 && (f = new Fi()), l === void 0 && (l = qi(uv)), this.startTime = t, this._maxSize = r, this._recordMinMax = n, this._sum = i, this._count = o, this._zeroCount = a, this._min = u, this._max = c, this._positive = s, this._negative = f, this._mapping = l, this._maxSize < kr && (v.warn("Exponential Histogram Max Size set to " + this._maxSize + ",                 changing to the minimum size of: " + kr), this._maxSize = kr);
    }
    return e.prototype.record = function(t) {
      this.updateByIncrement(t, 1);
    }, e.prototype.setStartTime = function(t) {
      this.startTime = t;
    }, e.prototype.toPointValue = function() {
      return {
        hasMinMax: this._recordMinMax,
        min: this.min,
        max: this.max,
        sum: this.sum,
        positive: {
          offset: this.positive.offset,
          bucketCounts: this.positive.counts()
        },
        negative: {
          offset: this.negative.offset,
          bucketCounts: this.negative.counts()
        },
        count: this.count,
        scale: this.scale,
        zeroCount: this.zeroCount
      };
    }, Object.defineProperty(e.prototype, "sum", {
      /**
       * @returns {Number} The sum of values recorded by this accumulation
       */
      get: function() {
        return this._sum;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "min", {
      /**
       * @returns {Number} The minimum value recorded by this accumulation
       */
      get: function() {
        return this._min;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "max", {
      /**
       * @returns {Number} The maximum value recorded by this accumulation
       */
      get: function() {
        return this._max;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "count", {
      /**
       * @returns {Number} The count of values recorded by this accumulation
       */
      get: function() {
        return this._count;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "zeroCount", {
      /**
       * @returns {Number} The number of 0 values recorded by this accumulation
       */
      get: function() {
        return this._zeroCount;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "scale", {
      /**
       * @returns {Number} The scale used by this accumulation
       */
      get: function() {
        return this._count === this._zeroCount ? 0 : this._mapping.scale;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "positive", {
      /**
       * positive holds the positive values
       * @returns {Buckets}
       */
      get: function() {
        return this._positive;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "negative", {
      /**
       * negative holds the negative values by their absolute value
       * @returns {Buckets}
       */
      get: function() {
        return this._negative;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.updateByIncrement = function(t, r) {
      if (!Number.isNaN(t)) {
        if (t > this._max && (this._max = t), t < this._min && (this._min = t), this._count += r, t === 0) {
          this._zeroCount += r;
          return;
        }
        this._sum += t * r, t > 0 ? this._updateBuckets(this._positive, t, r) : this._updateBuckets(this._negative, -t, r);
      }
    }, e.prototype.merge = function(t) {
      this._count === 0 ? (this._min = t.min, this._max = t.max) : t.count !== 0 && (t.min < this.min && (this._min = t.min), t.max > this.max && (this._max = t.max)), this.startTime = t.startTime, this._sum += t.sum, this._count += t.count, this._zeroCount += t.zeroCount;
      var r = this._minScale(t);
      this._downscale(this.scale - r), this._mergeBuckets(this.positive, t, t.positive, r), this._mergeBuckets(this.negative, t, t.negative, r);
    }, e.prototype.diff = function(t) {
      this._min = 1 / 0, this._max = -1 / 0, this._sum -= t.sum, this._count -= t.count, this._zeroCount -= t.zeroCount;
      var r = this._minScale(t);
      this._downscale(this.scale - r), this._diffBuckets(this.positive, t, t.positive, r), this._diffBuckets(this.negative, t, t.negative, r);
    }, e.prototype.clone = function() {
      return new e(this.startTime, this._maxSize, this._recordMinMax, this._sum, this._count, this._zeroCount, this._min, this._max, this.positive.clone(), this.negative.clone(), this._mapping);
    }, e.prototype._updateBuckets = function(t, r, n) {
      var i = this._mapping.mapToIndex(r), o = !1, a = 0, u = 0;
      if (t.length === 0 ? (t.indexStart = i, t.indexEnd = t.indexStart, t.indexBase = t.indexStart) : i < t.indexStart && t.indexEnd - i >= this._maxSize ? (o = !0, u = i, a = t.indexEnd) : i > t.indexEnd && i - t.indexStart >= this._maxSize && (o = !0, u = t.indexStart, a = i), o) {
        var c = this._changeScale(a, u);
        this._downscale(c), i = this._mapping.mapToIndex(r);
      }
      this._incrementIndexBy(t, i, n);
    }, e.prototype._incrementIndexBy = function(t, r, n) {
      if (n !== 0) {
        if (t.length === 0 && (t.indexStart = t.indexEnd = t.indexBase = r), r < t.indexStart) {
          var i = t.indexEnd - r;
          i >= t.backing.length && this._grow(t, i + 1), t.indexStart = r;
        } else if (r > t.indexEnd) {
          var i = r - t.indexStart;
          i >= t.backing.length && this._grow(t, i + 1), t.indexEnd = r;
        }
        var o = r - t.indexBase;
        o < 0 && (o += t.backing.length), t.incrementBucket(o, n);
      }
    }, e.prototype._grow = function(t, r) {
      var n = t.backing.length, i = t.indexBase - t.indexStart, o = n - i, a = rv(r);
      a > this._maxSize && (a = this._maxSize);
      var u = a - i;
      t.backing.growTo(a, o, u);
    }, e.prototype._changeScale = function(t, r) {
      for (var n = 0; t - r >= this._maxSize; )
        t >>= 1, r >>= 1, n++;
      return n;
    }, e.prototype._downscale = function(t) {
      if (t !== 0) {
        if (t < 0)
          throw new Error("impossible change of scale: " + this.scale);
        var r = this._mapping.scale - t;
        this._positive.downscale(t), this._negative.downscale(t), this._mapping = qi(r);
      }
    }, e.prototype._minScale = function(t) {
      var r = Math.min(this.scale, t.scale), n = Se.combine(this._highLowAtScale(this.positive, this.scale, r), this._highLowAtScale(t.positive, t.scale, r)), i = Se.combine(this._highLowAtScale(this.negative, this.scale, r), this._highLowAtScale(t.negative, t.scale, r));
      return Math.min(r - this._changeScale(n.high, n.low), r - this._changeScale(i.high, i.low));
    }, e.prototype._highLowAtScale = function(t, r, n) {
      if (t.length === 0)
        return new Se(0, -1);
      var i = r - n;
      return new Se(t.indexStart >> i, t.indexEnd >> i);
    }, e.prototype._mergeBuckets = function(t, r, n, i) {
      for (var o = n.offset, a = r.scale - i, u = 0; u < n.length; u++)
        this._incrementIndexBy(t, o + u >> a, n.at(u));
    }, e.prototype._diffBuckets = function(t, r, n, i) {
      for (var o = n.offset, a = r.scale - i, u = 0; u < n.length; u++) {
        var c = o + u >> a, s = c - t.indexBase;
        s < 0 && (s += t.backing.length), t.decrementBucket(s, n.at(u));
      }
      t.trim();
    }, e;
  }()
), lv = (
  /** @class */
  function() {
    function e(t, r) {
      this._maxSize = t, this._recordMinMax = r, this.kind = Tt.EXPONENTIAL_HISTOGRAM;
    }
    return e.prototype.createAccumulation = function(t) {
      return new fv(t, this._maxSize, this._recordMinMax);
    }, e.prototype.merge = function(t, r) {
      var n = r.clone();
      return n.merge(t), n;
    }, e.prototype.diff = function(t, r) {
      var n = r.clone();
      return n.diff(t), n;
    }, e.prototype.toMetricData = function(t, r, n, i) {
      return {
        descriptor: t,
        aggregationTemporality: r,
        dataPointType: J.EXPONENTIAL_HISTOGRAM,
        dataPoints: n.map(function(o) {
          var a = sv(o, 2), u = a[0], c = a[1], s = c.toPointValue(), f = t.type === T.GAUGE || t.type === T.UP_DOWN_COUNTER || t.type === T.OBSERVABLE_GAUGE || t.type === T.OBSERVABLE_UP_DOWN_COUNTER;
          return {
            attributes: u,
            startTime: c.startTime,
            endTime: i,
            value: {
              min: s.hasMinMax ? s.min : void 0,
              max: s.hasMinMax ? s.max : void 0,
              sum: f ? void 0 : s.sum,
              positive: {
                offset: s.positive.offset,
                bucketCounts: s.positive.bucketCounts
              },
              negative: {
                offset: s.negative.offset,
                bucketCounts: s.negative.bucketCounts
              },
              count: s.count,
              scale: s.scale,
              zeroCount: s.zeroCount
            }
          };
        })
      };
    }, e;
  }()
), dv = de("OpenTelemetry SDK Context Key SUPPRESS_TRACING");
function pv(e) {
  return e.setValue(dv, !0);
}
function hv() {
  return function(e) {
    v.error(_v(e));
  };
}
function _v(e) {
  return typeof e == "string" ? e : JSON.stringify(vv(e));
}
function vv(e) {
  for (var t = {}, r = e; r !== null; )
    Object.getOwnPropertyNames(r).forEach(function(n) {
      if (!t[n]) {
        var i = r[n];
        i && (t[n] = String(i));
      }
    }), r = Object.getPrototypeOf(r);
  return t;
}
var Ev = hv();
function Wi(e) {
  try {
    Ev(e);
  } catch (t) {
  }
}
var gv = 6, yv = Math.pow(10, gv);
function Gn(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * yv);
  return [r, n];
}
function Oe(e) {
  return e[0] * 1e6 + e[1] / 1e3;
}
var Sn;
(function(e) {
  e[e.SUCCESS = 0] = "SUCCESS", e[e.FAILED = 1] = "FAILED";
})(Sn || (Sn = {}));
function mv(e, t) {
  return new Promise(function(r) {
    S.with(pv(S.active()), function() {
      e.export(t, function(n) {
        r(n);
      });
    });
  });
}
var Tv = {
  _export: mv
}, Sv = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Gr = (
  /** @class */
  function() {
    function e(t, r, n) {
      r === void 0 && (r = 0), n === void 0 && (n = [0, 0]), this.startTime = t, this._current = r, this.sampleTime = n;
    }
    return e.prototype.record = function(t) {
      this._current = t, this.sampleTime = Gn(Date.now());
    }, e.prototype.setStartTime = function(t) {
      this.startTime = t;
    }, e.prototype.toPointValue = function() {
      return this._current;
    }, e;
  }()
), Ov = (
  /** @class */
  function() {
    function e() {
      this.kind = Tt.LAST_VALUE;
    }
    return e.prototype.createAccumulation = function(t) {
      return new Gr(t);
    }, e.prototype.merge = function(t, r) {
      var n = Oe(r.sampleTime) >= Oe(t.sampleTime) ? r : t;
      return new Gr(t.startTime, n.toPointValue(), n.sampleTime);
    }, e.prototype.diff = function(t, r) {
      var n = Oe(r.sampleTime) >= Oe(t.sampleTime) ? r : t;
      return new Gr(r.startTime, n.toPointValue(), n.sampleTime);
    }, e.prototype.toMetricData = function(t, r, n, i) {
      return {
        descriptor: t,
        aggregationTemporality: r,
        dataPointType: J.GAUGE,
        dataPoints: n.map(function(o) {
          var a = Sv(o, 2), u = a[0], c = a[1];
          return {
            attributes: u,
            startTime: c.startTime,
            endTime: i,
            value: c.toPointValue()
          };
        })
      };
    }, e;
  }()
), Av = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Kt = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      n === void 0 && (n = 0), i === void 0 && (i = !1), this.startTime = t, this.monotonic = r, this._current = n, this.reset = i;
    }
    return e.prototype.record = function(t) {
      this.monotonic && t < 0 || (this._current += t);
    }, e.prototype.setStartTime = function(t) {
      this.startTime = t;
    }, e.prototype.toPointValue = function() {
      return this._current;
    }, e;
  }()
), Yi = (
  /** @class */
  function() {
    function e(t) {
      this.monotonic = t, this.kind = Tt.SUM;
    }
    return e.prototype.createAccumulation = function(t) {
      return new Kt(t, this.monotonic);
    }, e.prototype.merge = function(t, r) {
      var n = t.toPointValue(), i = r.toPointValue();
      return r.reset ? new Kt(r.startTime, this.monotonic, i, r.reset) : new Kt(t.startTime, this.monotonic, n + i);
    }, e.prototype.diff = function(t, r) {
      var n = t.toPointValue(), i = r.toPointValue();
      return this.monotonic && n > i ? new Kt(r.startTime, this.monotonic, i, !0) : new Kt(r.startTime, this.monotonic, i - n);
    }, e.prototype.toMetricData = function(t, r, n, i) {
      return {
        descriptor: t,
        aggregationTemporality: r,
        dataPointType: J.SUM,
        dataPoints: n.map(function(o) {
          var a = Av(o, 2), u = a[0], c = a[1];
          return {
            attributes: u,
            startTime: c.startTime,
            endTime: i,
            value: c.toPointValue()
          };
        }),
        isMonotonic: this.monotonic
      };
    }, e;
  }()
), bt = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), nt = (
  /** @class */
  function() {
    function e() {
    }
    return e.Drop = function() {
      return Ya;
    }, e.Sum = function() {
      return Ka;
    }, e.LastValue = function() {
      return Ja;
    }, e.Histogram = function() {
      return Za;
    }, e.ExponentialHistogram = function() {
      return Cv;
    }, e.Default = function() {
      return Mv;
    }, e;
  }()
), bv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.createAggregator = function(r) {
      return t.DEFAULT_INSTANCE;
    }, t.DEFAULT_INSTANCE = new X_(), t;
  }(nt)
), wv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.createAggregator = function(r) {
      switch (r.type) {
        case T.COUNTER:
        case T.OBSERVABLE_COUNTER:
        case T.HISTOGRAM:
          return t.MONOTONIC_INSTANCE;
        default:
          return t.NON_MONOTONIC_INSTANCE;
      }
    }, t.MONOTONIC_INSTANCE = new Yi(!0), t.NON_MONOTONIC_INSTANCE = new Yi(!1), t;
  }(nt)
), Rv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.createAggregator = function(r) {
      return t.DEFAULT_INSTANCE;
    }, t.DEFAULT_INSTANCE = new Ov(), t;
  }(nt)
), Lv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.createAggregator = function(r) {
      return t.DEFAULT_INSTANCE;
    }, t.DEFAULT_INSTANCE = new Fa([0, 5, 10, 25, 50, 75, 100, 250, 500, 750, 1e3, 2500, 5e3, 7500, 1e4], !0), t;
  }(nt)
), Pv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t(r, n) {
      n === void 0 && (n = !0);
      var i = e.call(this) || this;
      if (i._recordMinMax = n, r == null)
        throw new Error("ExplicitBucketHistogramAggregation should be created with explicit boundaries, if a single bucket histogram is required, please pass an empty array");
      r = r.concat(), r = r.sort(function(u, c) {
        return u - c;
      });
      var o = r.lastIndexOf(-1 / 0), a = r.indexOf(1 / 0);
      return a === -1 && (a = void 0), i._boundaries = r.slice(o + 1, a), i;
    }
    return t.prototype.createAggregator = function(r) {
      return new Fa(this._boundaries, this._recordMinMax);
    }, t;
  }(nt)
), Nv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t(r, n) {
      r === void 0 && (r = 160), n === void 0 && (n = !0);
      var i = e.call(this) || this;
      return i._maxSize = r, i._recordMinMax = n, i;
    }
    return t.prototype.createAggregator = function(r) {
      return new lv(this._maxSize, this._recordMinMax);
    }, t;
  }(nt)
), Iv = (
  /** @class */
  function(e) {
    bt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype._resolve = function(r) {
      switch (r.type) {
        case T.COUNTER:
        case T.UP_DOWN_COUNTER:
        case T.OBSERVABLE_COUNTER:
        case T.OBSERVABLE_UP_DOWN_COUNTER:
          return Ka;
        case T.GAUGE:
        case T.OBSERVABLE_GAUGE:
          return Ja;
        case T.HISTOGRAM:
          return r.advice.explicitBucketBoundaries ? new Pv(r.advice.explicitBucketBoundaries) : Za;
      }
      return v.warn("Unable to recognize instrument type: " + r.type), Ya;
    }, t.prototype.createAggregator = function(r) {
      return this._resolve(r).createAggregator(r);
    }, t;
  }(nt)
), Ya = new bv(), Ka = new wv(), Ja = new Rv(), Za = new Lv(), Cv = new Nv(), Mv = new Iv(), xv = function(e) {
  return nt.Default();
}, Dv = function(e) {
  return X.CUMULATIVE;
}, Hr = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, $r = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, Ki = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Uv = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Bv = (
  /** @class */
  function() {
    function e(t) {
      var r, n, i;
      this._shutdown = !1, this._aggregationSelector = (r = t == null ? void 0 : t.aggregationSelector) !== null && r !== void 0 ? r : xv, this._aggregationTemporalitySelector = (n = t == null ? void 0 : t.aggregationTemporalitySelector) !== null && n !== void 0 ? n : Dv, this._metricProducers = (i = t == null ? void 0 : t.metricProducers) !== null && i !== void 0 ? i : [], this._cardinalitySelector = t == null ? void 0 : t.cardinalitySelector;
    }
    return e.prototype.setMetricProducer = function(t) {
      if (this._sdkMetricProducer)
        throw new Error("MetricReader can not be bound to a MeterProvider again.");
      this._sdkMetricProducer = t, this.onInitialized();
    }, e.prototype.selectAggregation = function(t) {
      return this._aggregationSelector(t);
    }, e.prototype.selectAggregationTemporality = function(t) {
      return this._aggregationTemporalitySelector(t);
    }, e.prototype.selectCardinalityLimit = function(t) {
      return this._cardinalitySelector ? this._cardinalitySelector(t) : 2e3;
    }, e.prototype.onInitialized = function() {
    }, e.prototype.collect = function(t) {
      return Hr(this, void 0, void 0, function() {
        var r, n, i, o, a, u;
        return $r(this, function(c) {
          switch (c.label) {
            case 0:
              if (this._sdkMetricProducer === void 0)
                throw new Error("MetricReader is not bound to a MetricProducer");
              if (this._shutdown)
                throw new Error("MetricReader is shutdown");
              return [4, Promise.all(Uv([
                this._sdkMetricProducer.collect({
                  timeoutMillis: t == null ? void 0 : t.timeoutMillis
                })
              ], Ki(this._metricProducers.map(function(s) {
                return s.collect({
                  timeoutMillis: t == null ? void 0 : t.timeoutMillis
                });
              })), !1))];
            case 1:
              return r = Ki.apply(void 0, [c.sent()]), n = r[0], i = r.slice(1), o = n.errors.concat(Vi(i, function(s) {
                return s.errors;
              })), a = n.resourceMetrics.resource, u = n.resourceMetrics.scopeMetrics.concat(Vi(i, function(s) {
                return s.resourceMetrics.scopeMetrics;
              })), [2, {
                resourceMetrics: {
                  resource: a,
                  scopeMetrics: u
                },
                errors: o
              }];
          }
        });
      });
    }, e.prototype.shutdown = function(t) {
      return Hr(this, void 0, void 0, function() {
        return $r(this, function(r) {
          switch (r.label) {
            case 0:
              return this._shutdown ? (v.error("Cannot call shutdown twice."), [
                2
                /*return*/
              ]) : (t == null ? void 0 : t.timeoutMillis) != null ? [3, 2] : [4, this.onShutdown()];
            case 1:
              return r.sent(), [3, 4];
            case 2:
              return [4, ue(this.onShutdown(), t.timeoutMillis)];
            case 3:
              r.sent(), r.label = 4;
            case 4:
              return this._shutdown = !0, [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.forceFlush = function(t) {
      return Hr(this, void 0, void 0, function() {
        return $r(this, function(r) {
          switch (r.label) {
            case 0:
              return this._shutdown ? (v.warn("Cannot forceFlush on already shutdown MetricReader."), [
                2
                /*return*/
              ]) : (t == null ? void 0 : t.timeoutMillis) != null ? [3, 2] : [4, this.onForceFlush()];
            case 1:
              return r.sent(), [
                2
                /*return*/
              ];
            case 2:
              return [4, ue(this.onForceFlush(), t.timeoutMillis)];
            case 3:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e;
  }()
), kv = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Ae = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, be = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, Gv = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Hv = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, $v = (
  /** @class */
  function(e) {
    kv(t, e);
    function t(r) {
      var n, i, o, a, u = e.call(this, {
        aggregationSelector: (n = r.exporter.selectAggregation) === null || n === void 0 ? void 0 : n.bind(r.exporter),
        aggregationTemporalitySelector: (i = r.exporter.selectAggregationTemporality) === null || i === void 0 ? void 0 : i.bind(r.exporter),
        metricProducers: r.metricProducers
      }) || this;
      if (r.exportIntervalMillis !== void 0 && r.exportIntervalMillis <= 0)
        throw Error("exportIntervalMillis must be greater than 0");
      if (r.exportTimeoutMillis !== void 0 && r.exportTimeoutMillis <= 0)
        throw Error("exportTimeoutMillis must be greater than 0");
      if (r.exportTimeoutMillis !== void 0 && r.exportIntervalMillis !== void 0 && r.exportIntervalMillis < r.exportTimeoutMillis)
        throw Error("exportIntervalMillis must be greater than or equal to exportTimeoutMillis");
      return u._exportInterval = (o = r.exportIntervalMillis) !== null && o !== void 0 ? o : 6e4, u._exportTimeout = (a = r.exportTimeoutMillis) !== null && a !== void 0 ? a : 3e4, u._exporter = r.exporter, u;
    }
    return t.prototype._runOnce = function() {
      return Ae(this, void 0, void 0, function() {
        var r;
        return be(this, function(n) {
          switch (n.label) {
            case 0:
              return n.trys.push([0, 2, , 3]), [4, ue(this._doRun(), this._exportTimeout)];
            case 1:
              return n.sent(), [3, 3];
            case 2:
              return r = n.sent(), r instanceof Va ? (v.error("Export took longer than %s milliseconds and timed out.", this._exportTimeout), [
                2
                /*return*/
              ]) : (Wi(r), [3, 3]);
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, t.prototype._doRun = function() {
      var r, n;
      return Ae(this, void 0, void 0, function() {
        var i, o, a, u, c, s;
        return be(this, function(f) {
          switch (f.label) {
            case 0:
              return [4, this.collect({
                timeoutMillis: this._exportTimeout
              })];
            case 1:
              if (i = f.sent(), o = i.resourceMetrics, a = i.errors, a.length > 0 && (s = v).error.apply(s, Hv(["PeriodicExportingMetricReader: metrics collection errors"], Gv(a), !1)), !o.resource.asyncAttributesPending) return [3, 5];
              f.label = 2;
            case 2:
              return f.trys.push([2, 4, , 5]), [4, (n = (r = o.resource).waitForAsyncAttributes) === null || n === void 0 ? void 0 : n.call(r)];
            case 3:
              return f.sent(), [3, 5];
            case 4:
              return u = f.sent(), v.debug("Error while resolving async portion of resource: ", u), Wi(u), [3, 5];
            case 5:
              return o.scopeMetrics.length === 0 ? [
                2
                /*return*/
              ] : [4, Tv._export(this._exporter, o)];
            case 6:
              if (c = f.sent(), c.code !== Sn.SUCCESS)
                throw new Error("PeriodicExportingMetricReader: metrics export failed (error " + c.error + ")");
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, t.prototype.onInitialized = function() {
      var r = this;
      this._interval = setInterval(function() {
        r._runOnce();
      }, this._exportInterval);
    }, t.prototype.onForceFlush = function() {
      return Ae(this, void 0, void 0, function() {
        return be(this, function(r) {
          switch (r.label) {
            case 0:
              return [4, this._runOnce()];
            case 1:
              return r.sent(), [4, this._exporter.forceFlush()];
            case 2:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, t.prototype.onShutdown = function() {
      return Ae(this, void 0, void 0, function() {
        return be(this, function(r) {
          switch (r.label) {
            case 0:
              return this._interval && clearInterval(this._interval), [4, this.onForceFlush()];
            case 1:
              return r.sent(), [4, this._exporter.shutdown()];
            case 2:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, t;
  }(Bv)
), jv = (
  /** @class */
  function() {
    function e() {
      this._registeredViews = [];
    }
    return e.prototype.addView = function(t) {
      this._registeredViews.push(t);
    }, e.prototype.findViews = function(t, r) {
      var n = this, i = this._registeredViews.filter(function(o) {
        return n._matchInstrument(o.instrumentSelector, t) && n._matchMeter(o.meterSelector, r);
      });
      return i;
    }, e.prototype._matchInstrument = function(t, r) {
      return (t.getType() === void 0 || r.type === t.getType()) && t.getNameFilter().match(r.name) && t.getUnitFilter().match(r.unit);
    }, e.prototype._matchMeter = function(t, r) {
      return t.getNameFilter().match(r.name) && (r.version === void 0 || t.getVersionFilter().match(r.version)) && (r.schemaUrl === void 0 || t.getSchemaUrlFilter().match(r.schemaUrl));
    }, e;
  }()
), wt = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Je = (
  /** @class */
  function() {
    function e(t, r) {
      this._writableMetricStorage = t, this._descriptor = r;
    }
    return e.prototype._record = function(t, r, n) {
      if (r === void 0 && (r = {}), n === void 0 && (n = S.active()), typeof t != "number") {
        v.warn("non-number value provided to metric " + this._descriptor.name + ": " + t);
        return;
      }
      this._descriptor.valueType === lt.INT && !Number.isInteger(t) && (v.warn("INT value type cannot accept a floating-point value for " + this._descriptor.name + ", ignoring the fractional digits."), t = Math.trunc(t), !Number.isInteger(t)) || this._writableMetricStorage.record(t, r, n, Gn(Date.now()));
    }, e;
  }()
), Vv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n, i) {
      this._record(r, n, i);
    }, t;
  }(Je)
), Fv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n, i) {
      if (r < 0) {
        v.warn("negative value provided to counter " + this._descriptor.name + ": " + r);
        return;
      }
      this._record(r, n, i);
    }, t;
  }(Je)
), Xv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n, i) {
      this._record(r, n, i);
    }, t;
  }(Je)
), zv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n, i) {
      if (r < 0) {
        v.warn("negative value provided to histogram " + this._descriptor.name + ": " + r);
        return;
      }
      this._record(r, n, i);
    }, t;
  }(Je)
), Ze = (
  /** @class */
  function() {
    function e(t, r, n) {
      this._observableRegistry = n, this._descriptor = t, this._metricStorages = r;
    }
    return e.prototype.addCallback = function(t) {
      this._observableRegistry.addCallback(t, this);
    }, e.prototype.removeCallback = function(t) {
      this._observableRegistry.removeCallback(t, this);
    }, e;
  }()
), qv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ze)
), Wv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ze)
), Yv = (
  /** @class */
  function(e) {
    wt(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ze)
);
function On(e) {
  return e instanceof Ze;
}
var Kv = (
  /** @class */
  function() {
    function e(t) {
      this._meterSharedState = t;
    }
    return e.prototype.createGauge = function(t, r) {
      var n = it(t, T.GAUGE, r), i = this._meterSharedState.registerMetricStorage(n);
      return new Xv(i, n);
    }, e.prototype.createHistogram = function(t, r) {
      var n = it(t, T.HISTOGRAM, r), i = this._meterSharedState.registerMetricStorage(n);
      return new zv(i, n);
    }, e.prototype.createCounter = function(t, r) {
      var n = it(t, T.COUNTER, r), i = this._meterSharedState.registerMetricStorage(n);
      return new Fv(i, n);
    }, e.prototype.createUpDownCounter = function(t, r) {
      var n = it(t, T.UP_DOWN_COUNTER, r), i = this._meterSharedState.registerMetricStorage(n);
      return new Vv(i, n);
    }, e.prototype.createObservableGauge = function(t, r) {
      var n = it(t, T.OBSERVABLE_GAUGE, r), i = this._meterSharedState.registerAsyncMetricStorage(n);
      return new Wv(n, i, this._meterSharedState.observableRegistry);
    }, e.prototype.createObservableCounter = function(t, r) {
      var n = it(t, T.OBSERVABLE_COUNTER, r), i = this._meterSharedState.registerAsyncMetricStorage(n);
      return new qv(n, i, this._meterSharedState.observableRegistry);
    }, e.prototype.createObservableUpDownCounter = function(t, r) {
      var n = it(t, T.OBSERVABLE_UP_DOWN_COUNTER, r), i = this._meterSharedState.registerAsyncMetricStorage(n);
      return new Yv(n, i, this._meterSharedState.observableRegistry);
    }, e.prototype.addBatchObservableCallback = function(t, r) {
      this._meterSharedState.observableRegistry.addBatchCallback(t, r);
    }, e.prototype.removeBatchObservableCallback = function(t, r) {
      this._meterSharedState.observableRegistry.removeBatchCallback(t, r);
    }, e;
  }()
), Qa = (
  /** @class */
  function() {
    function e(t) {
      this._instrumentDescriptor = t;
    }
    return e.prototype.getInstrumentDescriptor = function() {
      return this._instrumentDescriptor;
    }, e.prototype.updateDescription = function(t) {
      this._instrumentDescriptor = it(this._instrumentDescriptor.name, this._instrumentDescriptor.type, {
        description: t,
        valueType: this._instrumentDescriptor.valueType,
        unit: this._instrumentDescriptor.unit,
        advice: this._instrumentDescriptor.advice
      });
    }, e;
  }()
), Jv = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Ji = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, Zv = (
  /** @class */
  function() {
    function e(t) {
      this._hash = t, this._valueMap = /* @__PURE__ */ new Map(), this._keyMap = /* @__PURE__ */ new Map();
    }
    return e.prototype.get = function(t, r) {
      return r != null || (r = this._hash(t)), this._valueMap.get(r);
    }, e.prototype.getOrDefault = function(t, r) {
      var n = this._hash(t);
      if (this._valueMap.has(n))
        return this._valueMap.get(n);
      var i = r();
      return this._keyMap.has(n) || this._keyMap.set(n, t), this._valueMap.set(n, i), i;
    }, e.prototype.set = function(t, r, n) {
      n != null || (n = this._hash(t)), this._keyMap.has(n) || this._keyMap.set(n, t), this._valueMap.set(n, r);
    }, e.prototype.has = function(t, r) {
      return r != null || (r = this._hash(t)), this._valueMap.has(r);
    }, e.prototype.keys = function() {
      var t, r;
      return Ji(this, function(n) {
        switch (n.label) {
          case 0:
            t = this._keyMap.entries(), r = t.next(), n.label = 1;
          case 1:
            return r.done === !0 ? [3, 3] : [4, [r.value[1], r.value[0]]];
          case 2:
            return n.sent(), r = t.next(), [3, 1];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    }, e.prototype.entries = function() {
      var t, r;
      return Ji(this, function(n) {
        switch (n.label) {
          case 0:
            t = this._valueMap.entries(), r = t.next(), n.label = 1;
          case 1:
            return r.done === !0 ? [3, 3] : [4, [this._keyMap.get(r.value[0]), r.value[1], r.value[0]]];
          case 2:
            return n.sent(), r = t.next(), [3, 1];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    }, Object.defineProperty(e.prototype, "size", {
      get: function() {
        return this._valueMap.size;
      },
      enumerable: !1,
      configurable: !0
    }), e;
  }()
), yt = (
  /** @class */
  function(e) {
    Jv(t, e);
    function t() {
      return e.call(this, ja) || this;
    }
    return t;
  }(Zv)
), Qv = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, ts = (
  /** @class */
  function() {
    function e(t, r) {
      this._aggregator = t, this._activeCollectionStorage = new yt(), this._cumulativeMemoStorage = new yt(), this._overflowAttributes = { "otel.metric.overflow": !0 }, this._cardinalityLimit = (r != null ? r : 2e3) - 1, this._overflowHashCode = ja(this._overflowAttributes);
    }
    return e.prototype.record = function(t, r, n, i) {
      var o = this, a = this._activeCollectionStorage.get(r);
      if (!a) {
        if (this._activeCollectionStorage.size >= this._cardinalityLimit) {
          var u = this._activeCollectionStorage.getOrDefault(this._overflowAttributes, function() {
            return o._aggregator.createAccumulation(i);
          });
          u == null || u.record(t);
          return;
        }
        a = this._aggregator.createAccumulation(i), this._activeCollectionStorage.set(r, a);
      }
      a == null || a.record(t);
    }, e.prototype.batchCumulate = function(t, r) {
      var n = this;
      Array.from(t.entries()).forEach(function(i) {
        var o = Qv(i, 3), a = o[0], u = o[1], c = o[2], s = n._aggregator.createAccumulation(r);
        s == null || s.record(u);
        var f = s;
        if (n._cumulativeMemoStorage.has(a, c)) {
          var l = n._cumulativeMemoStorage.get(a, c);
          f = n._aggregator.diff(l, s);
        } else if (n._cumulativeMemoStorage.size >= n._cardinalityLimit && (a = n._overflowAttributes, c = n._overflowHashCode, n._cumulativeMemoStorage.has(a, c))) {
          var l = n._cumulativeMemoStorage.get(a, c);
          f = n._aggregator.diff(l, s);
        }
        if (n._activeCollectionStorage.has(a, c)) {
          var d = n._activeCollectionStorage.get(a, c);
          f = n._aggregator.merge(d, f);
        }
        n._cumulativeMemoStorage.set(a, s, c), n._activeCollectionStorage.set(a, f, c);
      });
    }, e.prototype.collect = function() {
      var t = this._activeCollectionStorage;
      return this._activeCollectionStorage = new yt(), t;
    }, e;
  }()
), jr = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Zi = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, es = (
  /** @class */
  function() {
    function e(t, r) {
      var n = this;
      this._aggregator = t, this._unreportedAccumulations = /* @__PURE__ */ new Map(), this._reportHistory = /* @__PURE__ */ new Map(), r.forEach(function(i) {
        n._unreportedAccumulations.set(i, []);
      });
    }
    return e.prototype.buildMetrics = function(t, r, n, i) {
      this._stashAccumulations(n);
      var o = this._getMergedUnreportedAccumulations(t), a = o, u;
      if (this._reportHistory.has(t)) {
        var c = this._reportHistory.get(t), s = c.collectionTime;
        u = c.aggregationTemporality, u === X.CUMULATIVE ? a = e.merge(c.accumulations, o, this._aggregator) : a = e.calibrateStartTime(c.accumulations, o, s);
      } else
        u = t.selectAggregationTemporality(r.type);
      this._reportHistory.set(t, {
        accumulations: a,
        collectionTime: i,
        aggregationTemporality: u
      });
      var f = tE(a);
      if (f.length !== 0)
        return this._aggregator.toMetricData(
          r,
          u,
          f,
          /* endTime */
          i
        );
    }, e.prototype._stashAccumulations = function(t) {
      var r, n, i = this._unreportedAccumulations.keys();
      try {
        for (var o = jr(i), a = o.next(); !a.done; a = o.next()) {
          var u = a.value, c = this._unreportedAccumulations.get(u);
          c === void 0 && (c = [], this._unreportedAccumulations.set(u, c)), c.push(t);
        }
      } catch (s) {
        r = { error: s };
      } finally {
        try {
          a && !a.done && (n = o.return) && n.call(o);
        } finally {
          if (r) throw r.error;
        }
      }
    }, e.prototype._getMergedUnreportedAccumulations = function(t) {
      var r, n, i = new yt(), o = this._unreportedAccumulations.get(t);
      if (this._unreportedAccumulations.set(t, []), o === void 0)
        return i;
      try {
        for (var a = jr(o), u = a.next(); !u.done; u = a.next()) {
          var c = u.value;
          i = e.merge(i, c, this._aggregator);
        }
      } catch (s) {
        r = { error: s };
      } finally {
        try {
          u && !u.done && (n = a.return) && n.call(a);
        } finally {
          if (r) throw r.error;
        }
      }
      return i;
    }, e.merge = function(t, r, n) {
      for (var i = t, o = r.entries(), a = o.next(); a.done !== !0; ) {
        var u = Zi(a.value, 3), c = u[0], s = u[1], f = u[2];
        if (t.has(c, f)) {
          var l = t.get(c, f), d = n.merge(l, s);
          i.set(c, d, f);
        } else
          i.set(c, s, f);
        a = o.next();
      }
      return i;
    }, e.calibrateStartTime = function(t, r, n) {
      var i, o;
      try {
        for (var a = jr(t.keys()), u = a.next(); !u.done; u = a.next()) {
          var c = Zi(u.value, 2), s = c[0], f = c[1], l = r.get(s, f);
          l == null || l.setStartTime(n);
        }
      } catch (d) {
        i = { error: d };
      } finally {
        try {
          u && !u.done && (o = a.return) && o.call(a);
        } finally {
          if (i) throw i.error;
        }
      }
      return r;
    }, e;
  }()
);
function tE(e) {
  return Array.from(e.entries());
}
var eE = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), rE = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, nE = (
  /** @class */
  function(e) {
    eE(t, e);
    function t(r, n, i, o, a) {
      var u = e.call(this, r) || this;
      return u._attributesProcessor = i, u._aggregationCardinalityLimit = a, u._deltaMetricStorage = new ts(n, u._aggregationCardinalityLimit), u._temporalMetricStorage = new es(n, o), u;
    }
    return t.prototype.record = function(r, n) {
      var i = this, o = new yt();
      Array.from(r.entries()).forEach(function(a) {
        var u = rE(a, 2), c = u[0], s = u[1];
        o.set(i._attributesProcessor.process(c), s);
      }), this._deltaMetricStorage.batchCumulate(o, n);
    }, t.prototype.collect = function(r, n) {
      var i = this._deltaMetricStorage.collect();
      return this._temporalMetricStorage.buildMetrics(r, this._instrumentDescriptor, i, n);
    }, t;
  }(Qa)
);
function Qi(e, t) {
  var r = "";
  return e.unit !== t.unit && (r += "	- Unit '" + e.unit + "' does not match '" + t.unit + `'
`), e.type !== t.type && (r += "	- Type '" + e.type + "' does not match '" + t.type + `'
`), e.valueType !== t.valueType && (r += "	- Value Type '" + e.valueType + "' does not match '" + t.valueType + `'
`), e.description !== t.description && (r += "	- Description '" + e.description + "' does not match '" + t.description + `'
`), r;
}
function iE(e, t) {
  return "	- use valueType '" + e.valueType + "' on instrument creation or use an instrument name other than '" + t.name + "'";
}
function oE(e, t) {
  return "	- use unit '" + e.unit + "' on instrument creation or use an instrument name other than '" + t.name + "'";
}
function aE(e, t) {
  var r = {
    name: t.name,
    type: t.type,
    unit: t.unit
  }, n = JSON.stringify(r);
  return "	- create a new view with a name other than '" + e.name + "' and InstrumentSelector '" + n + "'";
}
function sE(e, t) {
  var r = {
    name: t.name,
    type: t.type,
    unit: t.unit
  }, n = JSON.stringify(r);
  return "	- create a new view with a name other than '" + e.name + "' and InstrumentSelector '" + n + `'
    	- OR - create a new view with the name ` + e.name + " and description '" + e.description + "' and InstrumentSelector " + n + `
    	- OR - create a new view with the name ` + t.name + " and description '" + e.description + "' and InstrumentSelector " + n;
}
function to(e, t) {
  return e.valueType !== t.valueType ? iE(e, t) : e.unit !== t.unit ? oE(e, t) : e.type !== t.type ? aE(e, t) : e.description !== t.description ? sE(e, t) : "";
}
var Vr = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, uE = (
  /** @class */
  function() {
    function e() {
      this._sharedRegistry = /* @__PURE__ */ new Map(), this._perCollectorRegistry = /* @__PURE__ */ new Map();
    }
    return e.create = function() {
      return new e();
    }, e.prototype.getStorages = function(t) {
      var r, n, i, o, a = [];
      try {
        for (var u = Vr(this._sharedRegistry.values()), c = u.next(); !c.done; c = u.next()) {
          var s = c.value;
          a = a.concat(s);
        }
      } catch (h) {
        r = { error: h };
      } finally {
        try {
          c && !c.done && (n = u.return) && n.call(u);
        } finally {
          if (r) throw r.error;
        }
      }
      var f = this._perCollectorRegistry.get(t);
      if (f != null)
        try {
          for (var l = Vr(f.values()), d = l.next(); !d.done; d = l.next()) {
            var s = d.value;
            a = a.concat(s);
          }
        } catch (h) {
          i = { error: h };
        } finally {
          try {
            d && !d.done && (o = l.return) && o.call(l);
          } finally {
            if (i) throw i.error;
          }
        }
      return a;
    }, e.prototype.register = function(t) {
      this._registerStorage(t, this._sharedRegistry);
    }, e.prototype.registerForCollector = function(t, r) {
      var n = this._perCollectorRegistry.get(t);
      n == null && (n = /* @__PURE__ */ new Map(), this._perCollectorRegistry.set(t, n)), this._registerStorage(r, n);
    }, e.prototype.findOrUpdateCompatibleStorage = function(t) {
      var r = this._sharedRegistry.get(t.name);
      return r === void 0 ? null : this._findOrUpdateCompatibleStorage(t, r);
    }, e.prototype.findOrUpdateCompatibleCollectorStorage = function(t, r) {
      var n = this._perCollectorRegistry.get(t);
      if (n === void 0)
        return null;
      var i = n.get(r.name);
      return i === void 0 ? null : this._findOrUpdateCompatibleStorage(r, i);
    }, e.prototype._registerStorage = function(t, r) {
      var n = t.getInstrumentDescriptor(), i = r.get(n.name);
      if (i === void 0) {
        r.set(n.name, [t]);
        return;
      }
      i.push(t);
    }, e.prototype._findOrUpdateCompatibleStorage = function(t, r) {
      var n, i, o = null;
      try {
        for (var a = Vr(r), u = a.next(); !u.done; u = a.next()) {
          var c = u.value, s = c.getInstrumentDescriptor();
          q_(s, t) ? (s.description !== t.description && (t.description.length > s.description.length && c.updateDescription(t.description), v.warn("A view or instrument with the name ", t.name, ` has already been registered, but has a different description and is incompatible with another registered view.
`, `Details:
`, Qi(s, t), `The longer description will be used.
To resolve the conflict:`, to(s, t))), o = c) : v.warn("A view or instrument with the name ", t.name, ` has already been registered and is incompatible with another registered view.
`, `Details:
`, Qi(s, t), `To resolve the conflict:
`, to(s, t));
        }
      } catch (f) {
        n = { error: f };
      } finally {
        try {
          u && !u.done && (i = a.return) && i.call(a);
        } finally {
          if (n) throw n.error;
        }
      }
      return o;
    }, e;
  }()
), cE = (
  /** @class */
  function() {
    function e(t) {
      this._backingStorages = t;
    }
    return e.prototype.record = function(t, r, n, i) {
      this._backingStorages.forEach(function(o) {
        o.record(t, r, n, i);
      });
    }, e;
  }()
), fE = (
  /** @class */
  function() {
    function e(t, r) {
      this._instrumentName = t, this._valueType = r, this._buffer = new yt();
    }
    return e.prototype.observe = function(t, r) {
      if (r === void 0 && (r = {}), typeof t != "number") {
        v.warn("non-number value provided to metric " + this._instrumentName + ": " + t);
        return;
      }
      this._valueType === lt.INT && !Number.isInteger(t) && (v.warn("INT value type cannot accept a floating-point value for " + this._instrumentName + ", ignoring the fractional digits."), t = Math.trunc(t), !Number.isInteger(t)) || this._buffer.set(r, t);
    }, e;
  }()
), lE = (
  /** @class */
  function() {
    function e() {
      this._buffer = /* @__PURE__ */ new Map();
    }
    return e.prototype.observe = function(t, r, n) {
      if (n === void 0 && (n = {}), !!On(t)) {
        var i = this._buffer.get(t);
        if (i == null && (i = new yt(), this._buffer.set(t, i)), typeof r != "number") {
          v.warn("non-number value provided to metric " + t._descriptor.name + ": " + r);
          return;
        }
        t._descriptor.valueType === lt.INT && !Number.isInteger(r) && (v.warn("INT value type cannot accept a floating-point value for " + t._descriptor.name + ", ignoring the fractional digits."), r = Math.trunc(r), !Number.isInteger(r)) || i.set(n, r);
      }
    }, e;
  }()
), Fr = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, Xr = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, eo = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, ro = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, dE = (
  /** @class */
  function() {
    function e() {
      this._callbacks = [], this._batchCallbacks = [];
    }
    return e.prototype.addCallback = function(t, r) {
      var n = this._findCallback(t, r);
      n >= 0 || this._callbacks.push({ callback: t, instrument: r });
    }, e.prototype.removeCallback = function(t, r) {
      var n = this._findCallback(t, r);
      n < 0 || this._callbacks.splice(n, 1);
    }, e.prototype.addBatchCallback = function(t, r) {
      var n = new Set(r.filter(On));
      if (n.size === 0) {
        v.error("BatchObservableCallback is not associated with valid instruments", r);
        return;
      }
      var i = this._findBatchCallback(t, n);
      i >= 0 || this._batchCallbacks.push({ callback: t, instruments: n });
    }, e.prototype.removeBatchCallback = function(t, r) {
      var n = new Set(r.filter(On)), i = this._findBatchCallback(t, n);
      i < 0 || this._batchCallbacks.splice(i, 1);
    }, e.prototype.observe = function(t, r) {
      return Fr(this, void 0, void 0, function() {
        var n, i, o, a;
        return Xr(this, function(u) {
          switch (u.label) {
            case 0:
              return n = this._observeCallbacks(t, r), i = this._observeBatchCallbacks(t, r), [4, H_(ro(ro([], eo(n), !1), eo(i), !1))];
            case 1:
              return o = u.sent(), a = o.filter($_).map(function(c) {
                return c.reason;
              }), [2, a];
          }
        });
      });
    }, e.prototype._observeCallbacks = function(t, r) {
      var n = this;
      return this._callbacks.map(function(i) {
        var o = i.callback, a = i.instrument;
        return Fr(n, void 0, void 0, function() {
          var u, c;
          return Xr(this, function(s) {
            switch (s.label) {
              case 0:
                return u = new fE(a._descriptor.name, a._descriptor.valueType), c = Promise.resolve(o(u)), r != null && (c = ue(c, r)), [4, c];
              case 1:
                return s.sent(), a._metricStorages.forEach(function(f) {
                  f.record(u._buffer, t);
                }), [
                  2
                  /*return*/
                ];
            }
          });
        });
      });
    }, e.prototype._observeBatchCallbacks = function(t, r) {
      var n = this;
      return this._batchCallbacks.map(function(i) {
        var o = i.callback, a = i.instruments;
        return Fr(n, void 0, void 0, function() {
          var u, c;
          return Xr(this, function(s) {
            switch (s.label) {
              case 0:
                return u = new lE(), c = Promise.resolve(o(u)), r != null && (c = ue(c, r)), [4, c];
              case 1:
                return s.sent(), a.forEach(function(f) {
                  var l = u._buffer.get(f);
                  l != null && f._metricStorages.forEach(function(d) {
                    d.record(l, t);
                  });
                }), [
                  2
                  /*return*/
                ];
            }
          });
        });
      });
    }, e.prototype._findCallback = function(t, r) {
      return this._callbacks.findIndex(function(n) {
        return n.callback === t && n.instrument === r;
      });
    }, e.prototype._findBatchCallback = function(t, r) {
      return this._batchCallbacks.findIndex(function(n) {
        return n.callback === t && j_(n.instruments, r);
      });
    }, e;
  }()
), pE = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), hE = (
  /** @class */
  function(e) {
    pE(t, e);
    function t(r, n, i, o, a) {
      var u = e.call(this, r) || this;
      return u._attributesProcessor = i, u._aggregationCardinalityLimit = a, u._deltaMetricStorage = new ts(n, u._aggregationCardinalityLimit), u._temporalMetricStorage = new es(n, o), u;
    }
    return t.prototype.record = function(r, n, i, o) {
      n = this._attributesProcessor.process(n, i), this._deltaMetricStorage.record(r, n, i, o);
    }, t.prototype.collect = function(r, n) {
      var i = this._deltaMetricStorage.collect();
      return this._temporalMetricStorage.buildMetrics(r, this._instrumentDescriptor, i, n);
    }, t;
  }(Qa)
), rs = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Hn = (
  /** @class */
  function() {
    function e() {
    }
    return e.Noop = function() {
      return vE;
    }, e;
  }()
), _E = (
  /** @class */
  function(e) {
    rs(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.process = function(r, n) {
      return r;
    }, t;
  }(Hn)
);
(function(e) {
  rs(t, e);
  function t(r) {
    var n = e.call(this) || this;
    return n._allowedAttributeNames = r, n;
  }
  return t.prototype.process = function(r, n) {
    var i = this, o = {};
    return Object.keys(r).filter(function(a) {
      return i._allowedAttributeNames.includes(a);
    }).forEach(function(a) {
      return o[a] = r[a];
    }), o;
  }, t;
})(Hn);
var vE = new _E(), EE = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, gE = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, yE = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, mE = (
  /** @class */
  function() {
    function e(t, r) {
      this._meterProviderSharedState = t, this._instrumentationScope = r, this.metricStorageRegistry = new uE(), this.observableRegistry = new dE(), this.meter = new Kv(this);
    }
    return e.prototype.registerMetricStorage = function(t) {
      var r = this._registerMetricStorage(t, hE);
      return r.length === 1 ? r[0] : new cE(r);
    }, e.prototype.registerAsyncMetricStorage = function(t) {
      var r = this._registerMetricStorage(t, nE);
      return r;
    }, e.prototype.collect = function(t, r, n) {
      return EE(this, void 0, void 0, function() {
        var i, o, a;
        return gE(this, function(u) {
          switch (u.label) {
            case 0:
              return [4, this.observableRegistry.observe(r, n == null ? void 0 : n.timeoutMillis)];
            case 1:
              return i = u.sent(), o = this.metricStorageRegistry.getStorages(t), o.length === 0 ? [2, null] : (a = o.map(function(c) {
                return c.collect(t, r);
              }).filter(k_), a.length === 0 ? [2, { errors: i }] : [2, {
                scopeMetrics: {
                  scope: this._instrumentationScope,
                  metrics: a
                },
                errors: i
              }]);
          }
        });
      });
    }, e.prototype._registerMetricStorage = function(t, r) {
      var n = this, i = this._meterProviderSharedState.viewRegistry.findViews(t, this._instrumentationScope), o = i.map(function(c) {
        var s = z_(c, t), f = n.metricStorageRegistry.findOrUpdateCompatibleStorage(s);
        if (f != null)
          return f;
        var l = c.aggregation.createAggregator(s), d = new r(s, l, c.attributesProcessor, n._meterProviderSharedState.metricCollectors, c.aggregationCardinalityLimit);
        return n.metricStorageRegistry.register(d), d;
      });
      if (o.length === 0) {
        var a = this._meterProviderSharedState.selectAggregations(t.type), u = a.map(function(c) {
          var s = yE(c, 2), f = s[0], l = s[1], d = n.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage(f, t);
          if (d != null)
            return d;
          var h = l.createAggregator(t), _ = f.selectCardinalityLimit(t.type), p = new r(t, h, Hn.Noop(), [f], _);
          return n.metricStorageRegistry.registerForCollector(f, p), p;
        });
        o = o.concat(u);
      }
      return o;
    }, e;
  }()
), TE = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, SE = (
  /** @class */
  function() {
    function e(t) {
      this.resource = t, this.viewRegistry = new jv(), this.metricCollectors = [], this.meterSharedStates = /* @__PURE__ */ new Map();
    }
    return e.prototype.getMeterSharedState = function(t) {
      var r = G_(t), n = this.meterSharedStates.get(r);
      return n == null && (n = new mE(this, t), this.meterSharedStates.set(r, n)), n;
    }, e.prototype.selectAggregations = function(t) {
      var r, n, i = [];
      try {
        for (var o = TE(this.metricCollectors), a = o.next(); !a.done; a = o.next()) {
          var u = a.value;
          i.push([u, u.selectAggregation(t)]);
        }
      } catch (c) {
        r = { error: c };
      } finally {
        try {
          a && !a.done && (n = o.return) && n.call(o);
        } finally {
          if (r) throw r.error;
        }
      }
      return i;
    }, e;
  }()
), we = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, Re = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, OE = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, AE = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, bE = (
  /** @class */
  function() {
    function e(t, r) {
      this._sharedState = t, this._metricReader = r;
    }
    return e.prototype.collect = function(t) {
      return we(this, void 0, void 0, function() {
        var r, n, i, o, a = this;
        return Re(this, function(u) {
          switch (u.label) {
            case 0:
              return r = Gn(Date.now()), n = [], i = [], o = Array.from(this._sharedState.meterSharedStates.values()).map(function(c) {
                return we(a, void 0, void 0, function() {
                  var s;
                  return Re(this, function(f) {
                    switch (f.label) {
                      case 0:
                        return [4, c.collect(this, r, t)];
                      case 1:
                        return s = f.sent(), (s == null ? void 0 : s.scopeMetrics) != null && n.push(s.scopeMetrics), (s == null ? void 0 : s.errors) != null && i.push.apply(i, AE([], OE(s.errors), !1)), [
                          2
                          /*return*/
                        ];
                    }
                  });
                });
              }), [4, Promise.all(o)];
            case 1:
              return u.sent(), [2, {
                resourceMetrics: {
                  resource: this._sharedState.resource,
                  scopeMetrics: n
                },
                errors: i
              }];
          }
        });
      });
    }, e.prototype.forceFlush = function(t) {
      return we(this, void 0, void 0, function() {
        return Re(this, function(r) {
          switch (r.label) {
            case 0:
              return [4, this._metricReader.forceFlush(t)];
            case 1:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.shutdown = function(t) {
      return we(this, void 0, void 0, function() {
        return Re(this, function(r) {
          switch (r.label) {
            case 0:
              return [4, this._metricReader.shutdown(t)];
            case 1:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.selectAggregationTemporality = function(t) {
      return this._metricReader.selectAggregationTemporality(t);
    }, e.prototype.selectAggregation = function(t) {
      return this._metricReader.selectAggregation(t);
    }, e.prototype.selectCardinalityLimit = function(t) {
      var r, n, i;
      return (i = (n = (r = this._metricReader).selectCardinalityLimit) === null || n === void 0 ? void 0 : n.call(r, t)) !== null && i !== void 0 ? i : 2e3;
    }, e;
  }()
), no = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, io = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, oo = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function wE(e, t) {
  var r = t != null ? t : ae.empty();
  return e ? ae.default().merge(r) : r;
}
var RE = (
  /** @class */
  function() {
    function e(t) {
      var r, n, i, o, a;
      if (this._shutdown = !1, this._sharedState = new SE(wE((a = t == null ? void 0 : t.mergeResourceWithDefaults) !== null && a !== void 0 ? a : !0, t == null ? void 0 : t.resource)), (t == null ? void 0 : t.views) != null && t.views.length > 0)
        try {
          for (var u = oo(t.views), c = u.next(); !c.done; c = u.next()) {
            var s = c.value;
            this._sharedState.viewRegistry.addView(s);
          }
        } catch (h) {
          r = { error: h };
        } finally {
          try {
            c && !c.done && (n = u.return) && n.call(u);
          } finally {
            if (r) throw r.error;
          }
        }
      if ((t == null ? void 0 : t.readers) != null && t.readers.length > 0)
        try {
          for (var f = oo(t.readers), l = f.next(); !l.done; l = f.next()) {
            var d = l.value;
            this.addMetricReader(d);
          }
        } catch (h) {
          i = { error: h };
        } finally {
          try {
            l && !l.done && (o = f.return) && o.call(f);
          } finally {
            if (i) throw i.error;
          }
        }
    }
    return e.prototype.getMeter = function(t, r, n) {
      return r === void 0 && (r = ""), n === void 0 && (n = {}), this._shutdown ? (v.warn("A shutdown MeterProvider cannot provide a Meter"), Zu()) : this._sharedState.getMeterSharedState({
        name: t,
        version: r,
        schemaUrl: n.schemaUrl
      }).meter;
    }, e.prototype.addMetricReader = function(t) {
      var r = new bE(this._sharedState, t);
      t.setMetricProducer(r), this._sharedState.metricCollectors.push(r);
    }, e.prototype.shutdown = function(t) {
      return no(this, void 0, void 0, function() {
        return io(this, function(r) {
          switch (r.label) {
            case 0:
              return this._shutdown ? (v.warn("shutdown may only be called once per MeterProvider"), [
                2
                /*return*/
              ]) : (this._shutdown = !0, [4, Promise.all(this._sharedState.metricCollectors.map(function(n) {
                return n.shutdown(t);
              }))]);
            case 1:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.forceFlush = function(t) {
      return no(this, void 0, void 0, function() {
        return io(this, function(r) {
          switch (r.label) {
            case 0:
              return this._shutdown ? (v.warn("invalid attempt to force flush after MeterProvider shutdown"), [
                2
                /*return*/
              ]) : [4, Promise.all(this._sharedState.metricCollectors.map(function(n) {
                return n.forceFlush(t);
              }))];
            case 1:
              return r.sent(), [
                2
                /*return*/
              ];
          }
        });
      });
    }, e;
  }()
);
function LE(e, t) {
  var r = Ba(t);
  return {
    resource: ka(e.resource),
    schemaUrl: void 0,
    scopeMetrics: PE(e.scopeMetrics, r)
  };
}
function PE(e, t) {
  return Array.from(e.map(function(r) {
    return {
      scope: Ga(r.scope),
      metrics: r.metrics.map(function(n) {
        return NE(n, t);
      }),
      schemaUrl: r.scope.schemaUrl
    };
  }));
}
function NE(e, t) {
  var r = {
    name: e.descriptor.name,
    description: e.descriptor.description,
    unit: e.descriptor.unit
  }, n = xE(e.aggregationTemporality);
  switch (e.dataPointType) {
    case J.SUM:
      r.sum = {
        aggregationTemporality: n,
        isMonotonic: e.isMonotonic,
        dataPoints: ao(e, t)
      };
      break;
    case J.GAUGE:
      r.gauge = {
        dataPoints: ao(e, t)
      };
      break;
    case J.HISTOGRAM:
      r.histogram = {
        aggregationTemporality: n,
        dataPoints: CE(e, t)
      };
      break;
    case J.EXPONENTIAL_HISTOGRAM:
      r.exponentialHistogram = {
        aggregationTemporality: n,
        dataPoints: ME(e, t)
      };
      break;
  }
  return r;
}
function IE(e, t, r) {
  var n = {
    attributes: At(e.attributes),
    startTimeUnixNano: r.encodeHrTime(e.startTime),
    timeUnixNano: r.encodeHrTime(e.endTime)
  };
  switch (t) {
    case lt.INT:
      n.asInt = e.value;
      break;
    case lt.DOUBLE:
      n.asDouble = e.value;
      break;
  }
  return n;
}
function ao(e, t) {
  return e.dataPoints.map(function(r) {
    return IE(r, e.descriptor.valueType, t);
  });
}
function CE(e, t) {
  return e.dataPoints.map(function(r) {
    var n = r.value;
    return {
      attributes: At(r.attributes),
      bucketCounts: n.buckets.counts,
      explicitBounds: n.buckets.boundaries,
      count: n.count,
      sum: n.sum,
      min: n.min,
      max: n.max,
      startTimeUnixNano: t.encodeHrTime(r.startTime),
      timeUnixNano: t.encodeHrTime(r.endTime)
    };
  });
}
function ME(e, t) {
  return e.dataPoints.map(function(r) {
    var n = r.value;
    return {
      attributes: At(r.attributes),
      count: n.count,
      min: n.min,
      max: n.max,
      sum: n.sum,
      positive: {
        offset: n.positive.offset,
        bucketCounts: n.positive.bucketCounts
      },
      negative: {
        offset: n.negative.offset,
        bucketCounts: n.negative.bucketCounts
      },
      scale: n.scale,
      zeroCount: n.zeroCount,
      startTimeUnixNano: t.encodeHrTime(r.startTime),
      timeUnixNano: t.encodeHrTime(r.endTime)
    };
  });
}
function xE(e) {
  switch (e) {
    case X.DELTA:
      return 1;
    case X.CUMULATIVE:
      return 2;
  }
}
function DE(e, t) {
  return {
    resourceMetrics: e.map(function(r) {
      return LE(r, t);
    })
  };
}
var UE = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, BE = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function kE(e, t) {
  var r, n = e.spanContext(), i = e.status;
  return {
    traceId: t.encodeSpanContext(n.traceId),
    spanId: t.encodeSpanContext(n.spanId),
    parentSpanId: t.encodeOptionalSpanContext(e.parentSpanId),
    traceState: (r = n.traceState) === null || r === void 0 ? void 0 : r.serialize(),
    name: e.name,
    // Span kind is offset by 1 because the API does not define a value for unset
    kind: e.kind == null ? 0 : e.kind + 1,
    startTimeUnixNano: t.encodeHrTime(e.startTime),
    endTimeUnixNano: t.encodeHrTime(e.endTime),
    attributes: At(e.attributes),
    droppedAttributesCount: e.droppedAttributesCount,
    events: e.events.map(function(o) {
      return HE(o, t);
    }),
    droppedEventsCount: e.droppedEventsCount,
    status: {
      // API and proto enums share the same values
      code: i.code,
      message: i.message
    },
    links: e.links.map(function(o) {
      return GE(o, t);
    }),
    droppedLinksCount: e.droppedLinksCount
  };
}
function GE(e, t) {
  var r;
  return {
    attributes: e.attributes ? At(e.attributes) : [],
    spanId: t.encodeSpanContext(e.context.spanId),
    traceId: t.encodeSpanContext(e.context.traceId),
    traceState: (r = e.context.traceState) === null || r === void 0 ? void 0 : r.serialize(),
    droppedAttributesCount: e.droppedAttributesCount || 0
  };
}
function HE(e, t) {
  return {
    attributes: e.attributes ? At(e.attributes) : [],
    name: e.name,
    timeUnixNano: t.encodeHrTime(e.time),
    droppedAttributesCount: e.droppedAttributesCount || 0
  };
}
function $E(e, t) {
  var r = Ba(t);
  return {
    resourceSpans: VE(e, r)
  };
}
function jE(e) {
  var t, r, n = /* @__PURE__ */ new Map();
  try {
    for (var i = UE(e), o = i.next(); !o.done; o = i.next()) {
      var a = o.value, u = n.get(a.resource);
      u || (u = /* @__PURE__ */ new Map(), n.set(a.resource, u));
      var c = a.instrumentationLibrary.name + "@" + (a.instrumentationLibrary.version || "") + ":" + (a.instrumentationLibrary.schemaUrl || ""), s = u.get(c);
      s || (s = [], u.set(c, s)), s.push(a);
    }
  } catch (f) {
    t = { error: f };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
function VE(e, t) {
  for (var r = jE(e), n = [], i = r.entries(), o = i.next(); !o.done; ) {
    for (var a = BE(o.value, 2), u = a[0], c = a[1], s = [], f = c.values(), l = f.next(); !l.done; ) {
      var d = l.value;
      if (d.length > 0) {
        var h = d.map(function(p) {
          return kE(p, t);
        });
        s.push({
          scope: Ga(d[0].instrumentationLibrary),
          spans: h,
          schemaUrl: d[0].instrumentationLibrary.schemaUrl
        });
      }
      l = f.next();
    }
    var _ = {
      resource: ka(u),
      scopeSpans: s,
      schemaUrl: void 0
    };
    n.push(_), o = i.next();
  }
  return n;
}
var FE = {
  serializeRequest: function(e) {
    var t = DE([e], {
      useLongBits: !1
    }), r = new TextEncoder();
    return r.encode(JSON.stringify(t));
  },
  deserializeResponse: function(e) {
    var t = new TextDecoder();
    return JSON.parse(t.decode(e));
  }
}, XE = {
  serializeRequest: function(e) {
    var t = $E(e, {
      useHex: !0,
      useLongBits: !1
    }), r = new TextEncoder();
    return r.encode(JSON.stringify(t));
  },
  deserializeResponse: function(e) {
    var t = new TextDecoder();
    return JSON.parse(t.decode(e));
  }
}, zE = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function u(f) {
      try {
        s(n.next(f));
      } catch (l) {
        a(l);
      }
    }
    function c(f) {
      try {
        s(n.throw(f));
      } catch (l) {
        a(l);
      }
    }
    function s(f) {
      f.done ? o(f.value) : i(f.value).then(u, c);
    }
    s((n = n.apply(e, t || [])).next());
  });
}, qE = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: u(0), throw: u(1), return: u(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function u(s) {
    return function(f) {
      return c([s, f]);
    };
  }
  function c(s) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = s[0] & 2 ? i.return : s[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, s[1])).done) return o;
      switch (i = 0, o && (s = [s[0] & 2, o.value]), s[0]) {
        case 0:
        case 1:
          o = s;
          break;
        case 4:
          return r.label++, { value: s[1], done: !1 };
        case 5:
          r.label++, i = s[1], s = [0];
          continue;
        case 7:
          s = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (s[0] === 6 || s[0] === 2)) {
            r = 0;
            continue;
          }
          if (s[0] === 3 && (!o || s[1] > o[0] && s[1] < o[3])) {
            r.label = s[1];
            break;
          }
          if (s[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = s;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(s);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      s = t.call(e, r);
    } catch (f) {
      s = [6, f], i = 0;
    } finally {
      n = o = 0;
    }
    if (s[0] & 5) throw s[1];
    return { value: s[0] ? s[1] : void 0, done: !0 };
  }
}, WE = 5, YE = 1e3, KE = 5e3, JE = 1.5, so = 0.2;
function ZE() {
  return Math.random() * (2 * so) - so;
}
var QE = (
  /** @class */
  function() {
    function e(t) {
      this._transport = t;
    }
    return e.prototype.retry = function(t, r, n) {
      var i = this;
      return new Promise(function(o, a) {
        setTimeout(function() {
          i._transport.send(t, r).then(o, a);
        }, n);
      });
    }, e.prototype.send = function(t, r) {
      var n;
      return zE(this, void 0, void 0, function() {
        var i, o, a, u, c, s, f;
        return qE(this, function(l) {
          switch (l.label) {
            case 0:
              return i = Date.now() + r, [4, this._transport.send(t, r)];
            case 1:
              o = l.sent(), a = WE, u = YE, l.label = 2;
            case 2:
              return o.status === "retryable" && a > 0 ? (a--, c = Math.max(Math.min(u, KE) + ZE(), 0), u = u * JE, s = (n = o.retryInMillis) !== null && n !== void 0 ? n : c, f = i - Date.now(), s > f ? [2, o] : [4, this.retry(t, f, s)]) : [3, 4];
            case 3:
              return o = l.sent(), [3, 2];
            case 4:
              return [2, o];
          }
        });
      });
    }, e.prototype.shutdown = function() {
      return this._transport.shutdown();
    }, e;
  }()
);
function ns(e) {
  return new QE(e.transport);
}
function tg(e) {
  var t = [429, 502, 503, 504];
  return t.includes(e);
}
function eg(e) {
  if (e != null) {
    var t = Number.parseInt(e, 10);
    if (Number.isInteger(t))
      return t > 0 ? t * 1e3 : -1;
    var r = new Date(e).getTime() - Date.now();
    return r >= 0 ? r : 0;
  }
}
var rg = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, ng = (
  /** @class */
  function() {
    function e(t) {
      this._parameters = t;
    }
    return e.prototype.send = function(t, r) {
      var n = this;
      return new Promise(function(i) {
        var o = new XMLHttpRequest();
        o.timeout = r, o.open("POST", n._parameters.url);
        var a = n._parameters.headers();
        Object.entries(a).forEach(function(u) {
          var c = rg(u, 2), s = c[0], f = c[1];
          o.setRequestHeader(s, f);
        }), o.ontimeout = function(u) {
          i({
            status: "failure",
            error: new Error("XHR request timed out")
          });
        }, o.onreadystatechange = function() {
          o.status >= 200 && o.status <= 299 ? (v.debug("XHR success"), i({
            status: "success"
          })) : o.status && tg(o.status) ? i({
            status: "retryable",
            retryInMillis: eg(o.getResponseHeader("Retry-After"))
          }) : o.status !== 0 && i({
            status: "failure",
            error: new Error("XHR request failed with non-retryable status")
          });
        }, o.onabort = function() {
          i({
            status: "failure",
            error: new Error("XHR request aborted")
          });
        }, o.onerror = function() {
          i({
            status: "failure",
            error: new Error("XHR request errored")
          });
        }, o.send(t);
      });
    }, e.prototype.shutdown = function() {
    }, e;
  }()
);
function ig(e) {
  return new ng(e);
}
var og = (
  /** @class */
  function() {
    function e(t) {
      this._params = t;
    }
    return e.prototype.send = function(t) {
      var r = this;
      return new Promise(function(n) {
        navigator.sendBeacon(r._params.url, new Blob([t], { type: r._params.blobType })) ? (v.debug("SendBeacon success"), n({
          status: "success"
        })) : n({
          status: "failure",
          error: new Error("SendBeacon failed")
        });
      });
    }, e.prototype.shutdown = function() {
    }, e;
  }()
);
function ag(e) {
  return new og(e);
}
function sg(e, t) {
  return Ma(e, t, ns({
    transport: ig(e)
  }));
}
function ug(e, t) {
  return Ma(e, t, ns({
    transport: ag({
      url: e.url,
      blobType: e.headers()["Content-Type"]
    })
  }));
}
var cg = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (u) {
    a = { error: u };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function fg(e) {
  return function() {
    var t, r = {};
    return Object.entries((t = e == null ? void 0 : e()) !== null && t !== void 0 ? t : {}).forEach(function(n) {
      var i = cg(n, 2), o = i[0], a = i[1];
      typeof a != "undefined" ? r[o] = String(a) : v.warn('Header "' + o + '" has invalid value (' + a + ") and will be ignored");
    }), r;
  };
}
var St = function() {
  return St = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, St.apply(this, arguments);
};
function lg(e, t, r) {
  var n = St({}, r()), i = {};
  return function() {
    return t != null && Object.assign(i, t()), e != null && Object.assign(i, e()), Object.assign(i, n);
  };
}
function dg(e) {
  if (e != null)
    try {
      return new URL(e), e;
    } catch (t) {
      throw new Error("Configuration: Could not parse user-provided export URL: '" + e + "'");
    }
}
function pg(e, t, r) {
  var n, i, o, a;
  return St(St({}, h_(e, t, r)), { headers: lg(fg(e.headers), t.headers, r.headers), url: (i = (n = dg(e.url)) !== null && n !== void 0 ? n : t.url) !== null && i !== void 0 ? i : r.url, agentOptions: (a = (o = e.agentOptions) !== null && o !== void 0 ? o : t.agentOptions) !== null && a !== void 0 ? a : r.agentOptions });
}
function hg(e, t) {
  return St(St({}, __()), { headers: function() {
    return e;
  }, url: "http://localhost:4318/" + t, agentOptions: { keepAlive: !0 } });
}
function _g(e, t, r) {
  return pg(
    {
      url: e.url,
      timeoutMillis: e.timeoutMillis,
      headers: p_(e.headers),
      concurrencyLimit: e.concurrencyLimit
    },
    {},
    // no fallback for browser case
    hg(r, t)
  );
}
function is(e, t, r, n) {
  var i = !!e.headers || typeof navigator.sendBeacon != "function", o = _g(e, r, n);
  return i ? sg(o, t) : ug(o, t);
}
var vg = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Eg = (
  /** @class */
  function(e) {
    vg(t, e);
    function t(r) {
      return r === void 0 && (r = {}), e.call(this, is(r, XE, "v1/traces", { "Content-Type": "application/json" })) || this;
    }
    return t;
  }(Ca)
), Fe;
(function(e) {
  e[e.DELTA = 0] = "DELTA", e[e.CUMULATIVE = 1] = "CUMULATIVE", e[e.LOWMEMORY = 2] = "LOWMEMORY";
})(Fe || (Fe = {}));
var gg = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), An = function() {
  return X.CUMULATIVE;
}, os = function(e) {
  switch (e) {
    case T.COUNTER:
    case T.OBSERVABLE_COUNTER:
    case T.GAUGE:
    case T.HISTOGRAM:
    case T.OBSERVABLE_GAUGE:
      return X.DELTA;
    case T.UP_DOWN_COUNTER:
    case T.OBSERVABLE_UP_DOWN_COUNTER:
      return X.CUMULATIVE;
  }
}, as = function(e) {
  switch (e) {
    case T.COUNTER:
    case T.HISTOGRAM:
      return X.DELTA;
    case T.GAUGE:
    case T.UP_DOWN_COUNTER:
    case T.OBSERVABLE_UP_DOWN_COUNTER:
    case T.OBSERVABLE_COUNTER:
    case T.OBSERVABLE_GAUGE:
      return X.CUMULATIVE;
  }
};
function yg() {
  var e = ef(), t = e.OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE.trim().toLowerCase();
  return t === "cumulative" ? An : t === "delta" ? os : t === "lowmemory" ? as : (v.warn("OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE is set to '" + e.OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE + "', but only 'cumulative' and 'delta' are allowed. Using default ('cumulative') instead."), An);
}
function mg(e) {
  return e != null ? e === Fe.DELTA ? os : e === Fe.LOWMEMORY ? as : An : yg();
}
function Tg(e) {
  return e != null && e.aggregationPreference ? e.aggregationPreference : function(t) {
    return nt.Default();
  };
}
var Sg = (
  /** @class */
  function(e) {
    gg(t, e);
    function t(r, n) {
      var i = e.call(this, r) || this;
      return i._aggregationSelector = Tg(n), i._aggregationTemporalitySelector = mg(n == null ? void 0 : n.temporalityPreference), i;
    }
    return t.prototype.selectAggregation = function(r) {
      return this._aggregationSelector(r);
    }, t.prototype.selectAggregationTemporality = function(r) {
      return this._aggregationTemporalitySelector(r);
    }, t;
  }(Ca)
), Og = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Ag = (
  /** @class */
  function(e) {
    Og(t, e);
    function t(r) {
      return e.call(this, is(r != null ? r : {}, FE, "v1/metrics", { "Content-Type": "application/json" }), r) || this;
    }
    return t;
  }(Sg)
);
function bg(e, t) {
  const r = e.spanContext();
  return {
    name: e.name,
    kind: e.kind,
    spanContext: () => r,
    parentSpanId: e.parentSpanId,
    startTime: e.startTime,
    endTime: e.endTime,
    status: e.status,
    attributes: Hf(e.attributes, t),
    links: e.links,
    events: e.events,
    duration: e.duration,
    ended: e.ended,
    resource: e.resource,
    instrumentationLibrary: e.instrumentationLibrary,
    droppedAttributesCount: e.droppedAttributesCount,
    droppedEventsCount: e.droppedEventsCount,
    droppedLinksCount: e.droppedLinksCount
  };
}
function wg(e, t) {
  if (!t.isSamplingEnabled())
    return e;
  const r = [], n = {}, i = {};
  for (const o of e) {
    o.parentSpanId && (i[o.parentSpanId] = i[o.parentSpanId] || [], i[o.parentSpanId].push(
      o.spanContext().spanId
    ));
    const a = t.shouldSample(o);
    a.sample ? a.attributes ? n[o.spanContext().spanId] = bg(
      o,
      a.attributes
    ) : n[o.spanContext().spanId] = o : r.push(o.spanContext().spanId);
  }
  for (; r.length > 0; ) {
    const o = r.shift(), a = i[o];
    if (a)
      for (const u of a)
        delete n[u], r.push(u);
  }
  return Object.values(n);
}
class Rg extends Eg {
  constructor(t, r) {
    super(P(O({}, t), {
      headers: {}
      // a truthy value enables sending with XHR instead of beacon
    })), this.sampler = r;
  }
  export(t, r) {
    const n = wg(t, this.sampler);
    if (n.length === 0)
      return;
    let i = 0;
    const o = (a) => {
      if (a.code === M.SUCCESS)
        return r({
          code: M.SUCCESS
        });
      if (i++, i > No)
        return r({
          code: M.FAILED,
          error: a.error
        });
      new Promise(
        (u) => setTimeout(
          u,
          Io + Co * Math.pow(2, i)
        )
      ).then(() => {
        super.export(n, o);
      });
    };
    super.export(n, o);
  }
}
class Lg extends Ag {
  constructor(t) {
    super(P(O({}, t), {
      headers: {}
    }));
  }
  export(t, r) {
    let n = 0;
    const i = (o) => {
      var a;
      if (o.code === M.SUCCESS)
        return r({
          code: M.SUCCESS
        });
      if (n++, n > No)
        return console.error(
          `[@launchdarkly/observability] failed to export OTeL metrics: ${(a = o.error) == null ? void 0 : a.message}`,
          o.error
        ), r({
          code: M.FAILED,
          error: o.error
        });
      new Promise(
        (u) => setTimeout(
          u,
          Io + Co * Math.pow(2, n)
        )
      ).then(() => {
        var u;
        console.warn(
          `[@launchdarkly/observability] retry ${n}, failed to export OTeL metrics: ${(u = o.error) == null ? void 0 : u.message}`,
          o.error
        ), super.export(t, i);
      });
    };
    super.export(t, i);
  }
}
const Pg = "OT_ZONE_CONTEXT", Ng = "Navigation:", Ig = ["click", "input", "submit"];
function Cg() {
  return !1;
}
const q = class q extends el {
  constructor(r = {}) {
    var n;
    super(
      q.moduleName,
      q.version,
      r
    );
    R(this, "_spansData", /* @__PURE__ */ new WeakMap());
    R(this, "_zonePatched");
    // for addEventListener/removeEventListener state
    R(this, "_wrappedListeners", /* @__PURE__ */ new WeakMap());
    // for event bubbling
    R(this, "_eventsSpanMap", /* @__PURE__ */ new WeakMap());
    R(this, "_eventNames");
    R(this, "_shouldPreventSpanCreation");
    this._eventNames = new Set(
      (n = r == null ? void 0 : r.eventNames) != null ? n : Ig
    ), this._shouldPreventSpanCreation = typeof (r == null ? void 0 : r.shouldPreventSpanCreation) == "function" ? r.shouldPreventSpanCreation : Cg;
  }
  init() {
  }
  /**
   * This will check if last task was timeout and will save the time to
   * fix the user interaction when nothing happens
   * This timeout comes from xhr plugin which is needed to collect information
   * about last xhr main request from observer
   * @param task
   * @param span
   */
  _checkForTimeout(r, n) {
    const i = this._spansData.get(n);
    i && (r.source === "setTimeout" ? i.hrTimeLastTimeout = sf() : r.source !== "Promise.then" && r.source !== "setTimeout" && (i.hrTimeLastTimeout = void 0));
  }
  /**
   * Controls whether or not to create a span, based on the event type.
   */
  _allowEventName(r) {
    return this._eventNames.has(r);
  }
  /**
   * Creates a new span
   * @param event
   * @param parentSpan
   */
  _createSpan(r, n) {
    var u;
    const i = r == null ? void 0 : r.target, o = r == null ? void 0 : r.type;
    if (!(i instanceof HTMLElement) || !i.getAttribute || i.hasAttribute("disabled") || !this._allowEventName(o))
      return;
    const a = Aa(i, !0);
    try {
      const c = this.tracer.startSpan(
        o,
        {
          attributes: {
            "event.type": o,
            "event.tag": i.tagName,
            "event.xpath": a,
            "event.id": i.id,
            "event.text": (u = i.textContent) != null ? u : "",
            "event.url": window.location.href,
            "viewport.width": window.innerWidth,
            "viewport.height": window.innerHeight
          }
        },
        n ? A.setSpan(S.active(), n) : void 0
      );
      return r instanceof MouseEvent && (c.setAttribute("event.x", r.clientX), c.setAttribute("event.y", r.clientY), c.setAttribute(
        "event.relativeX",
        r.clientX / window.innerWidth
      ), c.setAttribute(
        "event.relativeY",
        r.clientY / window.innerHeight
      ), o === "scroll" && (c.setAttribute("event.scrollX", window.scrollX), c.setAttribute("event.scrollY", window.scrollY))), this._shouldPreventSpanCreation(o, i, c) === !0 ? void 0 : (this._spansData.set(c, {
        taskCount: 0
      }), c);
    } catch (c) {
      this._diag.error(
        "failed to start create new user interaction span",
        c
      );
    }
  }
  /**
   * Decrement number of tasks that left in zone,
   * This is needed to be able to end span when no more tasks left
   * @param span
   */
  _decrementTask(r) {
    const n = this._spansData.get(r);
    n && (n.taskCount--, n.taskCount === 0 && this._tryToEndSpan(r, n.hrTimeLastTimeout));
  }
  /**
   * Return the current span
   * @param zone
   * @private
   */
  _getCurrentSpan(r) {
    const n = r.get(Pg);
    return n && A.getSpan(n);
  }
  /**
   * Increment number of tasks that are run within the same zone.
   *     This is needed to be able to end span when no more tasks left
   * @param span
   */
  _incrementTask(r) {
    const n = this._spansData.get(r);
    n && n.taskCount++;
  }
  /**
   * Returns true iff we should use the patched callback; false if it's already been patched
   */
  addPatchedListener(r, n, i, o) {
    let a = this._wrappedListeners.get(i);
    a || (a = /* @__PURE__ */ new Map(), this._wrappedListeners.set(i, a));
    let u = a.get(n);
    return u || (u = /* @__PURE__ */ new Map(), a.set(n, u)), u.has(r) ? !1 : (u.set(r, o), !0);
  }
  /**
   * Returns the patched version of the callback (or undefined)
   */
  removePatchedListener(r, n, i) {
    const o = this._wrappedListeners.get(i);
    if (!o)
      return;
    const a = o.get(n);
    if (!a)
      return;
    const u = a.get(r);
    return u && (a.delete(r), a.size === 0 && (o.delete(n), o.size === 0 && this._wrappedListeners.delete(i))), u;
  }
  // utility method to deal with the Function|EventListener nature of addEventListener
  _invokeListener(r, n, i) {
    return typeof r == "function" ? r.apply(n, i) : r.handleEvent(i[0]);
  }
  /**
   * This patches the addEventListener of HTMLElement to be able to
   * auto instrument the click events
   * This is done when zone is not available
   */
  _patchAddEventListener() {
    const r = this;
    let n = /* @__PURE__ */ new Map();
    return (i) => function(a, u, c) {
      if (!u)
        return i.call(this, a, u, c);
      const s = c && typeof c == "object" && c.once, f = function(...l) {
        var p;
        let d;
        const h = l[0];
        if (!(h != null && h.type))
          return r._invokeListener(u, this, l);
        if (Date.now() - ((p = n.get(h.type)) != null ? p : 0) < 1e3 / 60)
          return r._invokeListener(u, this, l);
        n.set(h.type, Date.now()), h && (d = r._eventsSpanMap.get(h)), s && r.removePatchedListener(this, a, u);
        const _ = r._createSpan(h, d);
        return _ ? (h && r._eventsSpanMap.set(h, _), S.with(
          A.setSpan(S.active(), _),
          () => {
            const E = r._invokeListener(
              u,
              this,
              l
            );
            return _.end(), E;
          }
        )) : r._invokeListener(u, this, l);
      };
      if (r.addPatchedListener(
        this,
        a,
        u,
        f
      ))
        return i.call(
          this,
          a,
          f,
          c
        );
    };
  }
  /**
   * This patches the removeEventListener of HTMLElement to handle the fact that
   * we patched the original callbacks
   * This is done when zone is not available
   */
  _patchRemoveEventListener() {
    const r = this;
    return (n) => function(o, a, u) {
      const c = r.removePatchedListener(
        this,
        o,
        a
      );
      return c ? n.call(
        this,
        o,
        c,
        u
      ) : n.call(this, o, a, u);
    };
  }
  /**
   * Most browser provide event listener api via EventTarget in prototype chain.
   * Exception to this is IE 11 which has it on the prototypes closest to EventTarget:
   *
   * * - has addEventListener in IE
   * ** - has addEventListener in all other browsers
   * ! - missing in IE
   *
   * HTMLElement -> Element -> Node * -> EventTarget **! -> Object
   * Document -> Node * -> EventTarget **! -> Object
   * Window * -> WindowProperties ! -> EventTarget **! -> Object
   */
  _getPatchableEventTargets() {
    return window.EventTarget ? [EventTarget.prototype] : [Node.prototype, Window.prototype];
  }
  /**
   * Patches the history api
   */
  _patchHistoryApi() {
    this._unpatchHistoryApi(), this._wrap(history, "replaceState", this._patchHistoryMethod()), this._wrap(history, "pushState", this._patchHistoryMethod()), this._wrap(history, "back", this._patchHistoryMethod()), this._wrap(history, "forward", this._patchHistoryMethod()), this._wrap(history, "go", this._patchHistoryMethod());
  }
  /**
   * Patches the certain history api method
   */
  _patchHistoryMethod() {
    const r = this;
    return (n) => function(...o) {
      const a = `${location.pathname}${location.hash}${location.search}`, u = n.apply(this, o), c = `${location.pathname}${location.hash}${location.search}`;
      return a !== c && r._updateInteractionName(c), u;
    };
  }
  /**
   * unpatch the history api methods
   */
  _unpatchHistoryApi() {
    C(history.replaceState) && this._unwrap(history, "replaceState"), C(history.pushState) && this._unwrap(history, "pushState"), C(history.back) && this._unwrap(history, "back"), C(history.forward) && this._unwrap(history, "forward"), C(history.go) && this._unwrap(history, "go");
  }
  /**
   * Updates interaction span name
   * @param url
   */
  _updateInteractionName(r) {
    const n = A.getSpan(
      S.active()
    );
    n && typeof n.updateName == "function" && n.updateName(`${Ng} ${r}`);
  }
  /**
   * Patches zone cancel task - this is done to be able to correctly
   * decrement the number of remaining tasks
   */
  _patchZoneCancelTask() {
    const r = this;
    return (n) => function(o) {
      const a = Zone.current, u = r._getCurrentSpan(a);
      return u && r._shouldCountTask(o, a) && r._decrementTask(u), n.call(this, o);
    };
  }
  /**
   * Patches zone schedule task - this is done to be able to correctly
   * increment the number of tasks running within current zone but also to
   * save time in case of timeout running from xhr plugin when waiting for
   * main request from PerformanceResourceTiming
   */
  _patchZoneScheduleTask() {
    const r = this;
    return (n) => function(o) {
      const a = Zone.current, u = r._getCurrentSpan(a);
      return u && r._shouldCountTask(o, a) && (r._incrementTask(u), r._checkForTimeout(o, u)), n.call(this, o);
    };
  }
  /**
   * Patches zone run task - this is done to be able to create a span when
   * user interaction starts
   * @private
   */
  _patchZoneRunTask() {
    const r = this;
    return (n) => function(o, a, u) {
      const c = Array.isArray(u) && u[0] instanceof Event ? u[0] : void 0, s = c == null ? void 0 : c.target;
      let f;
      const l = this;
      if (s) {
        if (f = r._createSpan(c), f)
          return r._incrementTask(f), l.run(() => {
            try {
              return S.with(
                A.setSpan(
                  S.active(),
                  f
                ),
                () => {
                  const d = Zone.current;
                  return o._zone = d, n.call(
                    d,
                    o,
                    a,
                    u
                  );
                }
              );
            } finally {
              r._decrementTask(f);
            }
          });
      } else
        f = r._getCurrentSpan(l);
      try {
        return n.call(l, o, a, u);
      } finally {
        f && r._shouldCountTask(o, l) && r._decrementTask(f);
      }
    };
  }
  /**
   * Decides if task should be counted.
   * @param task
   * @param currentZone
   * @private
   */
  _shouldCountTask(r, n) {
    if (r._zone && (n = r._zone), !n || !r.data || r.data.isPeriodic)
      return !1;
    const i = this._getCurrentSpan(n);
    return !i || !this._spansData.get(i) ? !1 : r.type === "macroTask" || r.type === "microTask";
  }
  /**
   * Will try to end span when such span still exists.
   * @param span
   * @param endTime
   * @private
   */
  _tryToEndSpan(r, n) {
    r && this._spansData.get(r) && (r.end(n), this._spansData.delete(r));
  }
  /**
   * implements enable function
   */
  enable() {
    const r = this._getZoneWithPrototype();
    this._diag.debug(
      "applying patch to",
      q.moduleName,
      q.version,
      "zone:",
      !!r
    ), r ? (C(r.prototype.runTask) && (this._unwrap(r.prototype, "runTask"), this._diag.debug("removing previous patch from method runTask")), C(r.prototype.scheduleTask) && (this._unwrap(r.prototype, "scheduleTask"), this._diag.debug(
      "removing previous patch from method scheduleTask"
    )), C(r.prototype.cancelTask) && (this._unwrap(r.prototype, "cancelTask"), this._diag.debug(
      "removing previous patch from method cancelTask"
    )), this._zonePatched = !0, this._wrap(
      r.prototype,
      "runTask",
      this._patchZoneRunTask()
    ), this._wrap(
      r.prototype,
      "scheduleTask",
      this._patchZoneScheduleTask()
    ), this._wrap(
      r.prototype,
      "cancelTask",
      this._patchZoneCancelTask()
    )) : (this._zonePatched = !1, this._getPatchableEventTargets().forEach((i) => {
      C(i.addEventListener) && (this._unwrap(i, "addEventListener"), this._diag.debug(
        "removing previous patch from method addEventListener"
      )), C(i.removeEventListener) && (this._unwrap(i, "removeEventListener"), this._diag.debug(
        "removing previous patch from method removeEventListener"
      )), this._wrap(
        i,
        "addEventListener",
        this._patchAddEventListener()
      ), this._wrap(
        i,
        "removeEventListener",
        this._patchRemoveEventListener()
      );
    })), this._patchHistoryApi();
  }
  /**
   * implements unpatch function
   */
  disable() {
    const r = this._getZoneWithPrototype();
    this._diag.debug(
      "removing patch from",
      q.moduleName,
      q.version,
      "zone:",
      !!r
    ), r && this._zonePatched ? (C(r.prototype.runTask) && this._unwrap(r.prototype, "runTask"), C(r.prototype.scheduleTask) && this._unwrap(r.prototype, "scheduleTask"), C(r.prototype.cancelTask) && this._unwrap(r.prototype, "cancelTask")) : this._getPatchableEventTargets().forEach((i) => {
      C(i.addEventListener) && this._unwrap(i, "addEventListener"), C(i.removeEventListener) && this._unwrap(i, "removeEventListener");
    }), this._unpatchHistoryApi();
  }
  /**
   * returns Zone
   */
  _getZoneWithPrototype() {
    return window.Zone;
  }
};
R(q, "version", "0.1.0"), R(q, "moduleName", "user-interaction");
let bn = q, k = {}, tt;
const Xe = "highlight.record", Mg = "highlight.session_id", ss = "launchdarkly.js.log", xg = "launchdarkly.exception.id", uo = "launchdarkly.sampling.ratio", us = "log.severity", cs = "log.message", Dg = (e, t) => {
  var p, E, g, y, b, L, G, U, Lt;
  if (k.tracerProvider !== void 0) {
    console.warn("OTEL already initialized. Skipping...");
    return;
  }
  tt = e;
  const r = e.backendUrl || void 0 || "https://pub.highlight.io", n = [
    ...(E = (p = e.networkRecordingOptions) == null ? void 0 : p.urlBlocklist) != null ? E : [],
    ...Qh
  ], i = (g = e.environment) != null ? g : "production", o = {
    url: e.otlpEndpoint + "/v1/traces",
    concurrencyLimit: 100,
    timeoutMillis: 3e4,
    // Using any because we were getting an error importing CompressionAlgorithm
    // from @opentelemetry/otlp-exporter-base.
    compression: "gzip",
    keepAlive: !0,
    httpAgentOptions: {
      timeout: 6e4,
      keepAlive: !0
    }
  }, a = new Rg(
    o,
    t
  ), u = new Ug(a, {
    maxExportBatchSize: 100,
    maxQueueSize: 1e3,
    exportTimeoutMillis: o.timeoutMillis,
    scheduledDelayMillis: o.timeoutMillis
  }), c = new ae({
    [Rs]: (y = e.serviceName) != null ? y : "highlight-browser",
    "deployment.environment.name": i,
    "highlight.project_id": e.projectId,
    [ws]: navigator.userAgent,
    "browser.language": navigator.language,
    "telemetry.distro.name": "@highlight-run/observability",
    "telemetry.distro.version": bs
  });
  k.tracerProvider = new lp({
    resource: c,
    mergeResourceWithDefaults: !0,
    spanProcessors: [u]
  }), A.setGlobalTracerProvider(k.tracerProvider);
  const s = new Lg(P(O({}, o), {
    url: e.otlpEndpoint + "/v1/metrics"
  })), f = new $v({
    exporter: s,
    exportIntervalMillis: o.timeoutMillis,
    exportTimeoutMillis: o.timeoutMillis
  });
  k.meterProvider = new RE({ resource: c, readers: [f] }), K.setGlobalMeterProvider(k.meterProvider);
  let l = [];
  ((b = e.instrumentations) == null ? void 0 : b["@opentelemetry/instrumentation-document-load"]) !== !1 && l.push(
    new Pp({
      applyCustomAttributesOnSpan: {
        documentLoad: po,
        documentFetch: po,
        resourceFetch: Hg
      }
    })
  ), ((L = e.instrumentations) == null ? void 0 : L["@opentelemetry/instrumentation-user-interaction"]) !== !1 && l.push(
    new bn({
      eventNames: e.eventNames
    })
  ), (G = e.networkRecordingOptions) != null && G.enabled && (((U = e.instrumentations) == null ? void 0 : U["@opentelemetry/instrumentation-fetch"]) !== !1 && l.push(
    new vh({
      propagateTraceHeaderCorsUrls: ho(
        e.tracingOrigins
      ),
      applyCustomAttributesOnSpan: (B, pt, V) => F(void 0, null, function* () {
        var Ft, Xn, zn;
        if (!B.attributes)
          return;
        const er = B;
        if (er.attributes[Xe] === !1)
          return;
        const rr = er.attributes["http.url"], nr = (Ft = pt.method) != null ? Ft : "GET";
        if (B.updateName(fo(rr, nr, pt.body)), !(V instanceof Response)) {
          B.setAttributes({
            "http.response.error": V.message,
            "http.response.status": V.status
          });
          return;
        }
        lo(
          B,
          pt.body,
          pt.headers,
          e.networkRecordingOptions
        );
        const Ee = yield Ia(
          V,
          (Xn = e.networkRecordingOptions) == null ? void 0 : Xn.bodyKeysToRecord,
          (zn = e.networkRecordingOptions) == null ? void 0 : zn.networkBodyKeysToRedact
        );
        B.setAttribute("http.response.body", Ee);
      })
    })
  ), ((Lt = e.instrumentations) == null ? void 0 : Lt["@opentelemetry/instrumentation-xml-http-request"]) !== !1 && l.push(
    new Jh({
      propagateTraceHeaderCorsUrls: ho(
        e.tracingOrigins
      ),
      applyCustomAttributesOnSpan: (B, pt) => {
        var Ee, Ft;
        const V = pt;
        if (!B.attributes || B.attributes[Xe] === !1)
          return;
        const rr = fo(
          V._url,
          V._method,
          pt.responseText
        );
        B.updateName(rr), lo(
          B,
          V._body,
          V._requestHeaders,
          e.networkRecordingOptions
        );
        const nr = st(
          V._body,
          (Ee = e.networkRecordingOptions) == null ? void 0 : Ee.networkBodyKeysToRedact,
          (Ft = e.networkRecordingOptions) == null ? void 0 : Ft.bodyKeysToRecord,
          V._requestHeaders
        );
        B.setAttribute("http.request.body", nr);
      }
    })
  )), Kf({ instrumentations: l });
  const _ = new Ta();
  return _.enable(), k.tracerProvider.register({
    contextManager: _,
    propagator: new ff({
      propagators: [
        new kc(),
        new Bg({
          backendUrl: r,
          otlpEndpoint: e.otlpEndpoint,
          tracingOrigins: e.tracingOrigins,
          urlBlocklist: n
        })
      ]
    })
  }), k;
};
class Ug extends ma {
  onStart(t, r) {
    t.setAttribute(Mg, ot()), super.onStart(t, r);
  }
  onEnd(t) {
    t.attributes[Xe] !== !1 && super.onEnd(t);
  }
}
class Bg extends Rf {
  constructor(r) {
    super();
    R(this, "highlightEndpoints");
    R(this, "tracingOrigins");
    R(this, "urlBlocklist");
    this.highlightEndpoints = [
      r.backendUrl,
      `${r.otlpEndpoint}/v1/traces`,
      `${r.otlpEndpoint}/v1/logs`,
      `${r.otlpEndpoint}/v1/metrics`
    ], this.tracingOrigins = r.tracingOrigins, this.urlBlocklist = r.urlBlocklist;
  }
  inject(r, n, i) {
    var u;
    const o = A.getSpan(r);
    if (!o || !o.attributes)
      return;
    const a = o.attributes["http.url"];
    typeof a == "string" && (Gg(
      a,
      this.highlightEndpoints,
      this.tracingOrigins,
      this.urlBlocklist
    ) || o.setAttribute(Xe, !1), !Un(
      a,
      (u = this.tracingOrigins) != null ? u : [],
      this.urlBlocklist
    )) || super.inject(r, n, i);
  }
}
const fs = "highlight-browser", Le = fs, co = () => {
  var e;
  return (e = k.tracerProvider) == null ? void 0 : e.getTracer(fs);
}, kg = () => A.getActiveSpan(), Ay = () => F(void 0, null, function* () {
  k.tracerProvider ? (yield k.tracerProvider.forceFlush(), yield k.tracerProvider.shutdown()) : console.warn("OTEL shutdown called without initialized tracerProvider."), k.meterProvider ? (yield k.meterProvider.forceFlush(), yield k.meterProvider.shutdown()) : console.warn("OTEL shutdown called without initialized meterProvider.");
}), fo = (e, t, r) => {
  var u, c, s;
  let n;
  const i = new URL(e), o = i.pathname;
  let a = `${t.toUpperCase()} - ${o}`;
  try {
    if (n = typeof r == "string" ? JSON.parse(r) : r, n && n.query) {
      const f = Ps(n.query), l = ((u = f.definitions[0]) == null ? void 0 : u.kind) === "OperationDefinition" ? (s = (c = f.definitions[0]) == null ? void 0 : c.name) == null ? void 0 : s.value : void 0;
      l && (a = `${l} (GraphQL: ${i.host + i.pathname})`);
    }
  } catch (f) {
  }
  return a;
}, lo = (e, t, r, n) => {
  var f;
  const i = typeof t == "string" ? t : String(t);
  if (!e.attributes)
    return;
  const a = e.attributes["http.url"], u = new URL(a);
  let c;
  try {
    c = t ? JSON.parse(i) : void 0, c.operationName && e.setAttribute(
      "graphql.operation.name",
      c.operationName
    );
  } catch (l) {
  }
  const s = Ra(
    (f = n == null ? void 0 : n.networkHeadersToRedact) != null ? f : [],
    r,
    n == null ? void 0 : n.headerKeysToRecord
  );
  e.setAttributes({
    "highlight.type": "http.request",
    "http.request.headers": JSON.stringify(s),
    "http.request.body": i,
    [Cs]: a,
    [Is]: u.pathname,
    [Ns]: u.search
  }), u.searchParams.size > 0 && e.setAttributes({
    // Custom attribute that displays query string params as an object.
    "url.query_params": JSON.stringify(
      Object.fromEntries(u.searchParams)
    )
  });
}, Gg = (e, t, r, n) => n != null && n.some(
  (o) => e.toLowerCase().includes(o)
) ? !1 : Dn(
  e,
  t
), po = (e) => {
  var o, a, u;
  if (!e.events)
    return;
  const r = e.events, n = {
    unload: H("unloadEventStart", "unloadEventEnd", r),
    dom_interactive: H(
      "fetchStart",
      "domInteractive",
      r
    ),
    dom_content_loaded: H(
      "domContentLoadedEventStart",
      "domContentLoadedEventEnd",
      r
    ),
    dom_complete: H("fetchStart", "domComplete", r),
    load_event: H("loadEventStart", "loadEventEnd", r),
    document_load: H("fetchStart", "loadEventEnd", r),
    first_paint: H("fetchStart", "firstPaint", r),
    first_contentful_paint: H(
      "fetchStart",
      "firstContentfulPaint",
      r
    ),
    domain_lookup: H(
      "domainLookupStart",
      "domainLookupEnd",
      r
    ),
    connect: H("connectStart", "connectEnd", r),
    request: H("requestStart", "requestEnd", r),
    response: H("responseStart", "responseEnd", r)
  }, i = (a = (o = tt == null ? void 0 : tt.getIntegrations) == null ? void 0 : o.call(tt)) != null ? a : [];
  if (n.document_load !== void 0)
    for (const c of i)
      c.recordGauge((u = tt == null ? void 0 : tt.sessionSecureId) != null ? u : "", {
        name: Ls,
        value: n.document_load / 1e6
      });
  Object.entries(n).forEach(([c, s]) => {
    s !== void 0 && (e.setAttribute(`timings.${c}.ns`, s), e.setAttribute(
      `timings.${c}.readable`,
      ls(s)
    ));
  });
};
function H(e, t, r) {
  const n = r.find((u) => u.name === e), i = r.find((u) => u.name === t);
  if (!n || !i)
    return;
  const o = n.time[0] * 1e9 + n.time[1];
  return i.time[0] * 1e9 + i.time[1] - o;
}
const Hg = (e, t) => {
  const r = {
    domain_lookup: (t.domainLookupEnd - t.domainLookupStart) * 1e9,
    connect: (t.connectEnd - t.connectStart) * 1e9,
    request: (t.responseEnd - t.requestStart) * 1e9,
    response: (t.responseEnd - t.responseStart) * 1e9
  };
  Object.entries(r).forEach(([n, i]) => {
    e.setAttribute(`timings.${n}.ns`, i), e.setAttribute(`timings.${n}.readable`, ls(i));
  });
}, ls = (e) => {
  if (e >= 36e11) {
    const a = e / 36e11;
    return `${Number(a.toFixed(1))}h`;
  } else if (e >= 6e10) {
    const a = e / 6e10;
    return `${Number(a.toFixed(1))}m`;
  } else if (e >= 1e9) {
    const a = e / 1e9;
    return `${Number(a.toFixed(1))}s`;
  } else if (e >= 1e6) {
    const a = e / 1e6;
    return `${Number(a.toFixed(1))}ms`;
  } else if (e >= 1e3) {
    const a = e / 1e3;
    return `${Number(a.toFixed(1))}µs`;
  } else
    return `${Number(e.toFixed(1))}ns`;
}, ho = (e) => e === !0 ? [/localhost/, /^\//, new RegExp(window.location.host)] : Array.isArray(e) ? e.map(
  (t) => typeof t == "string" ? new RegExp(t) : t
) : /^$/, $g = 30, jg = () => new Promise(
  (e) => requestAnimationFrame(
    (t) => requestAnimationFrame((r) => e(r - t))
  )
), Vg = () => F(void 0, null, function* () {
  const e = [];
  for (let t = 0; t < $g; t++)
    e.push(yield jg());
  return e.reduce((t, r) => t + r, 0) / e.length;
}), Fg = (e, t) => {
  let r = {}, n = 16.666666666666668;
  Vg().then((c) => n = c);
  const i = (c) => {
    var s;
    r != null && r.event || (r = {
      event: c,
      location: window.location.href,
      timerStart: (s = window.performance) == null ? void 0 : s.now()
    }, window.requestAnimationFrame(o));
  }, o = () => {
    if (!(r != null && r.timerStart)) return;
    const c = window.performance.now() - r.timerStart - n;
    a(c), r = {};
  }, a = (c) => {
    const s = ((/* @__PURE__ */ new Date()).getTime() - t) / 1e3;
    e({
      relativeTimestamp: s,
      jankAmount: c,
      querySelector: u(),
      newLocation: window.location.href != r.location ? window.location.href : void 0
    });
  }, u = () => {
    var c;
    return (c = r == null ? void 0 : r.event) != null && c.target ? Ms(r.event.target) : "";
  };
  return window.addEventListener("click", i, !0), window.addEventListener("keydown", i, !0), () => {
    window.removeEventListener("keydown", i, !0), window.removeEventListener("click", i, !0);
  };
}, Xg = typeof window != "undefined", _o = Xg && "performance" in window && "memory" in performance ? performance : { memory: {} }, zg = (e, t) => {
  let r = 0, n = 0;
  const i = () => {
    const f = ((/* @__PURE__ */ new Date()).getTime() - t) / 1e3, l = _o.memory.jsHeapSizeLimit || 0, d = _o.memory.usedJSHeapSize || 0;
    e({
      jsHeapSizeLimit: l,
      usedJSHeapSize: d,
      relativeTimestamp: f,
      fps: r
    });
  };
  i();
  let o;
  o = setInterval(() => {
    i();
  }, 1e3);
  let a = 0, u = Date.now();
  const c = function() {
    var s = Date.now();
    a++, s > 1e3 + u && (r = Math.round(a * 1e3 / (s - u)), a = 0, u = s), n = requestAnimationFrame(c);
  };
  return c(), () => {
    clearInterval(o), cancelAnimationFrame(n);
  };
};
var ut, ee, ds, ze, wn, ps = -1, Rt = function(e) {
  addEventListener("pageshow", function(t) {
    t.persisted && (ps = t.timeStamp, e(t));
  }, !0);
}, $n = function() {
  return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
}, Qe = function() {
  var e = $n();
  return e && e.activationStart || 0;
}, $ = function(e, t) {
  var r = $n(), n = "navigate";
  return ps >= 0 ? n = "back-forward-cache" : r && (document.prerendering || Qe() > 0 ? n = "prerender" : document.wasDiscarded ? n = "restore" : r.type && (n = r.type.replace(/_/g, "-"))), { name: e, value: t === void 0 ? -1 : t, rating: "good", delta: 0, entries: [], id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: n };
}, jt = function(e, t, r) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(e)) {
      var n = new PerformanceObserver(function(i) {
        Promise.resolve().then(function() {
          t(i.getEntries());
        });
      });
      return n.observe(Object.assign({ type: e, buffered: !0 }, r || {})), n;
    }
  } catch (i) {
  }
}, j = function(e, t, r, n) {
  var i, o;
  return function(a) {
    t.value >= 0 && (a || n) && ((o = t.value - (i || 0)) || i === void 0) && (i = t.value, t.delta = o, t.rating = function(u, c) {
      return u > c[1] ? "poor" : u > c[0] ? "needs-improvement" : "good";
    }(t.value, r), e(t));
  };
}, jn = function(e) {
  requestAnimationFrame(function() {
    return requestAnimationFrame(function() {
      return e();
    });
  });
}, tr = function(e) {
  var t = function(r) {
    r.type !== "pagehide" && document.visibilityState !== "hidden" || e(r);
  };
  addEventListener("visibilitychange", t, !0), addEventListener("pagehide", t, !0);
}, Vn = function(e) {
  var t = !1;
  return function(r) {
    t || (e(r), t = !0);
  };
}, Dt = -1, vo = function() {
  return document.visibilityState !== "hidden" || document.prerendering ? 1 / 0 : 0;
}, qe = function(e) {
  document.visibilityState === "hidden" && Dt > -1 && (Dt = e.type === "visibilitychange" ? e.timeStamp : 0, qg());
}, Eo = function() {
  addEventListener("visibilitychange", qe, !0), addEventListener("prerenderingchange", qe, !0);
}, qg = function() {
  removeEventListener("visibilitychange", qe, !0), removeEventListener("prerenderingchange", qe, !0);
}, Fn = function() {
  return Dt < 0 && (Dt = vo(), Eo(), Rt(function() {
    setTimeout(function() {
      Dt = vo(), Eo();
    }, 0);
  })), { get firstHiddenTime() {
    return Dt;
  } };
}, ve = function(e) {
  document.prerendering ? addEventListener("prerenderingchange", function() {
    return e();
  }, !0) : e();
}, go = [1800, 3e3], hs = function(e, t) {
  t = t || {}, ve(function() {
    var r, n = Fn(), i = $("FCP"), o = jt("paint", function(a) {
      a.forEach(function(u) {
        u.name === "first-contentful-paint" && (o.disconnect(), u.startTime < n.firstHiddenTime && (i.value = Math.max(u.startTime - Qe(), 0), i.entries.push(u), r(!0)));
      });
    });
    o && (r = j(e, i, go, t.reportAllChanges), Rt(function(a) {
      i = $("FCP"), r = j(e, i, go, t.reportAllChanges), jn(function() {
        i.value = performance.now() - a.timeStamp, r(!0);
      });
    }));
  });
}, yo = [0.1, 0.25], Wg = function(e, t) {
  t = t || {}, hs(Vn(function() {
    var r, n = $("CLS", 0), i = 0, o = [], a = function(c) {
      c.forEach(function(s) {
        if (!s.hadRecentInput) {
          var f = o[0], l = o[o.length - 1];
          i && s.startTime - l.startTime < 1e3 && s.startTime - f.startTime < 5e3 ? (i += s.value, o.push(s)) : (i = s.value, o = [s]);
        }
      }), i > n.value && (n.value = i, n.entries = o, r());
    }, u = jt("layout-shift", a);
    u && (r = j(e, n, yo, t.reportAllChanges), tr(function() {
      a(u.takeRecords()), r(!0);
    }), Rt(function() {
      i = 0, n = $("CLS", 0), r = j(e, n, yo, t.reportAllChanges), jn(function() {
        return r();
      });
    }), setTimeout(r, 0));
  }));
}, Jt = { passive: !0, capture: !0 }, Yg = /* @__PURE__ */ new Date(), mo = function(e, t) {
  ut || (ut = t, ee = e, ds = /* @__PURE__ */ new Date(), vs(removeEventListener), _s());
}, _s = function() {
  if (ee >= 0 && ee < ds - Yg) {
    var e = { entryType: "first-input", name: ut.type, target: ut.target, cancelable: ut.cancelable, startTime: ut.timeStamp, processingStart: ut.timeStamp + ee };
    ze.forEach(function(t) {
      t(e);
    }), ze = [];
  }
}, Kg = function(e) {
  if (e.cancelable) {
    var t = (e.timeStamp > 1e12 ? /* @__PURE__ */ new Date() : performance.now()) - e.timeStamp;
    e.type == "pointerdown" ? function(r, n) {
      var i = function() {
        mo(r, n), a();
      }, o = function() {
        a();
      }, a = function() {
        removeEventListener("pointerup", i, Jt), removeEventListener("pointercancel", o, Jt);
      };
      addEventListener("pointerup", i, Jt), addEventListener("pointercancel", o, Jt);
    }(t, e) : mo(t, e);
  }
}, vs = function(e) {
  ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(t) {
    return e(t, Kg, Jt);
  });
}, To = [100, 300], Jg = function(e, t) {
  t = t || {}, ve(function() {
    var r, n = Fn(), i = $("FID"), o = function(c) {
      c.startTime < n.firstHiddenTime && (i.value = c.processingStart - c.startTime, i.entries.push(c), r(!0));
    }, a = function(c) {
      c.forEach(o);
    }, u = jt("first-input", a);
    r = j(e, i, To, t.reportAllChanges), u && tr(Vn(function() {
      a(u.takeRecords()), u.disconnect();
    })), u && Rt(function() {
      var c;
      i = $("FID"), r = j(e, i, To, t.reportAllChanges), ze = [], ee = -1, ut = null, vs(addEventListener), c = o, ze.push(c), _s();
    });
  });
}, Es = 0, zr = 1 / 0, Pe = 0, Zg = function(e) {
  e.forEach(function(t) {
    t.interactionId && (zr = Math.min(zr, t.interactionId), Pe = Math.max(Pe, t.interactionId), Es = Pe ? (Pe - zr) / 7 + 1 : 0);
  });
}, gs = function() {
  return wn ? Es : performance.interactionCount || 0;
}, Qg = function() {
  "interactionCount" in performance || wn || (wn = jt("event", Zg, { type: "event", buffered: !0, durationThreshold: 0 }));
}, So = [200, 500], ys = 0, Oo = function() {
  return gs() - ys;
}, Y = [], qr = {}, Ao = function(e) {
  var t = Y[Y.length - 1], r = qr[e.interactionId];
  if (r || Y.length < 10 || e.duration > t.latency) {
    if (r) r.entries.push(e), r.latency = Math.max(r.latency, e.duration);
    else {
      var n = { id: e.interactionId, latency: e.duration, entries: [e] };
      qr[n.id] = n, Y.push(n);
    }
    Y.sort(function(i, o) {
      return o.latency - i.latency;
    }), Y.splice(10).forEach(function(i) {
      delete qr[i.id];
    });
  }
}, ty = function(e, t) {
  t = t || {}, ve(function() {
    var r;
    Qg();
    var n, i = $("INP"), o = function(u) {
      u.forEach(function(f) {
        f.interactionId && Ao(f), f.entryType === "first-input" && !Y.some(function(l) {
          return l.entries.some(function(d) {
            return f.duration === d.duration && f.startTime === d.startTime;
          });
        }) && Ao(f);
      });
      var c, s = (c = Math.min(Y.length - 1, Math.floor(Oo() / 50)), Y[c]);
      s && s.latency !== i.value && (i.value = s.latency, i.entries = s.entries, n());
    }, a = jt("event", o, { durationThreshold: (r = t.durationThreshold) !== null && r !== void 0 ? r : 40 });
    n = j(e, i, So, t.reportAllChanges), a && ("interactionId" in PerformanceEventTiming.prototype && a.observe({ type: "first-input", buffered: !0 }), tr(function() {
      o(a.takeRecords()), i.value < 0 && Oo() > 0 && (i.value = 0, i.entries = []), n(!0);
    }), Rt(function() {
      Y = [], ys = gs(), i = $("INP"), n = j(e, i, So, t.reportAllChanges);
    }));
  });
}, bo = [2500, 4e3], Wr = {}, ey = function(e, t) {
  t = t || {}, ve(function() {
    var r, n = Fn(), i = $("LCP"), o = function(c) {
      var s = c[c.length - 1];
      s && s.startTime < n.firstHiddenTime && (i.value = Math.max(s.startTime - Qe(), 0), i.entries = [s], r());
    }, a = jt("largest-contentful-paint", o);
    if (a) {
      r = j(e, i, bo, t.reportAllChanges);
      var u = Vn(function() {
        Wr[i.id] || (o(a.takeRecords()), a.disconnect(), Wr[i.id] = !0, r(!0));
      });
      ["keydown", "click"].forEach(function(c) {
        addEventListener(c, function() {
          return setTimeout(u, 0);
        }, !0);
      }), tr(u), Rt(function(c) {
        i = $("LCP"), r = j(e, i, bo, t.reportAllChanges), jn(function() {
          i.value = performance.now() - c.timeStamp, Wr[i.id] = !0, r(!0);
        });
      });
    }
  });
}, wo = [800, 1800], ry = function e(t) {
  document.prerendering ? ve(function() {
    return e(t);
  }) : document.readyState !== "complete" ? addEventListener("load", function() {
    return e(t);
  }, !0) : setTimeout(t, 0);
}, ny = function(e, t) {
  t = t || {};
  var r = $("TTFB"), n = j(e, r, wo, t.reportAllChanges);
  ry(function() {
    var i = $n();
    if (i) {
      var o = i.responseStart;
      if (o <= 0 || o > performance.now()) return;
      r.value = Math.max(o - Qe(), 0), r.entries = [i], n(!0), Rt(function() {
        r = $("TTFB", 0), (n = j(e, r, wo, t.reportAllChanges))(!0);
      });
    }
  });
};
const iy = (e) => (Wg(e), hs(e), Jg(e), ey(e), ny(e), ty(e), () => {
}), xt = typeof navigator != "undefined" && "connection" in navigator ? navigator.connection : {}, oy = (e, t) => {
  const r = () => {
    const o = ((/* @__PURE__ */ new Date()).getTime() - t) / 1e3;
    e({
      relativeTimestamp: o,
      downlink: xt.downlink,
      downlinkMax: xt.downlinkMax,
      effectiveType: xt.effectiveType,
      rtt: xt.rtt,
      saveData: xt.saveData,
      type: xt.type
    });
  };
  r();
  let n;
  return n = setInterval(() => {
    r();
  }, 1e3), () => {
    clearInterval(n);
  };
}, ay = () => {
  if (!("performance" in window && "memory" in performance))
    return {
      getDeviceDetails: void 0,
      getCurrentDeviceDetails: void 0
    };
  const e = window.performance;
  return {
    getDeviceDetails: () => ({
      deviceMemory: sy(
        navigator.deviceMemory || 0
      )
    }),
    getCurrentDeviceDetails: () => {
      const n = Yr(
        e.memory.jsHeapSizeLimit
      ), i = Yr(
        e.memory.totalJSHeapSize
      ), o = Yr(
        e.memory.usedJSHeapSize
      );
      return {
        jsHeapSizeLimit: n,
        totalJSHeapSize: i,
        usedJSHeapSize: o
      };
    }
  };
}, Yr = (e) => e / Math.pow(1e3, 2), sy = (e) => 1024 * e;
function uy(e) {
  return "regexValue" in e;
}
function cy(e) {
  return "matchValue" in e;
}
function fy(e) {
  const t = Math.trunc(e);
  return t === 1 ? !0 : t === 0 ? !1 : Math.floor(Math.random() * t) === 0;
}
class ly {
  /**
   * @param config The sampling configuration.
   * @param sampler The sampler to use. This is intended to be used for testing purposes.
   */
  constructor(t = fy) {
    R(this, "regexCache", /* @__PURE__ */ new Map());
    R(this, "config");
    this.sampler = t;
  }
  setConfig(t) {
    this.config = t;
  }
  isSamplingEnabled() {
    var t, r, n, i;
    return !!((r = (t = this.config) == null ? void 0 : t.logs) != null && r.length || (i = (n = this.config) == null ? void 0 : n.spans) != null && i.length);
  }
  shouldSample(t) {
    var r, n;
    return t.name === ss ? this.sampleLog((r = this.config) == null ? void 0 : r.logs, t) : this.sampleSpan((n = this.config) == null ? void 0 : n.spans, t);
  }
  /**
   * Check if a value matches a match config.
   */
  matchesValue(t, r) {
    if (!t)
      return !1;
    if (cy(t))
      return t.matchValue === r;
    if (uy(t)) {
      const n = t.regexValue;
      if (n === null)
        return !1;
      this.regexCache.has(n) || this.regexCache.set(n, new RegExp(n));
      const i = this.regexCache.get(n);
      if (typeof r == "string")
        return i.test(r);
    }
    return !1;
  }
  /**
   * Check if the attributes match the attribute configs.
   */
  matchesAttributes(t, r) {
    if (t)
      for (const n of t) {
        let i = !1;
        for (const o of Object.keys(r))
          if (this.matchesValue(n.key, o)) {
            const a = r[o];
            if (this.matchesValue(
              n.attribute,
              a
            )) {
              i = !0;
              break;
            }
          }
        if (!i)
          return !1;
      }
    return !0;
  }
  matchEvent(t, r) {
    return !(t.name && !this.matchesValue(t.name, r.name) || t.attributes && (!r.attributes || !this.matchesAttributes(
      t.attributes,
      r.attributes
    )));
  }
  matchesEvents(t, r) {
    if (t)
      for (const n of t) {
        let i = !1;
        for (const o of r)
          if (this.matchEvent(n, o)) {
            i = !0;
            break;
          }
        if (!i)
          return !1;
      }
    return !0;
  }
  /**
   * Attempts to match the span to the config. The span will match only if all defined conditions are met.
   *
   * @param config The config to match against.
   * @param name The name of the span to match.
   * @param attributes The attributes of the span to match.
   * @returns True if the span matches the config, false otherwise.
   */
  matchesSpanConfig(t, r) {
    return !(t.name && !this.matchesValue(t.name, r.name) || !this.matchesAttributes(t.attributes, r.attributes) || !this.matchesEvents(t.events, r.events));
  }
  matchesLogConfig(t, r) {
    if (t.severityText) {
      const n = r[us];
      if (typeof n == "string" && !this.matchesValue(t.severityText, n))
        return !1;
    }
    if (t.message) {
      const n = r[cs];
      if (typeof n == "string" && !this.matchesValue(t.message, n))
        return !1;
    }
    return !!this.matchesAttributes(t.attributes, r);
  }
  /**
   * Sample a span based on the sampling configuration.
   *
   * @param configs The sampling configuration.
   * @param name The name of the span to sample.
   * @param attributes The attributes of the span to sample.
   * @returns The sampling result.
   */
  sampleSpan(t, r) {
    if (t) {
      for (const n of t)
        if (this.matchesSpanConfig(n, r))
          return {
            sample: this.sampler(n.samplingRatio),
            attributes: {
              [uo]: n.samplingRatio
            }
          };
    }
    return {
      sample: !0
    };
  }
  /**
   * Sample a log based on the sampling configuration.
   *
   * @param configs The sampling configuration.
   * @param attributes The attributes of the log to sample.
   * @returns The sampling result.
   */
  sampleLog(t, r) {
    if (t) {
      for (const n of t)
        if (this.matchesLogConfig(n, r.attributes))
          return {
            sample: this.sampler(n.samplingRatio),
            attributes: {
              [uo]: n.samplingRatio
            }
          };
    }
    return {
      sample: !0
    };
  }
}
const Ro = () => {
  const e = {
    end: () => {
    },
    spanContext: () => ({
      traceId: "",
      spanId: "",
      traceFlags: 0
    }),
    setAttribute: (t, r) => e,
    setAttributes: (t) => e,
    addEvent: (t, r, n) => e,
    addLinks: (t) => e,
    setStatus: (t) => e,
    recordException: () => {
    },
    addLink: () => e,
    updateName: () => e,
    isRecording: () => !1
  };
  return e;
}, dy = "exception", py = function(e, t, r) {
  if (!e)
    return;
  const n = O({}, r);
  typeof t == "string" ? n[ar] = t : t && (t.code ? n[or] = t.code.toString() : t.name && (n[or] = t.name), t.message && (n[ar] = t.message), t.stack && (n[xs] = t.stack)), n[or] || n[ar] ? e.addEvent(dy, n) : ru(
    "otel",
    "recordException",
    "warn",
    `Failed to record an exception ${t}`
  );
};
class hy {
  constructor(t) {
    /** Verbose project ID that is exposed to users. Legacy users may still be using ints. */
    R(this, "organizationID");
    R(this, "_options");
    R(this, "_integrations", []);
    R(this, "_gauges", /* @__PURE__ */ new Map());
    R(this, "_counters", /* @__PURE__ */ new Map());
    R(this, "_histograms", /* @__PURE__ */ new Map());
    R(this, "_up_down_counters", /* @__PURE__ */ new Map());
    R(this, "sampler", new ly());
    R(this, "_started", !1);
    R(this, "providers");
    R(this, "graphqlSDK");
    this._options = t, this.organizationID = t.projectId;
  }
  start() {
    return F(this, null, function* () {
      var r, n, i, o, a, u, c, s, f, l, d, h, _, p, E, g;
      if (this._started)
        return;
      this._started = !0, this.providers = Dg(
        {
          backendUrl: (n = (r = this._options) == null ? void 0 : r.backendUrl) != null ? n : "https://pub.observability.app.launchdarkly.com",
          otlpEndpoint: (a = (o = (i = this._options) == null ? void 0 : i.otel) == null ? void 0 : o.otlpEndpoint) != null ? a : "https://otel.observability.app.launchdarkly.com",
          projectId: this._options.projectId,
          sessionSecureId: this._options.sessionSecureId,
          environment: (c = (u = this._options) == null ? void 0 : u.environment) != null ? c : "production",
          networkRecordingOptions: typeof ((s = this._options) == null ? void 0 : s.networkRecording) == "object" ? this._options.networkRecording : void 0,
          tracingOrigins: (f = this._options) == null ? void 0 : f.tracingOrigins,
          serviceName: (d = (l = this._options) == null ? void 0 : l.serviceName) != null ? d : "browser",
          instrumentations: (_ = (h = this._options) == null ? void 0 : h.otel) == null ? void 0 : _.instrumentations,
          eventNames: (E = (p = this._options) == null ? void 0 : p.otel) == null ? void 0 : E.eventNames,
          getIntegrations: () => this._integrations
        },
        this.sampler
      );
      const t = new Bs(
        (g = this._options.backendUrl) != null ? g : "https://pub.observability.app.launchdarkly.com",
        {
          headers: {}
        }
      );
      this.graphqlSDK = Ds(t, Us()), yield this.configureSampling(), this.setupListeners();
    });
  }
  stop() {
    return F(this, null, function* () {
      var t, r, n, i;
      this._started && (this._started = !1, yield Promise.all([
        (r = (t = this.providers) == null ? void 0 : t.tracerProvider) == null ? void 0 : r.shutdown(),
        (i = (n = this.providers) == null ? void 0 : n.meterProvider) == null ? void 0 : i.shutdown()
      ]));
    });
  }
  configureSampling() {
    return F(this, null, function* () {
      try {
        const t = yield this.graphqlSDK.GetSamplingConfig({
          organization_verbose_id: `${this.organizationID}`
        });
        this.sampler.setConfig(t.sampling);
      } catch (t) {
        Mo(
          "sampling",
          "warn",
          `LaunchDarkly Observability: Failed to configure sampling: ${t}`
        );
      }
    });
  }
  _recordLog(t, r, n, i) {
    this.startSpan(ss, (o) => {
      const a = typeof t == "string" ? t : Ut(t), u = i ? Ut(i.map((c) => c.toString())) : void 0;
      if (o == null || o.addEvent("log", O({
        [us]: r,
        [cs]: a,
        "code.stacktrace": u
      }, n)), this._options.reportConsoleErrors && r === "error") {
        o == null || o.recordException(new Error(a)), o == null || o.setStatus({
          code: Ue.ERROR,
          message: a
        });
        const c = new Error(a);
        i && (c.stack = u), this.recordError(c);
      }
    });
  }
  _recordErrorMessage(t, r) {
    this.startSpan("highlight.exception", (n) => {
      var i;
      py(n, (i = t.error) != null ? i : new Error(t.event), {
        [xg]: t.id
      }), n == null || n.setAttributes(O({
        event: t.event,
        type: t.type,
        url: t.url,
        source: t.source,
        lineNumber: t.lineNumber,
        columnNumber: t.columnNumber
      }, r));
    });
    for (const n of this._integrations)
      n.error(ot(), t);
  }
  recordError(t, r, n, i, o) {
    var s, f, l, d;
    t instanceof Error && t.cause && (n = P(O({}, n), {
      "exception.cause": JSON.stringify(t.cause)
    }));
    let a = r ? r + ":" + t.message : t.message;
    o === "React.ErrorBoundary" && (a = "ErrorBoundary: " + a);
    const u = We(t), c = {
      error: t,
      event: a,
      type: o != null ? o : "custom",
      url: window.location.href,
      source: i != null ? i : "",
      lineNumber: (s = u[0]) != null && s.lineNumber ? (f = u[0]) == null ? void 0 : f.lineNumber : 0,
      columnNumber: (l = u[0]) != null && l.columnNumber ? (d = u[0]) == null ? void 0 : d.columnNumber : 0,
      stackTrace: u,
      timestamp: (/* @__PURE__ */ new Date()).toISOString(),
      id: Do()
    };
    this._recordErrorMessage(c, n);
  }
  recordCount(t) {
    const r = K.getMeter(Le);
    let n = this._counters.get(t.name);
    n || (n = r.createCounter(t.name), this._counters.set(t.name, n)), n.add(t.value, P(O({}, t.attributes), {
      "highlight.session_id": ot()
    }));
  }
  recordGauge(t) {
    var o, a, u;
    const r = K.getMeter(Le);
    let n = this._gauges.get(t.name);
    n || (n = r.createGauge(t.name), this._gauges.set(t.name, n)), n.record(t.value, P(O({}, t.attributes), {
      "highlight.session_id": ot()
    }));
    const i = {
      name: t.name,
      value: t.value,
      category: (o = t.attributes) == null ? void 0 : o.category,
      group: (u = (a = t.attributes) == null ? void 0 : a.group) == null ? void 0 : u.toString(),
      tags: t.attributes ? Object.entries(t.attributes).map(([c, s]) => {
        var f;
        return {
          name: c != null ? c : "",
          value: (f = s == null ? void 0 : s.toString()) != null ? f : ""
        };
      }) : []
    };
    for (const c of this._integrations)
      c.recordGauge(
        ot(),
        i
      );
  }
  recordIncr(t) {
    this.recordCount(P(O({}, t), { value: 1 }));
  }
  recordHistogram(t) {
    const r = K.getMeter(Le);
    let n = this._histograms.get(t.name);
    n || (n = r.createHistogram(t.name), this._histograms.set(t.name, n)), n.record(t.value, P(O({}, t.attributes), {
      "highlight.session_id": ot()
    }));
  }
  recordUpDownCounter(t) {
    const r = K.getMeter(Le);
    let n = this._up_down_counters.get(t.name);
    n || (n = r.createUpDownCounter(t.name), this._up_down_counters.set(t.name, n)), n.add(t.value, P(O({}, t.attributes), {
      "highlight.session_id": ot()
    }));
  }
  startSpan(t, r, n, i) {
    const o = co();
    if (!o) {
      const u = Ro();
      return i === void 0 && n === void 0 ? r(u) : i === void 0 ? n(u) : i(u);
    }
    const a = (u, c) => {
      const s = c(u);
      return s instanceof Promise ? s.finally(() => u.end()) : (u.end(), s);
    };
    return i === void 0 && n === void 0 ? o.startActiveSpan(
      t,
      (u) => a(u, r)
    ) : i === void 0 ? o.startActiveSpan(
      t,
      r,
      (u) => a(u, n)
    ) : o.startActiveSpan(
      t,
      r,
      n,
      (u) => a(u, i)
    );
  }
  startManualSpan(t, r, n, i) {
    const o = co();
    if (!o) {
      const a = Ro();
      return i === void 0 && n === void 0 ? r(a) : i === void 0 ? n(a) : i(a);
    }
    return i === void 0 && n === void 0 ? o.startActiveSpan(t, r) : i === void 0 ? o.startActiveSpan(
      t,
      r,
      n
    ) : o.startActiveSpan(
      t,
      r,
      n,
      i
    );
  }
  register(t, r) {
    this._integrations.push(new ks(t, r));
  }
  getHooks(t) {
    return this._integrations.flatMap((r) => {
      var n, i;
      return (i = (n = r.getHooks) == null ? void 0 : n.call(r, t)) != null ? i : [];
    });
  }
  submitViewportMetrics({
    height: t,
    width: r,
    availHeight: n,
    availWidth: i
  }) {
    this.recordGauge({
      name: Nt.ViewportHeight,
      value: t,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    }), this.recordGauge({
      name: Nt.ViewportWidth,
      value: r,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    }), this.recordGauge({
      name: Nt.ScreenHeight,
      value: n,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    }), this.recordGauge({
      name: Nt.ScreenWidth,
      value: i,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    }), this.recordGauge({
      name: Nt.ViewportArea,
      value: t * r,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    });
  }
  setupListeners() {
    var r;
    this._options.disableConsoleRecording || au(
      (n) => {
        var i;
        this._recordLog(
          (i = n.value) == null ? void 0 : i.join(" "),
          n.type,
          n.attributes ? JSON.parse(n.attributes) : {},
          n.trace
        );
      },
      {
        level: (r = this._options.consoleMethodsToRecord) != null ? r : [
          ...Po
        ],
        logger: "console",
        stringifyOptions: {
          depthOfLimit: 10,
          numOfKeysLimit: 100,
          stringLengthLimit: 1e3
        }
      }
    ), this._options.enablePerformanceRecording !== !1 && (zg((n) => {
      Object.entries(n).filter(([i]) => i !== "relativeTimestamp").forEach(
        ([i, o]) => o && this.recordGauge({
          name: i,
          value: o,
          attributes: {
            category: z.Performance,
            group: window.location.href
          }
        })
      );
    }, 0), Fg((n) => {
      this.recordGauge({
        name: "Jank",
        value: n.jankAmount,
        attributes: {
          category: z.WebVital,
          group: n.querySelector
        }
      });
    }, 0)), _u(
      (n) => {
        var a;
        if (Eu.includes(n.event) || gu.some(
          (u) => n.event.includes(u)
        ))
          return;
        const i = new Error(n.event);
        i.stack = Ut(n.stackTrace.map((u) => u.toString()));
        let o = {};
        try {
          n.payload && (o = JSON.parse(n.payload));
        } catch (u) {
        }
        this._recordErrorMessage(
          P(O({}, n), { error: (a = n.error) != null ? a : i }),
          o
        );
      },
      { enablePromisePatch: !!this._options.enablePromisePatch }
    ), iy((n) => {
      const { name: i, value: o } = n;
      this.recordGauge({
        name: i,
        value: o,
        attributes: {
          group: window.location.href,
          category: z.WebVital
        }
      });
    }), Gs((n) => {
      this.submitViewportMetrics(n);
    }), oy((n) => {
      const i = {
        category: z.Performance,
        group: window.location.href
      };
      n.saveData !== void 0 && (i.saveData = n.saveData.toString()), n.effectiveType !== void 0 && (i.effectiveType = n.effectiveType.toString()), n.type !== void 0 && (i.type = n.type.toString()), Object.entries(n).filter(([o]) => o !== "relativeTimestamp").forEach(([o, a]) => {
        Hs(a) && this.recordGauge({
          name: o,
          value: a,
          attributes: i
        });
      });
    }, (/* @__PURE__ */ new Date()).getTime());
    const { getDeviceDetails: t } = ay();
    t && this.recordGauge({
      name: Nt.DeviceMemory,
      value: t().deviceMemory,
      attributes: {
        category: z.Device,
        group: window.location.href
      }
    });
  }
  recordLog(t, r, n) {
    return this._recordLog(t, r, n);
  }
}
class by extends $s {
  constructor(r) {
    super(r);
    R(this, "observe");
    R(this, "options");
    this.options = r;
  }
  initialize(r, n) {
    try {
      if (typeof window == "undefined" || typeof document == "undefined") {
        console.warn(
          "@launchdarkly/observability is not initializing because it is not supported in this environment."
        );
        return;
      }
      if (!r) {
        console.warn(
          "@launchdarkly/observability is not initializing because the SDK credential is undefined."
        );
        return;
      }
      this.configureSession(r, n), this.observe = new hy(P(O({}, n), {
        projectId: r,
        sessionSecureId: this.sessionSecureID
      })), n != null && n.manualStart || this.observe.start(), nu.load(this.observe);
    } catch (i) {
      Mo(
        "Error initializing @launchdarkly/observability SDK",
        "error",
        i
      );
    }
  }
  getMetadata() {
    return {
      name: "@launchdarkly/observability"
    };
  }
  register(r, n) {
    var i;
    (i = this.observe) == null || i.register(r, n);
  }
  getHooks(r) {
    var i, o, a, u;
    const n = O(O({
      [Ks]: r.sdk.name,
      [Ys]: r.sdk.version,
      [Ws]: r.clientSideId,
      [qs]: "LaunchDarkly"
    }, (i = r.application) != null && i.id ? { [zs]: r.application.id } : {}), (o = r.application) != null && o.version ? {
      [Xs]: r.application.version
    } : {});
    return this.initialize(
      (u = (a = r.sdkKey) != null ? a : r.mobileKey) != null ? u : r.clientSideId,
      this.options
    ), [
      {
        getMetadata: () => ({
          name: "@launchdarkly/observability/hooks"
        }),
        afterIdentify: (c, s, f) => {
          var l, d, h, _, p, E, g, y;
          for (const b of (h = (d = (l = this.observe) == null ? void 0 : l.getHooks) == null ? void 0 : d.call(l, r)) != null ? h : [])
            (_ = b.afterIdentify) == null || _.call(b, c, s, f);
          if (f.status === "completed") {
            const b = P(O({}, Kn(c.context)), {
              key: (g = (E = (p = this.options) == null ? void 0 : p.contextFriendlyName) == null ? void 0 : E.call(
                p,
                c.context
              )) != null ? g : sr(c.context),
              timeout: c.timeout,
              canonicalKey: sr(c.context),
              [eu]: f.status
            });
            (y = this.observe) == null || y.recordLog("LD.identify", "info", O(O({}, n), b));
          }
          return s;
        },
        afterEvaluation: (c, s, f) => {
          var h, _, p, E, g;
          for (const y of (p = (_ = (h = this.observe) == null ? void 0 : h.getHooks) == null ? void 0 : _.call(h, r)) != null ? p : [])
            (E = y.afterEvaluation) == null || E.call(y, c, s, f);
          const l = O({
            [Zs]: c.flagKey,
            [js]: JSON.stringify(f.value)
          }, f.variationIndex ? {
            [Js]: f.variationIndex
          } : {});
          if (f.reason)
            for (const y in Jn) {
              const b = y, L = f.reason[b];
              L && (l[Jn[b]] = L);
            }
          c.context && (l[Qs] = JSON.stringify(Kn(c.context)), l[tu] = sr(c.context));
          const d = O(O({}, n), l);
          return (g = this.observe) == null || g.startSpan(Vs, (y) => {
            y && y.addEvent(Fs, d);
          }), s;
        },
        afterTrack: (c) => {
          var s, f, l, d, h;
          for (const _ of (l = (f = (s = this.observe) == null ? void 0 : s.getHooks) == null ? void 0 : f.call(s, r)) != null ? l : [])
            (d = _.afterTrack) == null || d.call(_, c);
          (h = this.observe) == null || h.recordLog("LD.track", "info", O(P(O({}, n), {
            key: c.key,
            value: c.metricValue
          }), typeof c.data == "object" ? c.data : {}));
        }
      }
    ];
  }
}
export {
  Le as B,
  au as C,
  Qh as D,
  _u as E,
  Oy as F,
  Fg as J,
  oy as N,
  by as O,
  zg as P,
  iy as W,
  Sy as X,
  Dn as a,
  Eu as b,
  gu as c,
  yy as d,
  su as e,
  Dg as f,
  ly as g,
  ay as h,
  K as i,
  Pa as j,
  co as k,
  Ro as l,
  Ty as m,
  We as p,
  Do as r,
  Ay as s
};
//# sourceMappingURL=observe-CGLK40ZB.js.map
